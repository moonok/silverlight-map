<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Windows.Controls</name>
    </assembly>
    <members>
        <member name="T:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer">
            <summary>
            AutomationPeer for RadBusyIndicator
            </summary> 
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.#ctor(Telerik.Windows.Controls.RadBusyIndicator)">
            <summary>
            Initializes a new instance of the RadBusyIndicatorAutomationPeer class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            
            </summary>
            <param name="patternInterface"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.GetClassNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.Toggle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.SetValue(System.Double)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.RaiseValuePropertyChangedEvent(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.ToggleState">
            <summary>
            Retrieves the toggle state of the control.
            </summary>
            <remarks>
            For busy indicator control the toggle state is reflected by the IsBusy value.
            True  - ToggleState.On
            False     - ToggleState.Off
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.LargeChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.SmallChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadBusyIndicatorAutomationPeer.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSplitButton">
            <summary>
            A SplitButton control.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ICommandSource">
            <summary>
            Defines an object that knows how to invoke a command. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ICommandSource.Command">
            <summary>
            Gets the command that will be executed when the command source is invoked. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ICommandSource.CommandParameter">
            <summary>
            Represents a user defined data value that can be passed to the command when it is executed. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ICommandSource.CommandTarget">
            <summary>
            The object that the command is being executed on. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.ToggleCornerRadiusProperty">
            <summary>
            Identifies the ToggleCornerRadius property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.ButtonCornerRadiusProperty">
            <summary>
            Identifies the ButtonCornerRadius property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.IsBackgroundVisibleProperty">
            <summary>
            Identifies the IsBackgroundVisible property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.CommandParameterProperty">
            <summary>
            Identifies the CommandParameter property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.CommandProperty">
            <summary>
            Identifies the Command property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.CommandTargetProperty">
            <summary>
            Identifies the CommandTarget property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownIndicatorVisibilityProperty">
            <summary>
            Identifies the DropDownContent property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.AutoOpenDelayProperty">
            <summary>
            Identifies the AutoOpenDelay property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.CloseOnEscapeProperty">
            <summary>
            Identifies the CloseOnEscape property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.IsCheckedProperty">
            <summary>
            Identifies the IsChecked property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.IsToggleProperty">
            <summary>
            Identifies the IsToggle property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownContentProperty">
            <summary>
            Identifies the DropDownContent property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownWidthProperty">
            <summary>
            Identifies the PopupWidth property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownHeightProperty">
            <summary>
            Identifies the PopupHeight property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownMaxWidthProperty">
            <summary>
            Identifies the PopupMaxWidth property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownMaxHeightProperty">
            <summary>
            Identifies the PopupMaxHeight property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.IsOpenProperty">
            <summary>
            Identifies the IsOpen property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.IsButtonPartVisibleProperty">
            <summary>
            Identifies the IsButtonPartVisible property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.IsMouseOverProperty">
            <summary>
            Identifies the IsMouseOver property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownButtonPositionProperty">
            <summary>
            Identifies the DropDownButtonPosition property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownPlacementProperty">
            <summary>
            Identifies the PopupPlacement property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownContentTemplateProperty">
            <summary>
            Identifies the DropDownContentTemplate property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownContentTemplateSelectorProperty">
            <summary>
            Identifies the DropDownContentTemplateSelector property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.TogglePartStyleProperty">
            <summary>
            Identifies the ToggleButtonStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.ButtonPartStyleProperty">
            <summary>
            Identifies the ButtonPartStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.IsFocusedProperty">
            <summary>
            Identifies the IsFocused dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.ToggleContentRotateAngleProperty">
            <summary>
            Identifies the ToggleContentRotateAngle dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.GetToggleContentRotateAngle(System.Windows.DependencyObject)">
            <summary>
            Gets the ToggleContentRotateAngle property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.SetToggleContentRotateAngle(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the ToggleContentRotateAngle property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.ClickEvent">
            <summary>
            Identifies the Click property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.CheckedEvent">
            <summary>
            Occurs when the Button part become checked.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.UncheckedEvent">
            <summary>
            Occurs when the Button part become unchecked.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.ActivateEvent">
            <summary>
            Identifies the Activate routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownClosedEvent">
            <summary>
            Identifies the DropDownClosed property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownOpenedEvent">
            <summary>
            Identifies the DropDownOpened property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSplitButton.DropDownOpeningEvent">
            <summary>
            Identifies the DropDownOpening property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.#ctor">
            <summary>
            Initializes a new instance of the RadSplitButton class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes
            (such as a rebuilding layout pass) call.
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.ApplyDropDownPlacementState">
            <summary>
            Set the placement of the Popup window.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.SetPopupPlacement(Telerik.Windows.Controls.PlacementMode)">
            <summary>
            Initializes the placement of the Popup window.
            </summary>
            <param name="placement">
            Position to place the Popup window.
            </param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.ApplyDropDownButtonPositionState">
            <summary>
            Initializes the position of the DropDown indicator and
            correct the placement of the Popup window.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnActivate">
            <summary>
            Raises the <see cref="E:Activate"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnClick">
            <summary>
            Toggle the IsOpen property and execute the associated Command.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnToggle">
            <summary>
            Toggle the IsChecked property and raise the Checked/Unchecked events.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnChecked">
            <summary>
            Called when IsChecked property is initialised to true. Raises the Checked events.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnUnchecked">
            <summary>
            Called when IsChecked property is initialised to false. Raises the Unchecked events.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Closes the popup on Escape key.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the mouse over and starts the auto open timer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the mouse over and stops the auto open timer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Restarts the auto open timer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnDropDownContentChanged(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnDropDownContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when the DropDownContentTemplate property of a RadSplitButton changes.
            </summary>
            <param name="oldValue">The old value of the DropDownContentTemplate property.</param>
            <param name="newValue">The new value of the DropDownContentTemplate property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnDropDownContentTemplateSelectorChanged(Telerik.Windows.Controls.DataTemplateSelector,Telerik.Windows.Controls.DataTemplateSelector)">
            <summary>
            Called when the DropDownContentTemplateSelector property of a RadSplitButton changes.
            </summary>
            <param name="oldValue">The old value of the DropDownContentTemplateSelector property.</param>
            <param name="newValue">The new value of the DropDownContentTemplateSelector property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSplitButton.OnIsButtonPartVisibleChanged(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.Command">
            <summary>
            Gets the command that will be executed when the command source is invoked.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.CommandParameter">
            <summary>
            Represents a user defined data value that can be passed to the command when it is executed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.CommandTarget">
            <summary>
            The object that the command is being executed on.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.IsOpen">
            <summary>
            Gets or sets whether the popup window is expanded.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.IsFocused">
            <summary>
            Gets or sets the IsFocused propery.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.IsButtonPartVisible">
            <summary>
            Gets or sets whether the button part is visible.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.IsMouseOver">
            <summary>
            Gets or sets whether the mouse pointer is over the button surface.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.DropDownIndicatorVisibility">
            <summary>
            Gets or sets whether the DropDown indicator visibility.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.AutoOpenDelay">
            <summary>
            Gets or sets whether the popup opens when mouse hovers for pointed milliseconds
            Value of zero means no auto open.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.CloseOnEscape">
            <summary>
            Gets or sets whether the popup closes when the Escape key toggles.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.IsChecked">
            <summary>
            Simulates the IsChecked of the ToggleButton.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.IsToggle">
            <summary>
            Gets or sets whether the popup supports toggle mode.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.DropDownContent">
            <summary>
            Gets or sets a content to popup.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.DropDownButtonPosition">
            <summary>
            Gets or sets the position of the drop down indicator.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.DropDownPlacement">
            <summary>
            Gets or sets the position of the popup.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.DropDownContentTemplate">
            <summary>
            Gets or sets the template used to display the drop-down content of the button.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.DropDownContentTemplateSelector">
            <summary>
            Gets or sets the template used to display the drop-down content of the button.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.DropDownWidth">
            <summary>
            Gets or sets the Width of the popup.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.DropDownHeight">
            <summary>
            Gets or sets the Height of the popup.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.DropDownMaxWidth">
            <summary>
            Gets or sets the MaxWidth of the popup.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.DropDownMaxHeight">
            <summary>
            Gets or sets the MaxHeight of the popup.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.TogglePartStyle">
            <summary>
            Gets or sets the style for the ToggleButton used by the SplitButton.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.ButtonPartStyle">
            <summary>
            Gets or sets the style for the Button used by the SplitButton.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.CornerRadius">
            <summary>
            Gets or sets a value that represents the degree to which the corners of the control are rounded. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.ToggleCornerRadius">
            <summary>
            Gets or sets the ToggleCornerRadius dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.ButtonCornerRadius">
            <summary>
            Gets or sets the ButtonCornerRadius dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.IsBackgroundVisible">
            <summary>
            Sets the visual appearance of the chrome not to render in Normal mode.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSplitButton.Click">
            <summary>
            Occurs when the action button is clicked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSplitButton.Checked">
            <summary>
            Occurs when the action button is checked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSplitButton.Unchecked">
            <summary>
            Occurs when the action button is unchecked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSplitButton.Activate">
            <summary>
            Occurs when the action button is clicked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSplitButton.DropDownClosed">
            <summary>
            Occurs when the Popup closed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSplitButton.DropDownOpened">
            <summary>
            Occurs when the Popup opened.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSplitButton.DropDownOpening">
            <summary>
            Occurs when the Popup will be opened.
            If the event handler set True for the Handled proterty then the Popup doesn't open.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSplitButton.PopupPlacementTarget">
            <summary>
            Get/set te placement for the popup element.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ColorToBrushConverter">
            <summary>
            Represents the converter that converts Color values to and from Brush values.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ColorToBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ColorToBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.DateTimeTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DateTimeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance [can convert from] the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="sourceType">Type of the source.</param>
            <returns>
            	<c>true</c> if this instance [can convert from] the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DateTimeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type to the type of this converter.
            </summary>
            <param name="context">The context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="destinationType"/> is null.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.DateTimeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.DateTimeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value.</param>
            <param name="destinationType">Type of the destination.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.DecimalTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DecimalTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance [can convert from] the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="sourceType">Type of the source.</param>
            <returns>
            	<c>true</c> if this instance [can convert from] the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DecimalTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type to the type of this converter.
            </summary>
            <param name="context">The context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="destinationType"/> is null.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.DecimalTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.DecimalTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value.</param>
            <param name="destinationType">Type of the destination.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.OpacityConverter">
            <summary>
            Adds opacity to a specified <seealso cref="T:System.Windows.Media.Color"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.OpacityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.OpacityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the source object.
            </returns>
        </member>
        <member name="T:Telerik.Windows.RadRoutedEventArgs">
            <summary>
            Contains state information and event data associated with a routed event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.RadRoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the RadRoutedEventArgs class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.RadRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent)">
            <summary>
            Initializes a new instance of the RadRoutedEventArgs class, 
            using the supplied routed event identifier. 
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
        </member>
        <member name="M:Telerik.Windows.RadRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the RadRoutedEventArgs class, using 
            the supplied routed event identifier, and providing the opportunity 
            to declare a different source for the event. 
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
            <param name="source">
            An alternate source that will be reported when the event is handled. 
            This pre-populates the Source property.
            </param>
        </member>
        <member name="M:Telerik.Windows.RadRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.
            </summary>
            <param name="genericHandler">The generic handler / delegate implementation to be invoked.</param>
            <param name="genericTarget">The target on which the provided handler should be invoked.</param>
        </member>
        <member name="M:Telerik.Windows.RadRoutedEventArgs.OnSetSource(System.Object)">
            <summary>
            When overridden in a derived class, provides a notification callback entry point whenever the value of the Source property of an instance changes.
            </summary>
            <param name="newSource">The new value that Source is being set to.</param>
        </member>
        <member name="P:Telerik.Windows.RadRoutedEventArgs.RoutedEvent">
            <summary>
            Gets or sets the RoutedEvent associated with this RoutedEventArgs instance. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RadRoutedEventArgs.Source">
            <summary>
            Gets or sets a reference to the object that raised the event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RadRoutedEventArgs.Handled">
            <summary>
            Gets or sets a value that indicates the present state of the event handling 
            for a routed event as it travels the route. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RadRoutedEventArgs.OriginalSource">
            <summary>
            Gets the original reporting source as determined by pure hit testing, 
            before any possible Source adjustment by a parent class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragCuePositionEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.
            </summary>
            <param name="genericHandler">The generic handler / delegate implementation to be invoked.</param>
            <param name="genericTarget">The target on which the provided handler should be invoked.</param>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragCuePositionEventArgs.DragCueOffset">
            <summary>
            Gets a data object that contains the data associated with the corresponding drag event.
            </summary>
        </member>
        <member name="T:Telerik.Windows.DragDrop.DragDecorator">
            <summary>
            A content control that display cursor based on what actions are available
            during a drag operation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDecorator.ReverseZoomTransformProperty">
            <summary>
            Identifies the ReverseZoomTransform dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDecorator.RelativeStartPointProperty">
            <summary>
            Identifies the RelativeStartPoint dependecy property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDecorator.DragVisualOffsetProperty">
            <summary>
            Identifies the DragVisualOffset dependecy property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDecorator.EffectsProperty">
            <summary>
            Identifies the Effects dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDecorator.UseDefaultCursorsProperty">
            <summary>
            Identifies UseDefaultCursors dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDecorator.#ctor">
            <summary>
            Initializes a new instance of the DragDecorator.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDecorator.OnEffectsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            EffectsProperty property changed handler.
            </summary>
            <param name="d">DragContainer that changed its Effects.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDecorator.OnEffectsPropertyChanged">
            <summary>
            Changes the Cursor when the effects property is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDecorator.Update">
            <summary>
            Updates the visual state of the DragContainer.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragDecorator.ReverseZoomTransform">
            <summary>
            Gets or sets the transformation that should be applied on the Image element that shows different cursors.
            This property is used to remove the browser zooming.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragDecorator.DragVisualOffset">
            <summary>
            Gets or sets the offset at which DragVisual will render.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragDecorator.RelativeStartPoint">
            <summary>
            Gets or sets the offset at which the Cursor will render.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragDecorator.Effects">
            <summary>
            Gets or sets the drag drop effects.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragDecorator.UseDefaultCursors">
            <summary>
            Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.
            </summary>
        </member>
        <member name="T:Telerik.Windows.DragDrop.DragDropCompletedEventHandler">
            <summary>
            Represents a method that gives information about the effect about drag-and-drop operation.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Telerik.Windows.DragDrop.DragDropCompletedEventArgs">
            <summary>
            Information about the SW.DragDropCompleted event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.
            </summary>
            <param name="genericHandler">The generic handler / delegate implementation to be invoked.</param>
            <param name="genericTarget">The target on which the provided handler should be invoked.</param>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragDropCompletedEventArgs.Effects">
            <summary>
            Gets the effect of the drag operation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragDropCompletedEventArgs.Data">
            <summary>
            Gets a data object that contains the data associated with the corresponding drag event.
            </summary>
        </member>
        <member name="T:System.Windows.DragDropEffects">
            <summary>
            Specifies the effects of a drag-and-drop operation.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.Scroll">
            <summary>
            Scrolling is about to start or is currently occurring in the drop target.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.All">
            <summary>
            The data is copied, removed from the drag source, and scrolled in the drop
            target.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.None">
            <summary>
            The drop target does not accept the data.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.Copy">
            <summary>
            The data is copied to the drop target.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.Move">
            <summary>
            The data from the drag source is moved to the drop target.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.Link">
            <summary>
            The data from the drag source is linked to the drop target.
            </summary>
        </member>
        <member name="T:System.Windows.DragDropKeyStates">
            <summary>
            Specifies the current state of the modifier keys (SHIFT, CTRL, and ALT),
            as well as the state of the mouse buttons.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.None">
            <summary>
            No modifier keys or mouse buttons are pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.LeftMouseButton">
            <summary>
            The left mouse button is pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.RightMouseButton">
            <summary>
            The right mouse button is pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.ShiftKey">
            <summary>
            The shift (SHIFT) key is pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.ControlKey">
            <summary>
            The control (CTRL) key is pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.MiddleMouseButton">
            <summary>
            The middle mouse button is pressed.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropKeyStates.AltKey">
            <summary>
            The ALT key is pressed.
            </summary>
        </member>
        <member name="T:System.Windows.DragAction">
            <summary>
            Specifies how and if a drag-and-drop operation should continue.
            </summary>
        </member>
        <member name="F:System.Windows.DragAction.Continue">
            <summary>
            The operation will continue.
            </summary>
        </member>
        <member name="F:System.Windows.DragAction.Drop">
            <summary>
            The operation will stop with a drop.
            </summary>
        </member>
        <member name="F:System.Windows.DragAction.Cancel">
            <summary>
            The operation is canceled with no drop message.
            </summary>
        </member>
        <member name="T:Telerik.Windows.DragDrop.DragDropManager">
            <summary>
            Provides helper methods and fields for initiating drag-and-drop operations, including a method to begin a drag-and-drop operation, and facilities for adding and removing drag-and-drop related event handlers.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.AllowDragProperty">
            <summary>
            Identifies the AllowDrag attached dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.DragEnterEvent">
            <summary>
            Identifies the DragEnter attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.DragLeaveEvent">
            <summary>
            Identifies the DragLeave attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.DragOverEvent">
            <summary>
            Identifies the DragOver attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.DropEvent">
            <summary>
            Identifies the Drop attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.GiveFeedbackEvent">
            <summary>
            Identifies the GiveFeedback attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.PreviewDragEnterEvent">
            <summary>
            Identifies the PreviewDragEnter attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.PreviewDragLeaveEvent">
            <summary>
            Identifies the PreviewDragLeave attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.PreviewDragOverEvent">
            <summary>
            Identifies the PreviewDragOver attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.PreviewDropEvent">
            <summary>
            Identifies the PreviewDrop attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.PreviewGiveFeedbackEvent">
            <summary>
            Identifies the PreviewGiveFeedback attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.PreviewQueryContinueDragEvent">
            <summary>
            Identifies the PreviewQueryContinueDrag attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.QueryContinueDragEvent">
            <summary>
            Identifies the QueryContinueDrag attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.DragDropCompletedEvent">
            <summary>
            Identifies the DragDropCompleted attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.DragInitializeEvent">
            <summary>
            Identifies the DragInitialize attached event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.DragDrop.DragDropManager.DragCuePositionEvent">
            <summary>
            Identifies the DragCuePositionEvent attached event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDragInitializeHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragInitializeEventHandler)">
            <summary>
            Adds a DragInitialize event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The DragInitialize event occurs when an object is about to be dragged. All needed information about the drag should be passed to the event arguments.
            Drag start can be stopped by setting Cancel=true.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDragInitializeHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragInitializeEventHandler,System.Boolean)">
            <summary>
            Adds a DragInitialize event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The DragInitialize event occurs when an object is about to be dragged. All needed information about the drag should be passed to the event arguments.
            Drag start can be stopped by setting Cancel=true.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemoveDragInitializeHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragInitializeEventHandler)">
            <summary>
            Removes a DragInitialize event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The DragInitialize event occurs when an object is about to be dragged. All needed information about the drag should be passed to the event arguments.
            Drag start can be stopped by setting Cancel=true.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDragEnterHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Adds a DragEnter event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The DragEnter event occurs when an object is dragged into the element's bounds.
            This method adds a handler for the bubbling version of the DragEnter event. To add a handler for the tunneling version of this event, see AddPreviewDragEnterHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDragEnterHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler,System.Boolean)">
            <summary>
            Adds a DragEnter event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The DragEnter event occurs when an object is dragged into the element's bounds.
            This method adds a handler for the bubbling version of the DragEnter event. To add a handler for the tunneling version of this event, see AddPreviewDragEnterHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewDragEnterHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Adds a PreviewDragEnter event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The PreviewDragEnter event occurs when an object is dragged into the element's bounds.
            This method adds a handler for the tunneling version of the PreviewDragEnter event. To add a handler for the bubbling version of this event, see AddDragEnterHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewDragEnterHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler,System.Boolean)">
            <summary>
            Adds a PreviewDragEnter event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The PreviewDragEnter event occurs when an object is dragged into the element's bounds.
            This method adds a handler for the tunneling version of the PreviewDragEnter event. To add a handler for the bubbling version of this event, see AddDragEnterHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDragLeaveHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Adds a DragLeave event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The DragLeave event occurs when an object is dragged out of the element's bounds.
            This method adds a handler for the bubbling version of the DragLeave event. To add a handler for the tunneling version of this event, see AddPreviewDragLeaveHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDragLeaveHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler,System.Boolean)">
            <summary>
            Adds a DragLeave event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The DragLeave event occurs when an object is dragged out of the element's bounds.
            This method adds a handler for the bubbling version of the DragLeave event. To add a handler for the tunneling version of this event, see AddPreviewDragLeaveHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewDragLeaveHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Adds a PreviewDragLeave event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The PreviewDragLeave event occurs when an object is dragged out of the element's bounds.
            This method adds a handler for the tunneling version of the PreviewDragLeave event. To add a handler for the bubbling version of this event, see AddDragLeaveHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewDragLeaveHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler,System.Boolean)">
            <summary>
            Adds a PreviewDragLeave event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The PreviewDragLeave event occurs when an object is dragged out of the element's bounds.
            This method adds a handler for the tunneling version of the PreviewDragLeave event. To add a handler for the bubbling version of this event, see AddDragLeaveHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDragOverHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Adds a DragOver event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The DragOver event occurs when an object is dragged over the element's bounds.
            This method adds a handler for the bubbling version of the DragOver event. To add a handler for the tunneling version of this event, see AddPreviewDragOverHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDragOverHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler,System.Boolean)">
            <summary>
            Adds a DragOver event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The DragOver event occurs when an object is dragged over the element's bounds.
            This method adds a handler for the bubbling version of the DragOver event. To add a handler for the tunneling version of this event, see AddPreviewDragOverHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewDragOverHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Adds a PreviewDragOver event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The PreviewDragOver event occurs when an object is dragged over the element's bounds.
            This method adds a handler for the tunneling version of the PreviewDragOver event. To add a handler for the bubbling version of this event, see AddDragOverHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewDragOverHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler,System.Boolean)">
            <summary>
            Adds a PreviewDragOver event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The PreviewDragOver event occurs when an object is dragged over the element's bounds.
            This method adds a handler for the tunneling version of the PreviewDragOver event. To add a handler for the bubbling version of this event, see AddDragOverHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDropHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Adds a Drop event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The Drop event occurs when an object is dropped within an element's bounds.
            This method adds a handler for the bubbling version of the Drop event. To add a handler for the tunneling version of this event, see AddPreviewDropHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDropHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler,System.Boolean)">
            <summary>
            Adds a Drop event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The Drop event occurs when an object is dropped within an element's bounds.
            This method adds a handler for the bubbling version of the Drop event. To add a handler for the tunneling version of this event, see AddPreviewDropHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewDropHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Adds a PreviewDrop event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The PreviewDrop event occurs when an object is dropped within an element's bounds.
            This method adds a handler for the tunneling version of the PreviewDrop event. To add a handler for the bubbling version of this event, see AddDropHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewDropHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler,System.Boolean)">
            <summary>
            Adds a PreviewDrop event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The PreviewDrop event occurs when an object is dropped within an element's bounds.
            This method adds a handler for the tunneling version of the PreviewDrop event. To add a handler for the bubbling version of this event, see AddDropHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddGiveFeedbackHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.GiveFeedbackEventHandler)">
            <summary>
            Adds a GiveFeedback event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The GiveFeedback event occurs during a drag operation.
            This method adds a handler for the bubbling version of the GiveFeedback event. To add a handler for the tunneling version of this event, see AddPreviewGiveFeedbackHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddGiveFeedbackHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.GiveFeedbackEventHandler,System.Boolean)">
            <summary>
            Adds a GiveFeedback event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The GiveFeedback event occurs during a drag operation.
            This method adds a handler for the bubbling version of the GiveFeedback event. To add a handler for the tunneling version of this event, see AddPreviewGiveFeedbackHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewGiveFeedbackHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.GiveFeedbackEventHandler)">
            <summary>
            Adds a PreviewGiveFeedback event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The PreviewGiveFeedback event occurs during a drag operation.
            This method adds a handler for the tunneling version of the PreviewGiveFeedback event. To add a handler for the bubbling version of this event, see AddGiveFeedbackHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewGiveFeedbackHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.GiveFeedbackEventHandler,System.Boolean)">
            <summary>
            Adds a PreviewGiveFeedback event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The PreviewGiveFeedback event occurs during a drag operation.
            This method adds a handler for the tunneling version of the PreviewGiveFeedback event. To add a handler for the bubbling version of this event, see AddGiveFeedbackHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddQueryContinueDragHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.QueryContinueDragEventHandler)">
            <summary>
            Adds a QueryContinueDrag event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The QueryContinueDrag event occurs during a drag-and-drop operation, and enables the drag source to determine whether the drag-and-drop operation should be canceled.
            This method adds a handler for the tunneling version of the QueryContinueDrag event. To add a handler for the bubbling version of this event, see AddPreviewQueryContinueDragHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddQueryContinueDragHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.QueryContinueDragEventHandler,System.Boolean)">
            <summary>
            Adds a QueryContinueDrag event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The QueryContinueDrag event occurs during a drag-and-drop operation, and enables the drag source to determine whether the drag-and-drop operation should be canceled.
            This method adds a handler for the tunneling version of the QueryContinueDrag event. To add a handler for the bubbling version of this event, see AddPreviewQueryContinueDragHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewQueryContinueDragHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.QueryContinueDragEventHandler)">
            <summary>
            Adds a PreviewQueryContinueDrag event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The PreviewQueryContinueDrag event occurs during a drag-and-drop operation, and enables the drag source to determine whether the drag-and-drop operation should be canceled.
            This method adds a handler for the tunneling version of the PreviewQueryContinueDrag event. To add a handler for the bubbling version of this event, see AddQueryContinueDragHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddPreviewQueryContinueDragHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.QueryContinueDragEventHandler,System.Boolean)">
            <summary>
            Adds a PreviewQueryContinueDrag event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The PreviewQueryContinueDrag event occurs during a drag-and-drop operation, and enables the drag source to determine whether the drag-and-drop operation should be canceled.
            This method adds a handler for the tunneling version of the PreviewQueryContinueDrag event. To add a handler for the bubbling version of this event, see AddQueryContinueDragHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDragDropCompletedHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragDropCompletedEventHandler)">
            <summary>
            Adds a DragDropCompleted event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <remarks>The DragDropCompleted event occurs when an drag-and-drop operation ends(On Drop or Cancel).
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.AddDragDropCompletedHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragDropCompletedEventHandler,System.Boolean)">
            <summary>
            Adds a DragDropCompleted event handler to a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) to which to add the event handler.</param>
            <param name="handler">A delegate that references the handler method to be added.</param>
            <param name="handledEventsToo">true to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled. 
            The default is false</param>
            <remarks>The DragDropCompleted event occurs when an drag-and-drop operation ends(On Drop or Cancel).
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemoveDragDropCompletedHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragDropCompletedEventHandler)">
            <summary>
            Removes a DragDropCompleted event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The DragDropCompleted event occurs when an drag-and-drop operation ends(On Drop or Cancel).
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemoveDragEnterHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Removes a DragEnter event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The DragEnter event occurs when an object is dragged into the element's bounds.
            This method removes a handler for the bubbling version of the DragEnter event. To remove a handler for the tunneling version of this event, see RemovePreviewDragEnterHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemovePreviewDragEnterHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Removes a PreviewDragEnter event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The PreviewDragEnter event occurs when an object is dragged into the element's bounds.
            This method removes a handler for the tunneling version of the PreviewDragEnter event. To remove a handler for the bubbling version of this event, see RemoveDragEnterHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemoveDragLeaveHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Removes a DragLeave event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The DragLeave event occurs when an object is dragged out of the element's bounds.
            This method removes a handler for the bubbling version of the DragLeave event. To remove a handler for the tunneling version of this event, see RemovePreviewDragLeaveHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemovePreviewDragLeaveHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Removes a PreviewDragLeave event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The PreviewDragLeave event occurs when an object is dragged out of the element's bounds.
            This method removes a handler for the tunneling version of the PreviewDragLeave event. To remove a handler for the bubbling version of this event, see RemoveDragLeaveHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemoveDragOverHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Removes a DragOver event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The DragOver event occurs when an object is dragged over the element's bounds.
            This method removes a handler for the bubbling version of the DragOver event. To remove a handler for the tunneling version of this event, see RemovePreviewDragOverHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemovePreviewDragOverHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Removes a PreviewDragOver event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The PreviewDragOver event occurs when an object is dragged over the element's bounds.
            This method removes a handler for the tunneling version of the PreivewDragOver event. To remove a handler for the bubbling version of this event, see RemoveDragOverHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemoveDropHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Removes a Drop event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The Drop event occurs when an object is dropped within an element's bounds.
            This method removes a handler for the bubbling version of the Drop event. To remove a handler for the bubbling version of this event, see RemovePreviewDropHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemovePreviewDropHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.DragEventHandler)">
            <summary>
            Removes a PreviewDrop event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The PreviewDrop event occurs when an object is dropped within an element's bounds.
            This method removes a handler for the tunneling version of the PreviewDrop event. To remove a handler for the bubbling version of this event, see RemoveDropHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemoveGiveFeedbackHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.GiveFeedbackEventHandler)">
            <summary>
            Removes a GiveFeedback event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The GiveFeedback event occurs during a drag operation.
            This method removes a handler for the bubbling version of the GiveFeedback event. To remove a handler for the tunneling version of this event, see RemovePreviewGiveFeedbackHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemovePreviewGiveFeedbackHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.GiveFeedbackEventHandler)">
            <summary>
            Removes a PreviewGiveFeedback event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The PreviewGiveFeedback event occurs during a drag operation.
            This method removes a handler for the tunneling version of the PreviewGiveFeedback event. To remove a handler for the bubbling version of this event, see RemoveGiveFeedbackHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemoveQueryContinueDragHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.QueryContinueDragEventHandler)">
            <summary>
            Removes a QueryContinueDrag event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The QueryContinueDrag event occurs during a drag-and-drop operation, and enables the drag source to determine whether the drag-and-drop operation should be canceled.
            This method removes a handler for the bubbling version of the QueryContinueDrag event. To remove a handler for the tunneling version of this event, see RemovePreviewQueryContinueDragHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.RemovePreviewQueryContinueDragHandler(System.Windows.DependencyObject,Telerik.Windows.DragDrop.QueryContinueDragEventHandler)">
            <summary>
            Removes a PreviewQueryContinueDrag event handler from a specified dependency object.
            </summary>
            <param name="element">The dependency object (a UIElement or ContentElement) from which to remove the event handler.</param>
            <param name="handler">A delegate that references the handler method to be removed.</param>
            <remarks>The PreviewQueryContinueDrag event occurs during a drag-and-drop operation, and enables the drag source to determine whether the drag-and-drop operation should be canceled.
            This method removes a handler for the tunneling version of the PreviewQueryContinueDrag event. To remove a handler for the bubbling version of this event, see RemoveQueryContinueDragHandler.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.GetAllowDrag(System.Windows.DependencyObject)">
            <summary>
            Gets a value indicating whether this element can raise DragInitialize event and be used as the source of a drag-and-drop operation.
            </summary>
            <param name="obj">The object from which the property value is read.</param>
            <returns>True if element can start automatic drag-and-drop operation, otherwise False. The default value is False.</returns>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.SetAllowDrag(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a value indicating whether this element can raise DragInitialize event and be used as the source of a drag-and-drop operation.
            </summary>
            <param name="obj">The object on which to set the value.</param>
            <param name="value">Boolean value specifing if this element can automatically raise DragInitialize event and be used as the source of a drag-and-drop operation.</param>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.DoDragDrop(System.Windows.DependencyObject,System.Object,System.Windows.DragDropEffects,System.Windows.DragDropKeyStates)">
            <summary>
            Initiates a drag-and-drop operation.
            </summary>
            <param name="dragSource">A reference to the dependency object that is the source of the data being dragged.</param>
            <param name="data">A data object that contains the data being dragged.</param>
            <param name="allowedEffects">One of the System.Windows.DragDropEffects values that specifies permitted effects of the drag-and-drop operation.</param>
            <param name="initialKeyState">The initial key state when the drag operation begins.</param>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragDropManager.DoDragDrop(System.Windows.DependencyObject,System.Object,System.Windows.DragDropEffects,System.Windows.DragDropKeyStates,System.Object,System.Windows.Point,System.Windows.Point)">
            <summary>
            Initiates a drag-and-drop operation.
            </summary>
            <param name="dragSource">A reference to the dependency object that is the source of the data being dragged.</param>
            <param name="data">A data object that contains the data being dragged.</param>
            <param name="allowedEffects">One of the System.Windows.DragDropEffects values that specifies permitted effects of the drag-and-drop operation.</param>
            <param name="initialKeyState">The initial key state when the drag operation begins.</param>
            <param name="dragVisual">The object to show while drag-and-drop operation is in progress.</param>
            <param name="relativeStartPoint">Cursor offset relative to dragSource element.</param>
            <param name="dragVisualOffset">DragVisual offset relative to dragSource element.</param>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragDropManager.MinimumHorizontalDragDistance">
            <summary>
            Gets or sets the width of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins.
            The default value is 4.0.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragDropManager.MinimumVerticalDragDistance">
            <summary>
            Gets or sets the height of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragDropManager.DefaultDragDropEffects">
            <summary>
            Gets or sets the AllowedEffect for a drag-and-drop operation if such are not specified in DragInitialize event arguments.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragDropManager.IsDragInProgress">
            <summary>
            Gets a value indicating whether a drag is in progress.
            </summary>
        </member>
        <member name="T:Telerik.Windows.DragDrop.DragEventHandler">
            <summary>
            Represents a method that will handle drag-and-drop routed events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Telerik.Windows.DragDrop.DragEventArgs">
            <summary>
            Contains arguments relevant to all drag-and-drop events (Telerik.Windows.DragDropManager.DragEnter,
            Telerik.Windows.DragDropManager.DragLeave, Telerik.Windows.DragDropManager.DragOver, and
            Telerik.Windows.DragDropManager.Drop).
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragEventArgs.#ctor(Telerik.Windows.DragDrop.DragEventArgs)">
            <summary>
            Initializes a new instance of the DragEventArgs class.
            </summary>
            <param name="e">The DragEventArgs object to use as the base for this DragEventArgs.</param>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragEventArgs.#ctor(System.Windows.DragDropEffects,System.Object,System.Windows.DragDropEffects,System.Windows.Input.MouseEventArgs)">
            <summary>
            Initializes a new instance of the DragEventArgs class.
            </summary>
            <param name="allowedEffects">The AllowedEffects default value.</param>
            <param name="data">The data object to use.</param>
            <param name="effects">The Effects default value.</param>
            <param name="mouseEventArgs">The MouseEventArgs to use in GetPosition method.</param>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragEventArgs.GetPosition(System.Windows.UIElement)">
            <summary>
            Returns a drop point that is relative to a specified System.Windows.UIElement.
            </summary>
            <param name="relativeTo">A UIElement object for which to get a relative drop point.</param>
            <returns>A drop point that is relative to the element specified in relativeTo.</returns>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.
            </summary>
            <param name="genericHandler">The generic handler / delegate implementation to be invoked.</param>
            <param name="genericTarget">The target on which the provided handler should be invoked.</param>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragEventArgs.AllowedEffects">
            <summary>
            Gets a member of the System.Windows.DragDropEffects enumeration that specifies
            which operations are allowed by the originator of the drag event.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragEventArgs.Data">
            <summary>
            Gets a data object that contains the data associated with the corresponding
            drag event.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragEventArgs.Effects">
            <summary>
            Gets or sets the target drop-and-drop operation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragEventArgs.MouseEventArgs">
            <summary>
            Gets or sets the MouseEventArgs related to the DragEventArgs.
            </summary>
        </member>
        <member name="T:Telerik.Windows.DragDrop.DragInitializeEventHandler">
            <summary>
            Represents a method that will handle the initialization of drag-and-drop operation and populate the needed data.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Telerik.Windows.DragDrop.DragInitializeEventArgs">
            <summary>
            Contains arguments for the Telerik.Windows.DragDropManager.DragInitialize event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragInitializeEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.
            </summary>
            <param name="genericHandler">The generic handler / delegate implementation to be invoked.</param>
            <param name="genericTarget">The target on which the provided handler should be invoked.</param>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragInitializeEventArgs.Data">
            <summary>
             Gets or sets the data that will be used for drag-and-drop operation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragInitializeEventArgs.AllowedEffects">
            <summary>
             Gets or sets the AllowedEffect that will be used for drag-and-drop operation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragInitializeEventArgs.RelativeStartPoint">
            <summary>
             Gets or sets the cursor offset relative to the drag source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragInitializeEventArgs.DragVisualOffset">
            <summary>
             Gets or sets the mouse offset relative to the drag source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragInitializeEventArgs.Cancel">
            <summary>
            Gets or sets whether drag-and-drop operation should start.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragInitializeEventArgs.DragVisual">
            <summary>
            Gets or sets the element to show while drag-and-drop operation is in progress.
            This element should not be in the visual tree.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragOperation.RaiseDragSourceEvents(Telerik.Windows.DragDrop.DragEventArgs)">
            <summary>
            Raises the GiveFeedback and QueryContinueDrag events on the drag
            source.
            </summary>
            <param name="args">Information about the last drag event.</param>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragOperation.OnDragSourceGiveFeedback(Telerik.Windows.DragDrop.DragEventArgs)">
            <summary>
            Raises the GiveFeedback event on the drag source.
            </summary>
            <param name="args">Information about the GiveFeedback event.
            </param>
        </member>
        <member name="M:Telerik.Windows.DragDrop.DragOperation.GetDragDropEffects">
            <summary>
            Returns the allowed effects by analyzing the state of the keys pressed.
            If the control key is pressed the user is requesting a copy. 
            If copy is available the effect will be only copy, if not available the effect will be None.
            </summary>
            <returns>The effects of the drag operation.</returns>
        </member>
        <member name="P:Telerik.Windows.DragDrop.DragOperation.KeyStates">
            <summary>
            Gets or sets the state of the input keys relevant to drag 
            operations.
            </summary>
        </member>
        <member name="T:Telerik.Windows.DragDrop.GiveFeedbackEventHandler">
            <summary>
            Represents a method that will handle the feedback routed event from in-process drag-and-drop operations.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Telerik.Windows.DragDrop.GiveFeedbackEventArgs">
            <summary>
            Contains arguments for the Telerik.Windows.DragDrop.GiveFeedback event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.GiveFeedbackEventArgs.#ctor(System.Windows.DragDropEffects,System.Boolean)">
            <summary>
            Initializes a new instance of the GiveFeedbackEventArgs class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.GiveFeedbackEventArgs.SetCursor(System.Windows.Input.Cursor)">
            <summary>
            Sets the mouse pointer to the specified Cursor.
            </summary>
            <param name="cursor">The cursor to set the mouse pointer to.</param>
        </member>
        <member name="M:Telerik.Windows.DragDrop.GiveFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.
            </summary>
            <param name="genericHandler">The generic handler / delegate implementation to be invoked.</param>
            <param name="genericTarget">The target on which the provided handler should be invoked.</param>
        </member>
        <member name="P:Telerik.Windows.DragDrop.GiveFeedbackEventArgs.Effects">
            <summary>
            Gets a value that indicates the effects of drag-and-drop operation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.GiveFeedbackEventArgs.UseDefaultCursors">
            <summary>
            Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.
            </summary>
        </member>
        <member name="T:Telerik.Windows.DragDrop.IEffectsPresenter">
            <summary>
            Provides mechanism for automatic updating Effects.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.IEffectsPresenter.Effects">
            <summary>
            Gets or sets the effects based on drop-and-drop operation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.DragDrop.QueryContinueDragEventHandler">
            <summary>
            Represents a method that will handle the routed events that enables a drag-and-drop
            operation to be canceled by the drag source.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Telerik.Windows.DragDrop.QueryContinueDragEventArgs">
            <summary>
            Contains arguments for the Telerik.Windows.DragDropManager.QueryContinueDrag event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DragDrop.QueryContinueDragEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.
            </summary>
            <param name="genericHandler">The generic handler / delegate implementation to be invoked.</param>
            <param name="genericTarget">The target on which the provided handler should be invoked.</param>
        </member>
        <member name="P:Telerik.Windows.DragDrop.QueryContinueDragEventArgs.Action">
            <summary>
            Gets or sets the current status of the associated drag-and-drop operation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.QueryContinueDragEventArgs.EscapePressed">
            <summary>
            Gets a value indicating whether the ESC key has been pressed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DragDrop.QueryContinueDragEventArgs.KeyStates">
            <summary>
            Gets a flag enumeration Indicating the current state of the SHIFT, CTRL,
            and ALT keys, as well as the state of the mouse buttons.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragArrowAdjustingEventArgs">
            <summary>
            EventArgs holding the information for the DragArrowAdjusting Event
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.CancelRoutedEventArgs">
            <summary>
            Contains state information and event data associated with a cancelable routed event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CancelRoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CancelRoutedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CancelRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CancelRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event identifier.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CancelRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CancelRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event identifier for this instance of the <see cref="T:System.Windows.RoutedEventArgs"/> class.</param>
            <param name="source">An alternate source that will be reported when the event is handled.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.CancelRoutedEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event should be canceled.
            </summary>
            <value><c>True</c> if cancel; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragArrowAdjustingEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Windows.Media.TransformGroup)">
            <summary>
            Initialize the DragArrowAdjustingEventArgs
            </summary>
            <param name="routedEvent">Event being raised</param>
            <param name="arrowTransformation">The transformation being applied.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragArrowAdjustingEventArgs.ArrowTransformation">
            <summary>
            The transformation that be applied to the Drag Arrow.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragExecutionMode">
            <summary>
            Provide options that controls internal execution mechism for RadDragAndDropManager.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragExecutionMode.Default">
            <summary>
            Uses default execution mechanism through DragDropManager class and supports execution of RadDragAndDropManager class events.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragExecutionMode.Legacy">
            <summary>
            Uses legacy execution mechanism. through RadDragAndDropManager class. This option is provided for backwards compatability.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragExecutionMode.Disabled">
            <summary>
            Uses default execution mechanism through DragDropManager class. Will not process RadDragAndDropManager class events.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.SimulatedDragDropProvider.isMouseDown">
            <summary>
            In WPF isMouseDown is used only for testing.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.SimulatedDragDropProvider.Initialize">
            <summary>
            Initialize the RadDragAndDropManager settings.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.SimulatedDragDropProvider.CancelDrag">
            <summary>
            Cancels the current drag operation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.SimulatedDragDropProvider.StartDrag(System.Windows.FrameworkElement,System.Object,System.Object)">
            <summary>
            Starts a drag operation. The DragSource parameter cannot be null.
            </summary>
            <param name="dragSource">The element that is a source of the DragDrop.</param>
            <param name="payload">The payload of the DragDrop. Can be null.</param>
            <param name="dragCue">The drag cue of the DragDrop. Can be null.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.SimulatedDragDropProvider.OnCoverRectangleMouseMoveInternal(Telerik.Windows.Controls.Common.IMouseEventArgs)">
            <summary>
            This method is not used at runtime, it replicates the OnCoverRectangleMouseMove. 
            This way MouseEvent wrappers are not created unnecessarily at runtime.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.SimulatedDragDropProvider.ArePointsNear(System.Windows.Point)">
            <summary>
            Checks whether currentMousePoint is near to currentRelativeMousePoint.
            </summary>
            <param name="currentRelativeMousePoint"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragArrow">
            <summary>
            A content control that serves as a visual indicator during a drag and drop operation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragArrow.#ctor">
            <summary>
            Initializes a new instance of the DragArrow class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragVisualCue">
            <summary>
            A helper class, that serves as a visual cue during drag and drop operations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragVisualCue.#ctor">
            <summary>
            Initializes a new instance of the DragVisualCue class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.VisualCueHelper.GenerateArrowCue">
            <summary>
            Generates an arrow content control that can be used in as an arrow cue in the drag/drop operation.
            </summary>
            <returns>A new drag arrow cue element.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.VisualCueHelper.RemovePreviousArrowCue">
            <summary>
            Removes the arrow cue from the visual tree to prevent artefacts from previous drag operations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.VisualCueHelper.GenerateVisualCue(System.Windows.FrameworkElement)">
            <summary>
            Creates a drag/drop visual cue based on the default settings of the Drag/Drop manager.
            </summary>
            <param name="source">If provided, the properties of the visual cue will be set to match this element.</param>
            <returns>A new instance of the DragVisualCue class.</returns>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.Zip.ZipCompression">
            <summary>
            Represents the compression methods.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.Zip.ZipCompression.Default">
            <summary>
            This is the defaul compression method.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.Zip.ZipCompression.Stored">
            <summary>
            This is the no-compression method.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.Zip.ZipCompression.BestSpeed">
            <summary>
            This is the fastest compression method.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.Zip.ZipCompression.Method2">
            <summary>
            This is a custom compression method.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.Zip.ZipCompression.Method3">
            <summary>
            This is a custom compression method.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.Zip.ZipCompression.Method4">
            <summary>
            This is a custom compression method.        
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.Zip.ZipCompression.Method5">
            <summary>
            This is a custom compression method.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.Zip.ZipCompression.Method6">
            <summary>
            This is a custom compression method.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.Zip.ZipCompression.Method7">
            <summary>
            This is a custom compression method.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.Zip.ZipCompression.Deflated">
            <summary>
            This is the the best compression method.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.Zip.ZipCompression.Deflate64">
            <summary>
            This is the the best compression method.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.Zip.ZipInputStream">
            <summary>
            Represents a stream that can read from a compressed stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the ZipInputStream class.
            </summary>
            <param name="baseStream">
            The stream that will be decompressed.
            </param>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the
            current stream and advances the position within the stream by the number of bytes
            read.
            </summary>
            <returns>The total number of bytes read into the buffer. This can be less than
            the number of bytes requested if that many bytes are not currently available,
            or zero (0) if the end of the stream has been reached.</returns>
            <param name="buffer">An array of bytes. When this method returns, the buffer
            contains the specified byte array with the values between <paramref name="offset"/>
            and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the
            bytes read from the current source. </param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/>
            at which to begin storing the data read from the current stream. </param>
            <param name="count">The maximum number of bytes to be read from the current stream.
            </param>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream
            by one byte, or returns -1 if at the end of the stream.</summary>
            <returns>The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seeking is not supported.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes. </param>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writing is not supported.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.BaseStream">
            <summary>
            The stream that is decompressed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.CanSeek">
            <summary> 
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.CompressedSize">
            <summary>
            Gets the compressed size of the stream.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <returns>A long value representing the length of the stream in bytes.</returns>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.Position">
            <summary>
            Gets the position within the current stream. Set is not supported.
            </summary>
            <returns>The current position within the stream.</returns>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipInputStream.UncompressedSize">
            <summary>
            Gets the uncompressed size of the stream.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream">
            <summary>
            Represents a stream that can write into a compressed stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the ZipOutputStream class.
            </summary>
            <param name="baseStream">
            The stream that will be compressed.
            </param>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.#ctor(System.IO.Stream,Telerik.Windows.Media.Imaging.Zip.ZipCompression)">
            <summary>
            Initializes a new instance of the ZipOutputStream class.
            </summary>
            <param name="baseStream">
            The stream that will be compressed.
            </param>
            /// <param name="method">
            The compression method.
            </param>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.Cancel">
            <summary>
            Stops the compression of the stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.Close">
            <summary
            >Closes the current stream and releases any resources (such as sockets
            and file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reading is not supported.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seeking is not supported.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.SetLength(System.Int64)">
            <summary>
            Setting length is not supported.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number
            of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/>
            bytes from <paramref name="buffer"/> to the current stream. </param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/>
            at which to begin copying bytes to the current stream. </param>
            <param name="count">The number of bytes to be written to the current stream.
            </param>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the
            position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream. </param>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.BaseStream">
            <summary>
            The stream that is compressed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.CanSeek">
            <summary> 
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.Checksum">
            <summary>
            Gets the checksum of the compressed stream.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.CompressedSize">
            <summary>
            Gets the compressed size of the stream.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <returns>A long value representing the length of the stream in bytes.</returns>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.Position">
            <summary>
            Gets the position within the current stream. Set is not supported.
            </summary>
            <returns>The current position within the stream.</returns>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipOutputStream.UncompressedSize">
            <summary>
            Gets the uncompressed size of the stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.Create(System.IO.Stream)">
            <summary>
            This method is used to create a ZipPackage from a stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.CreateFile(System.String)">
            <summary>
            This method is used to create a ZipPackage with the passed file name.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.OpenFile(System.String,System.IO.FileAccess)">
            <summary>
            This method is used to open a ZipPackage with the passed file name.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.Open(System.IO.Stream,System.IO.FileAccess)">
            <summary>
            This method is used to open a ZipPakcage from a stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.IsZipFile(System.IO.Stream)">
            <summary>
            Checks whether the stream that represents a zip file is actually a zip file.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.IsZipFile(System.String)">
            <summary>
            Checks whether the file with the passed file name is actually a zip file.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.Add(System.String)">
            <summary>
            Adds a file with the passed file name in the ZipPackage.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.Add(System.String[])">
            <summary>
            Adds the files from the passed array of file names in the ZipPackage.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.AddStream(System.String,System.IO.Stream)">
            <summary>
            Adds a stream in the ZipPackage and associates it with the passed file name in zip.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.Add(System.String,System.String)">
            <summary>
            Adds a file with the passed file name in the ZipPackage and associates it with the passed file name in zip.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.Add(System.String,System.String,System.DateTime)">
            <summary>
            Adds a file with the passed file name in the ZipPackage, associates it with the passed file name in zip and sets a date time for the entry.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.AddStream(Telerik.Windows.Media.Imaging.Zip.ZipCompression,System.String,System.IO.Stream,System.DateTime)">
            <summary>
            Adds a stream in the ZipPackage, compresses it with the passed compress method, associates it with the passed file name in zip and sets a date time for the entry. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.Close(System.Boolean)">
            <summary>
            Closes the ZipPackage. If the value is set to false it just resets the internal values, otherwise closes the file.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.IndexOf(System.String)">
            <summary>
            Gets the index of the entry in the list of entries of the ZipPackage.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackage.RemoveEntry(Telerik.Windows.Media.Imaging.Zip.ZipPackageEntry)">
            <summary>
            Removes the passed entry from the ZipPackage.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipPackage.FileName">
            <summary>
            Gets the file name for the ZipPackage.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipPackage.ZipPackageEntries">
            <summary>
            Gets the list with all zip entries.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.Zip.ZipPackageEntry.OpenInputStream">
            <summary>
            Opens an input stream that represents the entry.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipPackageEntry.Attributes">
            <summary>
            Gets the file attributes for the entry.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipPackageEntry.CompressedSize">
            <summary>
            Gets the compressed size for the entry.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipPackageEntry.FileNameInZip">
            <summary>
            Gets the file name in the ZipPackage for the entry.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.Zip.ZipPackageEntry.UncompressedSize">
            <summary>
            Gets the uncompressed size for the entry.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.RadBitmap">
            <summary>
            Represents a bitmap in 32bit ARGB format.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.#ctor(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Initializes a new instance of the RadBitmap class using a WriteableBitmap as a source.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the RadBitmap class by taking a snapshot of a FrameworkElement.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.#ctor(System.Int32,System.Int32,System.Windows.FrameworkElement)">
            <summary>
            Initializes a new instance of the RadBitmap class by taking a snapshot of a FrameworkElement with a specified width and height.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.#ctor(System.Int32,System.Int32,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Initializes a new instance of the RadBitmap class by taking a snapshot of a FrameworkElement with a specified width and height.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Initializes a new instance of the RadBitmap class using a BitmapSource.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the RadBitmap class using a Stream
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.#ctor(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Initializes a new instance of the RadBitmap class by using a pixels array with a specified width and height.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.#ctor(Telerik.Windows.Media.Imaging.RadBitmap)">
            <summary>
            Initializes a new instance of the RadBitmap copying the contents from another bitmap.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.GetPixels">
            <summary>
            Gets the pixels array of this RadBitmap in 32bit ARGB format.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.Resize(System.Int32,System.Int32)">
            <summary>
            Returns a resized copy of this RadBitmap.
            </summary>
            <param name="newWidth">The desired width of the result.</param>
            <param name="newHeight">The desired width of the result.</param>
            <returns>The resized RadBitmap.</returns>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.Rotate(System.Double,System.Windows.Media.Color)">
            <summary>
            Returns a rotated copy of this RadBitmap.
            </summary>
            <param name="degrees">The angle to rotate the bitmap in degrees. Positive angles are clockwise.</param>
            <param name="backgroundColor">The color with which to fill the empty spaces.</param>
            <returns>The rotated RadBitmap.</returns>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.RadBitmap.Crop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a cropped copy of this RadBitmap.
            </summary>
            <param name="x">The X coordinate of the crop rectangle.</param>
            <param name="y">The Y coordinate of the crop rectangle.</param>
            <param name="newWidth">The width of the crop rectangle.</param>
            <param name="newHeight">The height of the crop rectangle.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.RadBitmap.Bitmap">
            <summary>
            Gets the WriteableBitmap instance associated with this RadBitmap.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.RadBitmap.Height">
            <summary>
            Gets the height in pixels of this RadBitmap.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.RadBitmap.Width">
            <summary>
            Gets the width in pixels of this RadBitmap.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.GroupBox">
            <summary>
            Represents a control that creates a container that has a border and a header for user interface (UI) content.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.HeaderedContentControl">
            <summary>
                Base class for the content controls that have a header.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedContentControl.HasHeaderProperty">
            <summary>
                Identifies the HasHeader property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedContentControl.HeaderProperty">
            <summary>
                Identifies the Header property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedContentControl.HeaderTemplateProperty">
            <summary>
                Identifies the HeaderTemplatee property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedContentControl.FocusVisualStyleProperty">
            <summary>
            Identifies the FocusVisualStyle property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedContentControl.HeaderTemplateSelectorProperty">
            <summary>
            Identifies the HeaderTemplateSelector property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedContentControl.IsFocusedProperty">
            <summary>
            Identifies the IsFocused property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.#ctor">
            <summary>
            Initializes a new instance of the HeaderedContentControl class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) call 
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.ChangeVisualState">
            <summary>
            Changes the visual state of the control using transitions.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.ChangeVisualState(System.Boolean)">
            <summary>
            Updates the visual state of the control.
            </summary>
            <param name="useTransitions">Indicates whether transitions should be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnIsEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the IsEnabled property of the control changes.
            </summary>
            <param name="e">The information about the new and old value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
                Allows derived classes to act on header change.
            </summary>
            <param name="oldHeader">The old header value.</param>
            <param name="newHeader">The new header value.</param>
            <seealso cref="P:Telerik.Windows.Controls.HeaderedContentControl.Header"/>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
                Allows derived classes to act on HeaderTemplate change.
            </summary>
            <param name="oldHeaderTemplate">The old header tempalte.</param>
            <param name="newHeaderTemplate">The new header tempalte.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnIsFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsFocused property changes.
            </summary>
            <param name="e">Event args with the old and the new value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.GotFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.LostFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedContentControl.HasHeader">
            <summary>
                Gets whether there is header assigned. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedContentControl.IsFocused">
            <summary>
            	Gets a value indicating whether the control is focused.
            </summary>
            <remarks>
            	<para>
                    Please note that <strong>IsFocused</strong> is a read only property. 
                    To focus the Control, use the <see cref="M:System.Windows.Controls.Control.Focus"/> method.
                </para> 
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedContentControl.Header">
            <summary>
                Gets or sets the header of the control. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedContentControl.FocusVisualStyle">
            <summary>
            Gets or sets the style used by the focus visual of the cotnrol. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedContentControl.HeaderTemplate">
            <summary>
                Gets or sets the data tempalte for the header. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector">
            <summary>
            Gets or sets a selector for the HeaderTemplate. This is a dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.GroupBox.#ctor">
            <summary>
            Initializes a new instance of the GroupBox class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.GroupBox.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) call 
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.IRangeSelector`1">
            <summary>
            An interface to be used by range selecting controls.
            </summary>
            <typeparam name="T">Simple type used for Selection properties.</typeparam>
        </member>
        <member name="P:Telerik.Windows.Controls.IRangeSelector`1.SelectionStart">
            <summary>
            Gets or sets the SelectionStart property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IRangeSelector`1.SelectionEnd">
            <summary>
            Gets or sets the SelectionEnd property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IRangeSelector`1.Selection">
            <summary>
            Gets or sets the Selection property. 
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.IRangeSelector`1.SelectionChanged">
            <summary>
            Identifies the SelectionChanged routed event.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Label">
            <summary>
            Represents the text label for a control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Label.#ctor">
            <summary>
            Initializes a new instance of the Label class.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Label.TargetProperty">
            <summary>
            Using a DependencyProperty as the backing store for Target.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Label.Target">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.AttachedPropertyProviderAttribute">
            <summary>
            Attribute for defining an attached property provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.AttachedPropertyProviderAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Persistence.Services.AttachedPropertyProviderAttribute"/> class.
            </summary>
            <param name="attachedPropertyProviderType">The attached property provider.</param>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.AttachedPropertyProviderAttribute.AttachedPropertyProviderType">
            <summary>
            Gets the type of the attached property provider.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.CustomPropertyInfo">
            <summary>
            Represents information about a custom property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.CustomPropertyInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Persistence.Services.CustomPropertyInfo"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.CustomPropertyInfo.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Persistence.Services.CustomPropertyInfo"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyType">Type of the property.</param>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.CustomPropertyInfo.Name">
            <summary>
            Gets or sets the property name.
            </summary>
            <value>
            The property name.
            </value>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.CustomPropertyInfo.PropertyType">
            <summary>
            Gets or sets the property type.
            </summary>
            <value>
            The property type.
            </value>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.CustomPropertyInfo.AllowCreateInstance">
            <summary>
            Gets or sets a value indicating whether creating an instance is allowed.
            </summary>
            <value>
              <c>True</c> if creating an instance is allowed otherwise, an instance has to be provided.
            </value>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.CustomPropertyInfo.TreatAsUI">
            <summary>
            Gets or sets whether this property will be treated as UI property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.CustomPropertyProviderAttribute">
            <summary>
            Attribute for defining a custom property provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.CustomPropertyProviderAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Persistence.Services.CustomPropertyProviderAttribute"/> class.
            </summary>
            <param name="customPropertyProviderType">The custom property provider.</param>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.CustomPropertyProviderAttribute.CustomPropertyProviderType">
            <summary>
            Gets the type of the custom property provider.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.DefaultAttachedPropertyProvider">
            <summary>
            The default attached property provider.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.IAttachedPropertyProvider">
            <summary>
            Represents an attached property provider.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.IPersistenceProvider">
            <summary>
            Represents a persistence provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.IAttachedPropertyProvider.GetAttachedPropertyTypeProviders">
            <summary>
            Gets the attached property type providers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultAttachedPropertyProvider.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Persistence.Services.DefaultAttachedPropertyProvider"/> class.
            </summary>
            <param name="ownerType">Type of the owner.</param>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultAttachedPropertyProvider.GetAttachedPropertyTypeProviders">
            <summary>
            Gets the attached property type providers.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.DefaultCustomPropertyProvider`1">
            <summary>
            The default custom property provider.
            </summary>
            <typeparam name="T">The persistence provider.</typeparam>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.ICustomPropertyProvider">
            <summary>
            Represents the custom property provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.ICustomPropertyProvider.GetCustomProperties">
            <summary>
            Gets the custom properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.ICustomPropertyProvider.ProvideValue(Telerik.Windows.Persistence.Services.CustomPropertyInfo,System.Object)">
            <summary>
            Provides the value for a specific property.
            </summary>
            <param name="customPropertyInfo">The custom property info.</param>
            <param name="context">The context - the owner object.</param>
            <returns>Returns the value for the specific property.</returns>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.ICustomPropertyProvider.InitializeObject(System.Object)">
            <summary>
            Initializes the object. Intended to place the context object in an appropriate state, before setting any properties.
            </summary>
            <param name="context">The context - the owner object.</param>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.ICustomPropertyProvider.RestoreValue(Telerik.Windows.Persistence.Services.CustomPropertyInfo,System.Object,System.Object)">
            <summary>
            Restores the value for a specific property.
            </summary>
            <param name="customPropertyInfo">The custom property info.</param>
            <param name="context">The context - the owner object.</param>
            <param name="value">The saved value for the property.</param>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.ICustomPropertyProvider.InitializeValue(Telerik.Windows.Persistence.Services.CustomPropertyInfo,System.Object)">
            <summary>
            Initializes the saved value. Invoked when the deserialized value is null. See remarks.
            </summary>
            <param name="customPropertyInfo">The custom property info.</param>
            <param name="context">The context.</param>
            <returns>Returns the initialized value.</returns>
            <remarks>
            When the deserialized fails to recreate the saved value (i.e. craete a new instance of the class or the value is null) 
            this method will be invoked to provide a valid value.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultCustomPropertyProvider`1.GetCustomProperties">
            <summary>
            Gets the custom properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultCustomPropertyProvider`1.ProvideValue(Telerik.Windows.Persistence.Services.CustomPropertyInfo,System.Object)">
            <summary>
            Provides the value.
            </summary>
            <param name="customPropertyInfo">The custom property info.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultCustomPropertyProvider`1.InitializeObject(System.Object)">
            <summary>
            Initializes the object.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultCustomPropertyProvider`1.RestoreValue(Telerik.Windows.Persistence.Services.CustomPropertyInfo,System.Object,System.Object)">
            <summary>
            Restores the value.
            </summary>
            <param name="customPropertyInfo">The custom property info.</param>
            <param name="context">The context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultCustomPropertyProvider`1.InitializeValue(Telerik.Windows.Persistence.Services.CustomPropertyInfo,System.Object)">
            <summary>
            Initializes the value.
            </summary>
            <param name="customPropertyInfo">The custom property info.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.DefaultPropertyProvider">
            <summary>
            The default property provider.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.IPropertyProvider">
            <summary>
            Represents a property provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.IPropertyProvider.GetProperties">
            <summary>
            Gets the properties that will be persisted.
            </summary>
            <returns>Returns an array with the properties to be persisted</returns>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultPropertyProvider.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Persistence.Services.DefaultPropertyProvider"/> class.
            </summary>
            <param name="ownerType">Type of the owner.</param>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultPropertyProvider.GetProperties">
            <summary>
            Gets the properties.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.DefaultPropertyValidatorProvider">
            <summary>
            The default property validator provider.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.IPropertyValidatorProvider">
            <summary>
            Represents a validator provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.IPropertyValidatorProvider.IsValid(System.String,System.Type,System.Object,System.Object)">
            <summary>
            Determines whether the specified property name is forbidden.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyType">Type of the property.</param>
            <param name="context">The context.</param>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified property name is forbidden; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultPropertyValidatorProvider.IsValid(System.String,System.Type,System.Object,System.Object)">
            <summary>
            Determines whether the specified property name is forbidden.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyType">Type of the property.</param>
            <param name="context">The context.</param>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified property name is forbidden; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.DefaultServiceProvider">
            <summary>
            The default service provider.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.IPersistenceServiceProvider">
            <summary>
            Represents a persistence service provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.IPersistenceServiceProvider.RegisterProvider``1(``0)">
            <summary>
            Registers the provider.
            </summary>
            <typeparam name="T">The persistence provider.</typeparam>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.IPersistenceServiceProvider.ResolveProvider``1">
            <summary>
            Resolves the provider.
            </summary>
            <typeparam name="T">The persistence provider.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultServiceProvider.ResolveProvider``1">
            <summary>
            Resolves the provider.
            </summary>
            <typeparam name="T">The persistence provider.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultServiceProvider.RegisterProvider``1(``0)">
            <summary>
            Registers the provider.
            </summary>
            <typeparam name="T">The persistence provider.</typeparam>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.DefaultServiceProvider.ForbiddenPropertyProvider">
            <summary>
            Gets or sets the forbidden property provider.
            </summary>
            <value>
            The forbidden property provider.
            </value>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.DefaultServiceProvider.AttachedPropertyProvider">
            <summary>
            Gets or sets the attached property provider.
            </summary>
            <value>
            The attached property provider.
            </value>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.DefaultServiceProvider.PropertyProvider">
            <summary>
            Gets or sets the property provider.
            </summary>
            <value>
            The property provider.
            </value>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.DefaultServiceProvider.TypeConverterProvider">
            <summary>
            Gets or sets the type converter provider.
            </summary>
            <value>
            The type converter provider.
            </value>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.DefaultServiceProvider.OwnerType">
            <summary>
            Gets or sets the type of the owner.
            </summary>
            <value>
            The type of the owner.
            </value>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.DefaultTypeConverterProvider">
            <summary>
            The default type converter provider.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.ITypeConverterProvider">
            <summary>
            Represents a type converter provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.ITypeConverterProvider.GetTypeConverterType">
            <summary>
            Gets the type of the type converter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultTypeConverterProvider.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Persistence.Services.DefaultTypeConverterProvider"/> class.
            </summary>
            <param name="ownerType">Type of the owner.</param>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.DefaultTypeConverterProvider.GetTypeConverterType">
            <summary>
            Gets the type of the type converter.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.IValueProvider">
            <summary>
            Represents a value provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.IValueProvider.ProvideValue(System.Object)">
            <summary>
            Provides the string representation of an object.
            </summary>
            <param name="context">The context.</param>
            <returns>Returns the string value.</returns>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.IValueProvider.RestoreValue(System.Object,System.String)">
            <summary>
            Restores the object from the saved string value.
            </summary>
            <param name="context">The context.</param>
            <param name="savedValue">The saved value.</param>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.PropertyProviderAttribute">
            <summary>
            Attribute to define a property provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.PropertyProviderAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Persistence.Services.PropertyProviderAttribute"/> class.
            </summary>
            <param name="propertyProviderType">The property provider.</param>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.PropertyProviderAttribute.PropertyProviderType">
            <summary>
            Gets the type of the property provider.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.ValueProviderAttribute">
            <summary>
            Attribute for defining a serialization provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.ValueProviderAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Persistence.Services.ValueProviderAttribute"/> class.
            </summary>
            <param name="valueProviderType">The type of the value provider.</param>
        </member>
        <member name="P:Telerik.Windows.Persistence.Services.ValueProviderAttribute.ValueProviderType">
            <summary>
            Gets or sets the type of the value provider.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Persistence.Services.ServiceProvider">
            <summary>
            Persistence service provider.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.ServiceProvider.RegisterPersistenceProvider``1(System.Type,Telerik.Windows.Persistence.Services.IPersistenceProvider)">
            <summary>
            Registers a persistence provider.
            </summary>
            <typeparam name="T">The persistence provider type.</typeparam>
            <param name="type">The type against which the provider is registered.</param>
            <param name="provider">The provider instance.</param>
        </member>
        <member name="M:Telerik.Windows.Persistence.Services.ServiceProvider.ResolvePersistenceProvider``1(System.Type)">
            <summary>
            Resolves the persistence provider.
            </summary>
            <typeparam name="T">The persistence provider type.</typeparam>
            <param name="ownerType">The registed type against the persistence provider.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.DelegateCommand">
            <summary>
            Provides a simple ICommand implementation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DelegateCommand.#ctor(System.Action{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DelegateCommand"/> class.
            </summary>
            <param name="execute">The execute action.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DelegateCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DelegateCommand"/> class.
            </summary>
            <param name="execute">The execute action.</param>
            <param name="canExecute">The can execute predicate.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DelegateCommand.InvalidateCanExecute">
            <summary>
            Raises the CanExecuteChanged event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DelegateCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DelegateCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.DelegateCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether the command should execute.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.StrongReferenceDelegateCommand">
            <summary>
            Provides a simple ICommand implementation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StrongReferenceDelegateCommand.#ctor(System.Action{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DelegateCommand"/> class.
            </summary>
            <param name="execute">The execute action.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.StrongReferenceDelegateCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DelegateCommand"/> class.
            </summary>
            <param name="execute">The execute action.</param>
            <param name="canExecute">The can execute predicate.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.StrongReferenceDelegateCommand.InvalidateCanExecute">
            <summary>
            Raises the CanExecuteChanged event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StrongReferenceDelegateCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.StrongReferenceDelegateCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.StrongReferenceDelegateCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether the command should execute.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionRange`1">
            <summary>
            Simple structure representing a simple Generic range.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionRange`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.SelectionRange`1"/> struct.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionRange`1.op_Equality(Telerik.Windows.Controls.SelectionRange{`0},Telerik.Windows.Controls.SelectionRange{`0})">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="range1">The range1.</param>
            <param name="range2">The range2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionRange`1.op_Inequality(Telerik.Windows.Controls.SelectionRange{`0},Telerik.Windows.Controls.SelectionRange{`0})">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="range1">The range1.</param>
            <param name="range2">The range2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionRange`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionRange`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionRange`1.Start">
            <summary>
            Gets or sets the Start proeprty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionRange`1.End">
            <summary>
            Gets or sets the End proeprty.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Shapes.Arc">
            <summary>
            A partial donut Shape class.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Shapes.Arc.DiameterProperty">
            <summary>
            Using a DependencyProperty as the backing store for Diameter. This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Telerik.Windows.Shapes.Arc.StartAngleProperty">
            <summary>
            Using a DependencyProperty as the backing store for StartAngle. This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Telerik.Windows.Shapes.Arc.EndAngleProperty">
            <summary>
            Using a DependencyProperty as the backing store for EndAngle. This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Telerik.Windows.Shapes.Arc.ArcThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for ArcThickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Telerik.Windows.Shapes.Arc.MaximumProgressProperty">
            <summary>
            Using a DependencyProperty as the backing store for MaximumProgress.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Telerik.Windows.Shapes.Arc.MinimumProgressProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinimumProgress.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Telerik.Windows.Shapes.Arc.ProgressProperty">
            <summary>
            Using a DependencyProperty as the backing store for Progress. This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Telerik.Windows.Shapes.Arc.CapRadiusProperty">
            <summary>
            Using a DependencyProperty as the backing store for CapRadius. This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Telerik.Windows.Shapes.Arc.#ctor">
            <summary>
            Creates a new instance of the Arc class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Shapes.Arc.Diameter">
            <summary>
            Gets or sets the diameter of the generated arc graphic. It is recomended to use the same value for Width, Height and Diameter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Shapes.Arc.StartAngle">
            <summary>
            Gets or sets the angle of the start point of the arc in degrees. The default is 10 which is near the right center. ~90 will be bottom ~180 left and ~270 top.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Shapes.Arc.EndAngle">
            <summary>
            Gets or sets the angle of the end point of the arc in degrees. The default is 350 which is near the right center. ~90 will be bottom ~180 left and ~270 top.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Shapes.Arc.ArcThickness">
            <summary>
            Gets or sets the thickness of the arc geometry. The value is the thickness in pixels in StretchMode="None" stretch mode. When the value increases the arc geometry expands toward the center of the arc. Do not set it to more than half the Diameter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Shapes.Arc.MaximumProgress">
            <summary>
            Gets or sets the aximum possible value of the Arc's Progress. It is designed to ease the Arc use in progress bars. Check the Progress property for more information.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Shapes.Arc.MinimumProgress">
            <summary>
            Gets or sets the minimum possible value of the Arc's Progress. It is designed to ease the Arc use in progress bars. Check the Progress property for more information.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Shapes.Arc.Progress">
            <summary>
            Gets or sets the percentage of the arc to be drawn. Should be in range [MaximumProgress MinimumProgress]. The arc is drawn in clockwise direction from the StartAngle towards the EndAngle. Setting this property to MaximumProgress will draw all the arc. MaximumProgress * 0.5 + MinimumProgress * 0.5 - half of it. MinimumProgress - none of it. It is designed to ease the Arc use in progress bars.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Shapes.Arc.CapRadius">
            <summary>
            Gets or sets the caps of the arc. 0 will use stright cut of a donut. Setting it to half the ArcThickness will draw geometry with circle ends of the arc. It is recomended to be in range from 0 to half the ArcThickness.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Shapes.Diamond">
            <summary>
            A diamond shape class
            </summary>
        </member>
        <member name="M:Telerik.Windows.Shapes.Diamond.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges a <see cref="T:System.Windows.Shapes.Shape"/> by evaluating its <see cref="P:System.Windows.Shapes.Shape.RenderedGeometry"/> and <see cref="P:System.Windows.Shapes.Shape.Stretch"/> properties.
            </summary>
            <param name="finalSize">The final evaluated size of the <see cref="T:System.Windows.Shapes.Shape"/>.</param>
            <returns>
            The final size of the arranged <see cref="T:System.Windows.Shapes.Shape"/> element.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Shapes.Diamond.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures a <see cref="T:System.Windows.Shapes.Shape"/> during the first layout pass prior to arranging it.
            </summary>
            <param name="constraint">A maximum <see cref="T:System.Windows.Size"/> to not exceed.</param>
            <returns>
            The maximum <see cref="T:System.Windows.Size"/> for the <see cref="T:System.Windows.Shapes.Shape"/>.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Simple3D.Camera">
            <summary>
            This class represents a 3D camera object that can project one 3D points into 2D points.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.Camera.#ctor(System.Windows.Media.Media3D.Matrix3D,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Simple3D.Camera"/> class.
            </summary>
            <param name="transformation">The transformation that transforms a point from the world coordinates to the camera coordinates.</param>
            <param name="fov">The field of view of the camera. This is the distance between the camera and the projection surface.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.Camera.Project(Telerik.Windows.Controls.Simple3D.Point3D)">
            <summary>
            Projects the specified point on the view surface using the camera object.
            </summary>
            <param name="point">The point to be projected.</param>
            <returns>The 2D point that is the result of the projection.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.Camera.Project(Telerik.Windows.Controls.Simple3D.Point3D[])">
            <summary>
            Projects the specified points on the view surface using the camera object.
            </summary>
            <param name="points">The points to be projected.</param>
            <returns>The 2D points that are the result of the projection.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Simple3D.Camera.Transformation">
            <summary>
            Gets or sets the transformation that transforms a point from the world coordinates to the camera coordinates.
            </summary>
            <value>The transformation matrix.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Simple3D.Camera.Fov">
            <summary>
            The field of view of the camera. This is the distance between the camera and the projection surface.
            </summary>
            <value>The fov value.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Simple3D.Camera.Scale">
            <summary>
            Gets or sets the scale, that is applied after projection.
            </summary>
            <value>The scale value (default is 1.0).</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Simple3D.PerspectiveCamera">
            <summary>
            Represents a Camera that projects with perspective.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.PerspectiveCamera.#ctor(Telerik.Windows.Controls.Simple3D.Point3D,Telerik.Windows.Controls.Simple3D.Point3D,Telerik.Windows.Controls.Simple3D.Point3D,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Simple3D.PerspectiveCamera"/> class.
            </summary>
            <param name="pointOfView">The point where the camera is located.</param>
            <param name="lookAtPoint">The point where the cameara looks at.</param>
            <param name="worldUpVector">The vector that is pointing the UP direction.</param>
            <param name="fov">The field of view of the camera. This is the distance between the camera and the projection surface.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.PerspectiveCamera.CreateLookAtCenterPerspectiveCamera(System.Double,System.Double)">
            <summary>
            Creates a new perspective camera that is located on the Z axis and is looking at the origin.
            The Up vector is collinear with the Oy axis.
            </summary>
            <param name="distance">The distance between the camera location and the origin.</param>
            <param name="fov">The field of view of the camera. This is the distance between the camera and the projection surface.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Simple3D.ThreeDTools">
            <summary>
            This is a utility class that contains static methods to make work with 3D easier.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.ThreeDTools.CreateTranslateMatrix(System.Double,System.Double,System.Double)">
            <summary>
            Creates a 3D translation transformation matrix.
            </summary>
            <param name="translateX">The translation on X.</param>
            <param name="translateY">The translation on Y.</param>
            <param name="translateZ">The translation on Z.</param>
            <returns>The transformation matrix, that represents a translate transformation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.ThreeDTools.CreateRotationMatrix(System.Double,System.Double,System.Double)">
            <summary>
            Creates a 3D rotation transformation matrix.
            </summary>
            <param name="alph">The angle around the X axis.</param>
            <param name="bet">The angle around the Y axis.</param>
            <param name="gam">The angle around the Z axis.</param>
            <returns>The transformation matrix, that represents a rotation transformation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.ThreeDTools.CreateXRotationMatrix(System.Double)">
            <summary>
            Creates a 3D rotation transformation matrix, that represents a rotation arount the X axis.
            </summary>
            <param name="alph">The angle of rotation.</param>
            <returns>The transformation matrix, that represents a rotation transformation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.ThreeDTools.CreateYRotationMatrix(System.Double)">
            <summary>
            Creates a 3D rotation transformation matrix, that represents a rotation arount the Y axis.
            </summary>
            <param name="alph">The angle of rotation.</param>
            <returns>The transformation matrix, that represents a rotation transformation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.ThreeDTools.CreateZRotationMatrix(System.Double)">
            <summary>
            Creates a 3D rotation transformation matrix, that represents a rotation arount the Z axis.
            </summary>
            <param name="alph">The angle of rotation.</param>
            <returns>The transformation matrix, that represents a rotation transformation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.ThreeDTools.Project(Telerik.Windows.Controls.Simple3D.Point3D,System.Double,System.Double)">
            <summary>
            Projects the specified 3D point in the XY plane.
            </summary>
            <param name="point">The point to be projected.</param>
            <param name="scale">The scale to be applied after projection.</param>
            <param name="fov">The field of view of the camera. This is the distance between the camera and the projection surface.</param>
            <returns>The 2D point that is the result of the projection.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.ThreeDTools.Project(Telerik.Windows.Controls.Simple3D.Point3D[],System.Double,System.Double)">
            <summary>
            Projects the specified 3D points in the XY plane.
            </summary>
            <param name="points">The points to be projected.</param>
            <param name="scale">The scale to be applied after projection.</param>
            <param name="fov">The field of view of the camera. This is the distance between the camera and the projection surface.</param>
            <returns>The 2D points that are the result of the projection.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.ThreeDTools.Transform(Telerik.Windows.Controls.Simple3D.Point3D,System.Windows.Media.Media3D.Matrix3D)">
            <summary>
            Transforms the specified 3D point using a 3D transformation.
            </summary>
            <param name="point">The 3D point to be transformed.</param>
            <param name="matrix">The transformation matrix to be used.</param>
            <returns>The transformed 3D point.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Simple3D.ThreeDTools.Transform(Telerik.Windows.Controls.Simple3D.Point3D[],System.Windows.Media.Media3D.Matrix3D)">
            <summary>
            Transforms the specified 3D points using a 3D transformation.
            </summary>
            <param name="points">The 3D points to be transformed.</param>
            <param name="matrix">The transformation matrix to be used.</param>
            <returns>The transformed 3D points.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ActionOnLostFocus">
            <summary>
            Represents the possible values of an action to be taken when an element of the RadGridView loses focus.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ActionOnLostFocus.CancelEdit">
            <summary>
            When the focus of a field in edit mode is lost, its edit mode will be canceled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ActionOnLostFocus.CommitEdit">
            <summary>
            When the focus of a field in edit mode is lost, its contents will be validated.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ActionOnLostFocus.None">
            <summary>
            When the focus of an element is lost, no specific action will be taken.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.BaseAnimation">
            <summary>
            Base class for all animation classes that have easing and targeted element.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.RadAnimation">
            <summary>
            Base class for dynamic control animations.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.RadAnimation.CreateAnimation(System.Windows.FrameworkElement)">
            <summary>
            When overridden in a derived class this method is called when the animation for an 
            instance of a control needs to be created.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.RadAnimation.UpdateAnimation(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Object[])">
            <summary>
            	When overridden in a derived class this method updates the animation
            	before it is played.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyboard that needs to be updated.</param>
            <param name="args">A set of arguments used for animation creation.</param>
            <remarks>
            	<para>
            		Currently the method sets the <see cref="P:Telerik.Windows.Controls.Animation.RadAnimation.SpeedRatio"/> of the storyboard to
            		the global <strong>AnimationSpeedRatio</strong> if the local <see cref="P:Telerik.Windows.Controls.Animation.RadAnimation.SpeedRatio"/> is null.
            		If the local <see cref="P:Telerik.Windows.Controls.Animation.RadAnimation.SpeedRatio"/> value is set, it will be used.
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.RadAnimation.AnimationName">
            <summary>
            Gets or sets the name of the animation.
            </summary>
            <remarks>
            	<para>
            		This property is used by the NamedAnimationSelector to identify the 
            		correct animation to return. 
            	</para>
            	<para>
            		It is not used outside the NamedAnimationSelector
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.RadAnimation.SpeedRatio">
            <summary>
            Gets or sets the value for the SpeedRatio of the Storyboard generated by this animation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.BaseAnimation.#ctor">
            <summary>
            Initializes a new instance of the ScaleAnimation class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.BaseAnimation.CreateAnimation(System.Windows.FrameworkElement)">
            <summary>
            Creates the slide animation.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.BaseAnimation.UpdateAnimation(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Object[])">
            <summary>
            Updates the slide animation.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyvoard that needs to be updated.</param>
            <param name="args"></param>
            <remarks>
            Currently the method sets the SpeedRatio of the storyboard to
            the global <strong>AnimationSpeedRatio</strong> if the local SpeedRatio is null.
            If the local SpeedRatio value is set, it will be used.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.BaseAnimation.CreateAnimationOverride(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Creates the slide animation.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <param name="target">The targeted element of the animation.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.BaseAnimation.UpdateAnimationOverride(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Windows.FrameworkElement,System.Object[])">
            <summary>
            Updates the slide animation.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyvoard that needs to be updated.</param>
            <param name="target">The targeted element of the animation.</param>
            <param name="args"></param>
            <remarks>
            Currently the method sets the SpeedRatio of the storyboard to
            the global <strong>AnimationSpeedRatio</strong> if the local SpeedRatio is null.
            If the local SpeedRatio value is set, it will be used.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.BaseAnimation.Easing">
            <summary>
            Gets or sets a value describing the easing function to be used for the animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.BaseAnimation.TargetElementName">
            <summary>
            Gets or sets the name of the animated object, part of the ControlTemplate of the control.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.MoveAnimation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.MoveAnimation.OldPositionProperty">
            <summary>
            Represents the OldPosition attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.MoveAnimation.CurrentPositionProperty">
            <summary>
            Represents the CurrentPosition attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.MoveAnimation.GetOldPosition(System.Windows.DependencyObject)">
            <summary>
            Gets the OldPosition for the given DependencyObject, normally a UIElement.
            </summary>
            <param name="obj">The target animated object, normally a UIElement.</param>
            <returns>The old position of the given object.</returns>
            <remarks>This attached property is used by the controls to attach metadata 
            for the animations and it is being used by the Resize and Move animations 
            to deliver better experience.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.MoveAnimation.SetOldPosition(System.Windows.DependencyObject,System.Windows.Point)">
            <summary>
            Sets the OldPosition attached property to the given DependencyObject, normally a UIElement.
            </summary>
            <param name="obj">The target animated object, normally a UIElement.</param>
            <param name="value">The old position to assign.</param>
            <remarks>This attached property is used by the controls to attach metadata 
            for the animations and it is being used by the Resize and Move animations 
            to deliver better experience.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.MoveAnimation.GetCurrentPosition(System.Windows.DependencyObject)">
            <summary>
            Gets the CurrentPosition for the given DependencyObject, normally a UIElement.
            </summary>
            <param name="obj">The target animated object, normally a UIElement.</param>
            <returns>The current position of the given object.</returns>
            <remarks>This attached property is used by the controls to attach metadata 
            for the animations and it is being used by the Resize and Move animations 
            to deliver better experience.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.MoveAnimation.SetCurrentPosition(System.Windows.DependencyObject,System.Windows.Point)">
            <summary>
            Sets the CurrentPosition attached property to the given DependencyObject, normally a UIElement.
            </summary>
            <param name="obj">The target animated object, normally a UIElement.</param>
            <param name="value">The current position to assign.</param>
            <remarks>This attached property is used by the controls to attach metadata 
            for the animations and it is being used by the Resize and Move animations 
            to deliver better experience.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.MoveAnimation.CreateAnimationOverride(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Creates the slide animation.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <param name="target">The targeted element of the animation.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.MoveAnimation.UpdateAnimationOverride(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Windows.FrameworkElement,System.Object[])">
            <summary>
            Updates the slide animation.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyvoard that needs to be updated.</param>
            <param name="target">The targeted element of the animation.</param>
            <param name="args"></param>
            <remarks>
            Currently the method sets the SpeedRatio of the storyboard to
            the global <strong>AnimationSpeedRatio</strong> if the local SpeedRatio is null.
            If the local SpeedRatio value is set, it will be used.
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.OrientedAnimation">
            <summary>
            Base class for all animation classes that have direction.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.OrientedAnimation.GetDelay(System.Windows.DependencyObject)">
            <summary>
            Gets the delay that should pass before run the animation.
            </summary>
            <param name="target">The target of the animation.</param>
            <returns>The delay that should pass before run the animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.OrientedAnimation.GetValueDependingOnDirection``1(``0,``0)">
            <summary>
            If the current Orientation of the animation is In, returns the inValue,
            otherwize - the outValue.
            </summary>
            <typeparam name="T">The type that will be used.</typeparam>
            <param name="inValue">The value to be returned if the current Direction is In.</param>
            <param name="outValue">The value to be returned if the current Direction is Out.</param>
            <returns>If the current Orientation of the animation is In - the inValue, 
            otherwize - the outValue.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.OrientedAnimation.Direction">
            <summary>
            Gets or sets a value indicating whether the animated object is comming in or out of view.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.ResizeAnimation">
            <summary>
            Animation for smooth resizing elements.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.ResizeAnimation.OldSizeProperty">
            <summary>
            Represents the OldSize attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.ResizeAnimation.CurrentSizeProperty">
            <summary>
            Represents the CurrentSize attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ResizeAnimation.GetOldSize(System.Windows.DependencyObject)">
            <summary>
            Gets the OldSize for the given DependencyObject, normally a UIElement.
            </summary>
            <param name="obj">The target animated object, normally a UIElement.</param>
            <returns>The old size for the object.</returns>
            <remarks>This attached property is used by the controls to attach metadata 
            for the animations and it is being used by the Resize and Move animations 
            to deliver better experience.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ResizeAnimation.SetOldSize(System.Windows.DependencyObject,System.Windows.Size)">
            <summary>
            Sets the OldSize attached property to the given DependencyObject, normally a UIElement.
            </summary>
            <param name="obj">The target animated object, normally a UIElement.</param>
            <param name="value">The old size to assign.</param>
            <remarks>This attached property is used by the controls to attach metadata 
            for the animations and it is being used by the Resize and Move animations 
            to deliver better experience.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ResizeAnimation.GetCurrentSize(System.Windows.DependencyObject)">
            <summary>
            Gets the CurrentSize for the given DependencyObject, normally a UIElement.
            </summary>
            <param name="obj">The target animated object, normally a UIElement.</param>
            <returns>The current size for the object.</returns>
            <remarks>This attached property is used by the controls to attach metadata 
            for the animations and it is being used by the Resize and Move animations 
            to deliver better experience.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ResizeAnimation.SetCurrentSize(System.Windows.DependencyObject,System.Windows.Size)">
            <summary>
            Sets the CurrentSize attached property to the given DependencyObject, normally a UIElement.
            </summary>
            <param name="obj">The target animated object, normally a UIElement.</param>
            <param name="value">The current size to assign.</param>
            <remarks>This attached property is used by the controls to attach metadata 
            for the animations and it is being used by the Resize and Move animations 
            to deliver better experience.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ResizeAnimation.CreateAnimationOverride(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Creates the slide animation.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <param name="target">The targeted element of the animation.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ResizeAnimation.UpdateAnimationOverride(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Windows.FrameworkElement,System.Object[])">
            <summary>
            Updates the slide animation.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyvoard that needs to be updated.</param>
            <param name="target">The targeted element of the animation.</param>
            <param name="args"></param>
            <remarks>
            Currently the method sets the SpeedRatio of the storyboard to
            the global <strong>AnimationSpeedRatio</strong> if the local SpeedRatio is null.
            If the local SpeedRatio value is set, it will be used.
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.ScaleAnimation">
            <summary>
            Scale animation for showing/hiding elements.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ScaleAnimation.#ctor">
            <summary>
            Initializes a new instance of the ScaleAnimation class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ScaleAnimation.CreateAnimationOverride(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Creates the slide animation.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <param name="target">The targeted element of the animation.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ScaleAnimation.UpdateAnimationOverride(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Windows.FrameworkElement,System.Object[])">
            <summary>
            Updates the slide animation.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyvoard that needs to be updated.</param>
            <param name="target">The targeted element of the animation.</param>
            <param name="args"></param>
            <remarks>
            Currently the method sets the SpeedRatio of the storyboard to
            the global <strong>AnimationSpeedRatio</strong> if the local SpeedRatio is null.
            If the local SpeedRatio value is set, it will be used.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.ScaleAnimation.MaxScale">
            <summary>
            Gets or sets a value that describes the maximum scale during the animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.ScaleAnimation.MinScale">
            <summary>
            Gets or sets a value that describes the minimum scale during the animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.FadeAnimation">
            <summary>
            Fade animation for showing/hiding elements.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.FadeAnimation.#ctor">
            <summary>
            Initializes a new instance of the FadeAnimation class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.FadeAnimation.CreateAnimationOverride(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Creates the slide animation.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <param name="target">The targeted element of the animation.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.FadeAnimation.UpdateAnimationOverride(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Windows.FrameworkElement,System.Object[])">
            <summary>
            Updates the slide animation.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyvoard that needs to be updated.</param>
            <param name="target">The targeted element of the animation.</param>
            <param name="args"></param>
            <remarks>
            Currently the method sets the SpeedRatio of the storyboard to
            the global <strong>AnimationSpeedRatio</strong> if the local SpeedRatio is null.
            If the local SpeedRatio value is set, it will be used.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.FadeAnimation.MaxOpacity">
            <summary>
            Gets or sets a value that describes the maximum opacity during the animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.FadeAnimation.MinOpacity">
            <summary>
            Gets or sets a value that describes the minimum opacity during the animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.SlideAnimation">
            <summary>
            Fade animation for showing/hiding elements.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.SlideAnimation.#ctor">
            <summary>
            Initializes a new instance of the SlideAnimation class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.SlideAnimation.CreateAnimationOverride(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Creates the slide animation.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <param name="target">The targeted element of the animation.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.SlideAnimation.UpdateAnimationOverride(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Windows.FrameworkElement,System.Object[])">
            <summary>
            Updates the slide animation.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyvoard that needs to be updated.</param>
            <param name="target">The targeted element of the animation.</param>
            <param name="args"></param>
            <remarks>
            Currently the method sets the SpeedRatio of the storyboard to
            the global <strong>AnimationSpeedRatio</strong> if the local SpeedRatio is null.
            If the local SpeedRatio value is set, it will be used.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.SlideAnimation.SlideMode">
            <summary>
            Gets or sets the direction (side) that the object will appear from or slide out to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.SlideAnimation.Orientation">
            <summary>
            Gets or sets a value, describing the orientation of the animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.SlideAnimation.PixelsToAnimate">
            <summary>
            Gets or sets a value that describes the amount of pixels to be animated.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.SlideAnimation.Duration">
            <summary>
            Gets or sets a value that describes the duration of the animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.Easings">
            <summary>
            Helper class, used for creating animations in code.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.Easings.BaseEase.Ease(System.Double)">
            <summary>
            Transforms normalized time to control the pace of an animation.
            </summary>
            <param name="normalizedTime"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.Easings.BaseEase.F(System.Double)">
            <summary>
            F(t).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.Easings.BaseEase.EasingMode">
            <summary>
            Gets or sets a value that specifies how the animation interpolates. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.TransitionEffectAnimation">
            <summary>
            Transition effect animation for showing/hiding popups.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.TransitionEffectAnimation.CreateAnimationOverride(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Creates the slide animation.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <param name="target">The targeted element of the animation.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.TransitionEffectAnimation.UpdateAnimationOverride(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Windows.FrameworkElement,System.Object[])">
            <summary>
            Updates the slide animation.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyvoard that needs to be updated.</param>
            <param name="target">The targeted element of the animation.</param>
            <param name="args"></param>
            <remarks>
            Currently the method sets the SpeedRatio of the storyboard to
            the global <strong>AnimationSpeedRatio</strong> if the local SpeedRatio is null.
            If the local SpeedRatio value is set, it will be used.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.TransitionEffectAnimation.Transition">
            <summary>
            Gets or sets a value describing the TransitionEffect to be used for the animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadBusyIndicator">
            <summary>
            Identifies the RadBusyIndicator control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadBusyIndicator.IsBusyIndicationVisibleProperty">
            <summary>
            Identifies the IsBusyIndicationVisible dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadBusyIndicator.BusyContentProperty">
            <summary>
            Identifies the BusyContent property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadBusyIndicator.BusyContentTemplateProperty">
            <summary>
            Identifies the BusyContentTemplate property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadBusyIndicator.DisplayAfterProperty">
            <summary>
            Identifies the DisplayAfter property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadBusyIndicator.IsBusyProperty">
            <summary>
            Identifies the IsBusy property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadBusyIndicator.IsIndeterminateProperty">
            <summary>
            Identifies the IsIndeterminate property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadBusyIndicator.OverlayStyleProperty">
            <summary>
            Identifies the OverlayStyle property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadBusyIndicator.ProgressBarStyleProperty">
            <summary>
            Identifies the ProgressBarStyle property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadBusyIndicator.ProgressValueProperty">
            <summary>
            Identifies the ProgressValue property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadBusyIndicator.OnCreateAutomationPeer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadBusyIndicator.#ctor">
            <summary>
            Initializes a new instance of the RadBusyIndicator class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadBusyIndicator.ChangeVisualState(System.Boolean)">
            <summary>
            Updates the visual state of the control.
            </summary>
            <param name="useTransitions">Indicates whether transitions should be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadBusyIndicator.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call.
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadBusyIndicator.OnIsBusyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="F:Telerik.Windows.Controls.RadBusyIndicator.IsBusyProperty"/> property is changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadBusyIndicator.ProgressValue">
            <summary>
            Gets or sets the <see cref="P:Telerik.Windows.Controls.RadBusyIndicator.ProgressValue"/> property. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadBusyIndicator.IsBusyIndicationVisible">
            <summary>
            Gets or sets the <see cref="P:Telerik.Windows.Controls.RadBusyIndicator.IsBusyIndicationVisible"/> property. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadBusyIndicator.IsIndeterminate">
            <summary>
            Gets or sets the <see cref="P:Telerik.Windows.Controls.RadBusyIndicator.IsIndeterminate"/> property. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadBusyIndicator.BusyContent">
            <summary>
            Gets or sets the <see cref="P:Telerik.Windows.Controls.RadBusyIndicator.BusyContent"/> property. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadBusyIndicator.BusyContentTemplate">
            <summary>
            Gets or sets the <see cref="P:Telerik.Windows.Controls.RadBusyIndicator.BusyContentTemplate"/> property. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadBusyIndicator.DisplayAfter">
            <summary>
            Gets or sets the <see cref="P:Telerik.Windows.Controls.RadBusyIndicator.DisplayAfter"/> property. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadBusyIndicator.IsBusy">
            <summary>
            Gets or sets the <see cref="P:Telerik.Windows.Controls.RadBusyIndicator.IsBusy"/> property. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadBusyIndicator.IsContentVisible">
            <summary>
            Gets or sets the <see cref="P:Telerik.Windows.Controls.RadBusyIndicator.IsContentVisible"/> property. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadBusyIndicator.OverlayStyle">
            <summary>
            Gets or sets the <see cref="P:Telerik.Windows.Controls.RadBusyIndicator.OverlayStyle"/> property. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadBusyIndicator.ProgressBarStyle">
            <summary>
            Gets or sets the <see cref="P:Telerik.Windows.Controls.RadBusyIndicator.ProgressBarStyle"/> property. This is a dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.FrameworkElementToImageConverter">
            <summary>
            A helper class used to convert framework elements to image snapshots
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.FrameworkElementToImageConverter.CloneImageElement(System.Windows.Controls.Image)">
            <summary>
            Clones an existing image element so it can be placed within different panels simultaniously
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.KeyboardModifiers">
            <summary>
            This class presents a way to query the state of the various keyboard modifier keys.
            It also allows you to check the state of the shortcut key for the current platform.
            </summary>
            <remarks>
            The different platforms Silverlight runs on employ differring input conventions. Thus shortcuts for common actions such as Copy, Paste and Select All
            are activated using one key on Windows (Control), but using another on Mac OS X (Apple). Using this class should save you tedious platform checks.
            It is inadvisable, however, to use the IsShortcutKeyDown property before you've researched what the accepted shortcut for the relevant platform is.
            Even though this class addresses a Silverlight scenario, it will also work on WPF.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyboardModifiers.PlatformID">
            <summary>
            Gets or sets the PlatformID.
            </summary>
            <remarks>You only need to use this if you wish to mock this class.</remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyboardModifiers.ModifierKeysFunc">
            <summary>
            Gets or sets the Func that provides a ModifierKeys value.
            </summary>
            <remarks>You only need to use this if you wish to mock this class.</remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyboardModifiers.Modifiers">
            <summary>
            Gets the keyboard modifier keys.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyboardModifiers.IsShortcutKeyDown">
            <summary>
            Gets a value indicating whether the platform-specific shortcut meta key is pressed
            </summary>
            <remarks>
            For most systems (Windows + Linux) the shortcut key is Control. However, under Mac OS X the shortcut key is Apple (Command).
            Note that you still have to know if the relevant shortcut on Mac uses Command, because it can be entirely different.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyboardModifiers.IsControlDown">
            <summary>
            Gets a value indicating whether the Control key is pressed.
            </summary>
            <value>
            	<c>true</c> if the Control key is pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyboardModifiers.IsAltDown">
            <summary>
            Gets a value indicating whether the Alt key is pressed.
            </summary>
            <value>
            	<c>true</c> if the Alt key is pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyboardModifiers.IsShiftDown">
            <summary>
            Gets a value indicating whether the Shift key is pressed.
            </summary>
            <value>
            	<c>true</c> if the Shift key is pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyboardModifiers.IsCommandDown">
            <summary>
            Gets a value indicating whether the Apple (Command) key is pressed.
            </summary>
            <value>
            	<c>true</c> if the Apple (Command) key is pressed; otherwise, <c>false</c>.
            </value>
            <remarks>
            This is only appliccable on Silverlight under Mac OS X
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.Automation.Peers.SelectorItemAutomationPeer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Object,Telerik.Windows.Controls.Automation.Peers.SelectorAutomationPeer)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Automation.Peers.SelectorItemAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="selectorAutomationPeer">The selector automation peer.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.SelectorItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>
            The object that implements the pattern interface, or null if the specified pattern interface is not implemented.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value that indicates whether an item is selected.
            </summary>
            <value></value>
            <returns>true if the element is selected; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider"/> and acts as the container for the calling object.
            </summary>
            <value></value>
            <returns>The UI automation provider.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ViewModelBase">
            <summary>
            Base class for all ViewModel classes.
            It provides support for property change notifications and has a DisplayName property.
            This class is abstract.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ViewModelBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ViewModelBase"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ViewModelBase.VerifyPropertyName(System.String)">
            <summary>
            Warns the developer if this object does not have
            a public property with the specified name. This 
            method does not exist in a Release build.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ViewModelBase.OnPropertyChanged(System.String)">
            <summary>
            Raises this object's <see cref="E:Telerik.Windows.Controls.ViewModelBase.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The property that has a new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ViewModelBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises this object's <see cref="E:Telerik.Windows.Controls.ViewModelBase.PropertyChanged"/> event. 
            </summary>
            <remarks>
            Use the following syntax:
            this.OnPropertyChanged(() =&gt; this.MyProperty);
            instead of:
            this.OnPropertyChanged("MyProperty");
            </remarks>
            <param name="propertyExpression">A MemberExpression, containing the property that value changed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ViewModelBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing,
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ViewModelBase.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.ViewModelBase.PropertyChanged">
            <summary>
            Raised when a property on this object has a new value.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SilverlightMemoryLeaks">
            <summary>
            Holds extension methods for <see cref="T:System.Windows.PropertyChangedCallback"/> delegate.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SilverlightMemoryLeaks.PatchInlineStyle(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            	Represents the callback that is invoked when the effective property value of a dependency property changes.
            </summary>
            <param name="sender"> The System.Windows.DependencyObject on which the property has changed value.</param>
            <param name="args"> Event data that is issued by any event that tracks changes to the effective value of this property.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Filtering.Editors.StringFilterEditor">
            <summary>
            StringFilterEditor.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Filtering.Editors.StringFilterEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Filtering.Editors.StringFilterEditor"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TextBoxBehavior">
            <summary>
            TextBoxBehavior.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TextBoxBehavior.GetUpdateTextOnTextChanged(System.Windows.Controls.TextBox)">
            <summary>
            Gets the whether text should be updated on each text change.
            </summary>
            <param name="textBox">The text box.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TextBoxBehavior.SetUpdateTextOnTextChanged(System.Windows.Controls.TextBox,System.Boolean)">
            <summary>
            Sets whether text should be updated on each text change.
            </summary>
            <param name="textBox">The text box.</param>
            <param name="value">if set to <c>true</c> then text should be updated.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.TextBoxBehavior.GetUpdateTextOnEnter(System.Windows.Controls.TextBox)">
            <summary>
            Gets the whether text should be updated on enter.
            </summary>
            <param name="textBox">The text box.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TextBoxBehavior.SetUpdateTextOnEnter(System.Windows.Controls.TextBox,System.Boolean)">
            <summary>
            Sets whether text should be updated on enter.
            </summary>
            <param name="textBox">The text box.</param>
            <param name="value">if set to <c>true</c> then text should be updated.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.TextBoxBehavior.UpdateTextOnEnterProperty">
            <summary>
            Represents the UpdateTextOnEnter attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TextBoxBehavior.UpdateTextOnTextChangedProperty">
            <summary>
            Represents the UpdateTextOnTextChanged attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TextBoxBehavior.GetSelectAllOnGotFocus(System.Windows.Controls.TextBox)">
            <summary>
            Gets the whether SelectAll should be called when focus is got.
            </summary>
            <param name="textBox">The text box.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TextBoxBehavior.SetSelectAllOnGotFocus(System.Windows.Controls.TextBox,System.Boolean)">
            <summary>
            Sets whether SelectAll should be called when focus is got.
            </summary>
            <param name="textBox">The text box.</param>
            <param name="value">if set to <c>true</c> then SelectAll should be called when focus is got.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.TextBoxBehavior.SelectAllOnGotFocusProperty">
            <summary>
            Represents the SelectAllOnGotFocus attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TextBoxBehavior.GetSelectAllOnTripleClick(System.Windows.Controls.TextBox)">
            <summary>
            Gets the whether SelectAll should be called when mouse is triple clicked.
            </summary>
            <param name="textBox">The text box.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TextBoxBehavior.SetSelectAllOnTripleClick(System.Windows.Controls.TextBox,System.Boolean)">
            <summary>
            Sets whether SelectAll should be called when mouse is triple clicked.
            </summary>
            <param name="textBox">The text box.</param>
            <param name="value">if set to <c>true</c> then SelectAll should be called when focus is got.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.TextBoxBehavior.SelectAllOnTripleClickProperty">
            <summary>
            Represents the SelectAllOnTripleClick attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TextBoxBehavior.TripleClickInstanceProperty">
            <summary>
            Represents the SelectAllOnTripleClick attached property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.Popup">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.UsePlacementTargetAsClipElementProperty">
             <summary>
            
             </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.CloseOnOutsideClickProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.CatchClickOutsidePopupProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.PlacementRectangleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.PlacementTargetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.PlacementProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.ClipAroundElementProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.OwnerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.IsOpenProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.OpenedEvent">
            <summary>
            Identifies the Opened routed event.
            </summary>
            <returns>
            The identifier for the Opened routed event.
            </returns>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.Popup.ClosedEvent">
            <summary>
            Identifies the Closed routed event.
            </summary>
            <returns>
            The identifier for the Closed routed event.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.Popup.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.Popup.AdjustLocation">
            <summary>
            Resets the Popup location. Needed by RadComboBox.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.Popup.OnContentChanged(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="oldContent"></param>
            <param name="newContent"></param>
        </member>
        <member name="E:Telerik.Windows.Controls.Primitives.Popup.ClickedOutsidePopup">
            <summary>
            
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Primitives.Popup.Opened">
            <summary>
            
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Primitives.Popup.Closed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.RealPopup">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.ClipAroundElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.PlacementTarget">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.PlacementRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.Placement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.UsePlacementTargetAsClipElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.CloseOnOutsideClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.CatchClickOutsidePopup">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.HorizontalOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.VerticalOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.Popup.IsOpen">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PopupExtensions">
            <summary>
            This class contains attached properties for the Popup class. These properties are meant to be used to fill the gaps between
            the WPF Popup class and the Silverlight one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupExtensions.IsOpenProperty">
            <summary>
            Indentifies the IsOpen attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupExtensions.StaysOpenProperty">
            <summary>
            Indentifies the StaysOpen attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupExtensions.PlacementRectangleProperty">
            <summary>
            Indentifies the PlacementRectangle attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupExtensions.PlacementProperty">
            <summary>
            Indentifies the Placement attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupExtensions.PlacementTargetProperty">
            <summary>
            Indentifies the PlacementTarget attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupExtensions.OwnerProperty">
            <summary>
            Indentifies the Owner attached property. This property is used to determine the Owner of the popup - the element that will be clickable when
            the StaysOpen attached property is set to false.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupExtensions.WrapperProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.GetIsOpen(System.Windows.DependencyObject)">
            <summary>
            Gets a value indicating whether the Popup is open or not.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <returns>A value indicating whether the Popup is open or not.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.SetIsOpen(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a value indicating whether the Popup is open or not.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <param name="value">A value indicating whether the Popup is open or not.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.GetStaysOpen(System.Windows.DependencyObject)">
            <summary>
            Gets a value indicating whether the Popup stays open when clicking outside or not.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <returns>A value indicating whether the Popup stays open when clicking outside or not.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.SetStaysOpen(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a value indicating whether the Popup stays open when clicking outside or not.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <param name="value">A value indicating whether the Popup stays open when clicking outside or not.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.GetPlacement(System.Windows.DependencyObject)">
            <summary>
            Gets a value describing the PlacementMode of the Popup.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <returns>A value describing the PlacementMode of the Popup.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.SetPlacement(System.Windows.DependencyObject,Telerik.Windows.Controls.PlacementMode)">
            <summary>
            Sets a value describing the PlacementMode of the Popup.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <param name="value">A value describing the PlacementMode of the Popup.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.GetPlacementRectangle(System.Windows.DependencyObject)">
            <summary>
            Gets the rectangle relative to which the System.Windows.Controls.Primitives.Popup control is positioned when it opens.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <returns>The rectangle relative to which the System.Windows.Controls.Primitives.Popup control is positioned when it opens.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
            <summary>
            Sets the rectangle relative to which the System.Windows.Controls.Primitives.Popup control is positioned when it opens.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <param name="value">The rectangle relative to which the System.Windows.Controls.Primitives.Popup control is positioned when it opens.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.GetPlacementTarget(System.Windows.DependencyObject)">
            <summary>
            Gets the element relative to which the System.Windows.Controls.Primitives.Popup is positioned when it opens.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <returns>The element relative to which the System.Windows.Controls.Primitives.Popup is positioned when it opens.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
            <summary>
            Sets the element relative to which the System.Windows.Controls.Primitives.Popup is positioned when it opens.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <param name="value">The element relative to which the System.Windows.Controls.Primitives.Popup is positioned when it opens.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.GetOwner(System.Windows.DependencyObject)">
            <summary>
            Gets the owner of the Popup.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <returns>The owner of the Popup.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupExtensions.SetOwner(System.Windows.DependencyObject,System.Windows.UIElement)">
            <summary>
            Sets the owner of the Popup.
            </summary>
            <param name="obj">The corresponding popup.</param>
            <param name="value">The owner of the Popup.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.QuickStart.HeaderedContentControl">
            <summary>
            A HeaderedContentControl control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.QuickStart.HeaderedContentControl.#ctor">
            <summary>
            Initializes a new instance of the RadButton class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.QuickStart.QuickStart">
            <summary>
            Container for the ConfigurationPanel attached property used in QuickStart application.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.QuickStart.QuickStart.GetExampleHeader(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the ExampleHeader attached property from a given DependencyObject.
            </summary>
            <param name="obj">The DependencyObject from which to read the property value.</param>
            <returns>The value of the ExampleHeader attached property.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.QuickStart.QuickStart.SetExampleHeader(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the value of the ExampleHeader attached property to a given DependencyObject.
            </summary>
            <param name="obj">The DependencyObject on which to set the property value.</param>
            <param name="value">The property value to set.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.QuickStart.QuickStart.ExampleHeaderProperty">
            <summary>
            Identifies the ExampleHeader attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.QuickStart.QuickStart.GetConfigurationPanel(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the ConfigurationPanel attached property from a given DependencyObject.
            </summary>
            <param name="obj">The DependencyObject from which to read the property value.</param>
            <returns>The value of the ConfigurationPanel attached property.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.QuickStart.QuickStart.SetConfigurationPanel(System.Windows.DependencyObject,System.Windows.Controls.Panel)">
            <summary>
            Sets the value of the ConfigurationPanel attached property to a given DependencyObject.
            </summary>
            <param name="obj">The DependencyObject on which to set the property value.</param>
            <param name="value">The property value to set.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.QuickStart.QuickStart.ConfigurationPanelProperty">
            <summary>
            Identifies the ConfigurationPanel attached property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DependencyObjectExtensions">
            <summary>
            Holds extension methods for <see cref="T:System.Windows.DependencyObject"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DependencyObjectExtensions.GetVisualParent``1(System.Windows.DependencyObject)">
            <summary>
            Searches up in the visual tree for parent element of the specified type.
            </summary>
            <typeparam name="T">
            The type of the parent that will be searched up in the visual object hierarchy. 
            The type should be <see cref="T:System.Windows.DependencyObject"/>.
            </typeparam>
            <param name="dependencyObject">The target <see cref="T:System.Windows.DependencyObject"/> which visual parents will be traversed.</param>
            <returns>Visual parent of the specified type if there is any, otherwise null.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DependencyObjectExtensions.FindChildByType``1(System.Windows.DependencyObject)">
            <summary>
            Finds child element of the specified type. Uses breadth-first search.
            </summary>
            <typeparam name="T">
            The type of the child that will be searched in the object hierarchy. The type should be <see cref="T:System.Windows.DependencyObject"/>.
            </typeparam>
            <param name="source">The target <see cref="T:System.Windows.DependencyObject"/> which children will be traversed.</param>
            <returns>The first child element that is of the specified type.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DependencyObjectExtensions.IsLocalValueSet(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Determines whether the specified dependency property local value is set.
            </summary>
            <seealso cref="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)"/>
            <param name="dependencyObject">The dependency object.</param>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Dock">
            <summary>
            Specifies the Dock position of a child element that is inside a DockPanel.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Left">
            <summary>
            A child element that is positioned on the left side of the DockPanel.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Top">
            <summary>
            A child element that is positioned at the top of the DockPanel. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Right">
            <summary>
            A child element that is positioned at the top of the DockPanel. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Bottom">
            <summary>
            A child element that is positioned at the bottom of the DockPanel.
            </summary>
        </member>
        <member name="T:Telerik.Configuration.Assemblies.AssemblyInfoHelper">
            <summary>
            This class supports the controls infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:Telerik.Configuration.Assemblies.AssemblyInfoHelper.CopyrightMessage">
            <summary>
            This field supports the controls infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.BinaryImageConverter">
            <summary>
            Converts byte array to image using.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.BinaryImageConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            BitmapImage.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.BinaryImageConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.BooleanToOpacityConverter">
            <summary>
            Represents the converter that converts Boolean values to and from 1 and 0 opacity.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.BooleanToOpacityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.BooleanToOpacityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Media.Brushes.FromKnownColor(System.String)">
            <summary>
            Gets a SolidColorBrush from a known color's name.
            </summary>
            <param name="colorName">The name of the known color.</param>
            <returns>Retuns a SolidColorBrush from a known color.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.DropDownButtonPosition">
            <summary>
            Determines possible positions in a 2D environment.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DropDownButtonPosition.Right">
            <summary>
            Porition is at right side.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DropDownButtonPosition.Bottom">
            <summary>
            Porition is beneath the content.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DropDownButtonPosition.Left">
            <summary>
            Porition is at left side.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DropDownButtonPosition.Top">
            <summary>
            Porition is above the content.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadButton">
            <summary>
            A Button control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadButton.CommandParameterProperty">
            <summary>
            Identifies the CommandParameter property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadButton.CommandProperty">
            <summary>
            Identifies the Command property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadButton.CommandTargetProperty">
            <summary>
            Identifies the CommandTarget property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadButton.HoverDelayProperty">
            <summary>
            Identifies the HoverDelay property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadButton.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadButton.IsBackgroundVisibleProperty">
            <summary>
            Identifies the IsBackgroundVisible property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadButton.ActivateEvent">
            <summary>
            Identifies the Activate routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadButton.HoverEvent">
            <summary>
            Identifies the Hover routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadButton.ClickEvent">
            <summary>
            Identifies the Click property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadButton.#ctor">
            <summary>
            Initializes a new instance of the RadButton class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadButton.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes
            (such as a rebuilding layout pass) call.
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadButton.OnActivate">
            <summary>
            Raises the <see cref="E:Activate"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadButton.OnHover">
            <summary>
            Invocated when the hover happens.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadButton.OnClick">
            <summary>
            Invoke the base OnClick and execute the associated Command.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadButton.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoked on focus lost.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadButton.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoked on got focus.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Starts the auto open timer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Stops the auto open timer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadButton.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Restarts the auto open timer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadButton.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Restarts the Hover Timer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Telerik.Windows.Controls.RadButton.Activate">
            <summary>
            Occurs when button is clicked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadButton.Hover">
            <summary>
            Occurs when button is hovered.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadButton.Command">
            <summary>
            Gets the command that will be executed when the command source is invoked.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadButton.CommandParameter">
            <summary>
            Represents a user defined data value that can be passed to the command when it is executed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadButton.CommandTarget">
            <summary>
            The object that the command is being executed on.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadButton.HoverDelay">
            <summary>
            Gets or sets whether the popup opens when mouse hovers for pointed milliseconds
            Value of zero means no auto open.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadButton.CornerRadius">
            <summary>
            Gets or sets a value that represents the degree to which the corners of the control are rounded. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadButton.IsBackgroundVisible">
            <summary>
            Sets the visual appearance of the chrome not to render in Normal mode.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDropDownButton">
            <summary>
            A DropDownButton control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownIndicatorVisibilityProperty">
            <summary>
            Identifies the DropDownContent property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.AutoOpenDelayProperty">
            <summary>
            Identifies the AutoOpenDelay property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.CloseOnEscapeProperty">
            <summary>
            Identifies the CloseOnEscape property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.CloseOnEnterProperty">
            <summary>
            Identifies the CloseOnEnter property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownContentProperty">
            <summary>
            Identifies the DropDownContent property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownWidthProperty">
            <summary>
            Identifies the PopupWidth property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownHeightProperty">
            <summary>
            Identifies the PopupHeight property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownMaxWidthProperty">
            <summary>
            Identifies the PopupMaxWidth property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownMaxHeightProperty">
            <summary>
            Identifies the PopupMaxHeight property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.IsOpenProperty">
            <summary>
            Identifies the IsOpen property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.KeepOpenProperty">
            <summary>
            Identifies the KeepOpen property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownButtonPositionProperty">
            <summary>
            Identifies the DropDownButtonPosition property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownPlacementProperty">
            <summary>
            Identifies the DropDownPlacement property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.PopupPlacementTargetProperty">
            <summary>
            Identifies the PopupPlacementTarget property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownContentTemplateProperty">
            <summary>
            Identifies the DropDownContentTemplate property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownContentTemplateSelectorProperty">
            <summary>
            Identifies the DropDownContentTemplateSelector property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownClosedEvent">
            <summary>
            Identifies the DropDownClosed property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownOpenedEvent">
            <summary>
            Identifies the DropDownOpened property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDropDownButton.DropDownOpeningEvent">
            <summary>
            Identifies the DropDownOpening property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.#ctor">
            <summary>
            Initializes a new instance of the RadDropDownButton class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes
            (such as a rebuilding layout pass) call 
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.SetPopupPlacement(Telerik.Windows.Controls.PlacementMode)">
            <summary>
            Initializes the placement of the Popup window.
            </summary>
            <param name="placement">
            Position to place the Popup window.
            </param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.OnHover">
            <summary>
            Invocated when the hover happens.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.OnActivate">
            <summary>
            Raises the <see cref="E:Activate"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.OnClick">
            <summary>
            Invoke the base OnClick and toggle the IsOpen property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Closes the popup on Escape key.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.ApplyDropDownButtonPosition">
            <summary>
            Initializes the position of the DropDown indicator and
            correct the placement of the Popup window.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.ApplyPopupPlacement">
            <summary>
            Set the placement of the Popup window.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.OnDropDownContentChanged(System.Object,System.Object)">
            <summary>
            Called when the DropDownContent property of a RadDropDownButton changes.
            </summary>
            <param name="oldValue">The old value of the DropDownContent property.</param>
            <param name="newValue">The new value of the DropDownContent property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.OnDropDownPlacementChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when the DropDownPlacement property of a RadDropDownButton changes.
            </summary>
            <param name="oldValue">The old value of the DropDownPlacement property.</param>
            <param name="newValue">The new value of the DropDownPlacement property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.OnDropDownContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when the DropDownContentTemplate property of a RadDropDownButton changes.
            </summary>
            <param name="oldValue">The old value of the DropDownContentTemplate property.</param>
            <param name="newValue">The new value of the DropDownContentTemplate property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDropDownButton.OnDropDownContentTemplateSelectorChanged(Telerik.Windows.Controls.DataTemplateSelector,Telerik.Windows.Controls.DataTemplateSelector)">
            <summary>
            Called when the DropDownContentTemplateSelector property of a RadDropDownButton changes.
            </summary>
            <param name="oldValue">The old value of the DropDownContentTemplateSelector property.</param>
            <param name="newValue">The new value of the DropDownContentTemplateSelector property.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDropDownButton.DropDownClosed">
            <summary>
            Occurs when the Popup is closed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDropDownButton.DropDownOpened">
            <summary>
            Occurs when the Popup is opened.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDropDownButton.DropDownOpening">
            <summary>
            Occurs when the Popup is opening.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.IsOpen">
            <summary>
            Gets or sets whether the drop-down area is opened.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.KeepOpen">
            <summary>
            Gets or sets whether the drop-down area should remain opened.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.DropDownIndicatorVisibility">
            <summary>
            Gets or sets whether the DropDown indicator is visible.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.AutoOpenDelay">
            <summary>
            Gets or sets whether the popup opens when mouse hovers for pointed milliseconds.
            Value of zero means no auto open.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.CloseOnEscape">
            <summary>
            Gets or sets whether the popup closes when the Escape key toggles.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.CloseOnEnter">
            <summary>
            Gets or sets whether the popup closes when the Enter key toggles.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.DropDownContent">
            <summary>
            Gets or sets the drop-down area's content.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.DropDownButtonPosition">
            <summary>
            Gets or sets the position of the drop down indicator.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.DropDownPlacement">
            <summary>
            Gets or sets the position of the drop-down area.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.DropDownContentTemplate">
            <summary>
            Gets or sets the template used to display the drop-down content of the button.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.DropDownContentTemplateSelector">
            <summary>
            Gets or sets the template-selector used to display the drop-down content of the button.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.DropDownWidth">
            <summary>
            Gets or sets the Width of the drop-down area.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.DropDownHeight">
            <summary>
            Gets or sets the Height of the drop-down area.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.DropDownMaxWidth">
            <summary>
            Gets or sets the MaxWidth of the drop-down area.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.DropDownMaxHeight">
            <summary>
            Gets or sets the MaxHeight of the drop-down area.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDropDownButton.PopupPlacementTarget">
            <summary>
            Get/set te placement for the popup element.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadRadioButton">
            <summary>
            A RadioButton control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRadioButton.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRadioButton.IsBackgroundVisibleProperty">
            <summary>
            Identifies the IsBackgroundVisible property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRadioButton.ActivateEvent">
            <summary>
            Identifies the Activate routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRadioButton.ClickEvent">
            <summary>
            Identifies the Click property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRadioButton.CommandProperty">
            <summary>
            Identifies the Command property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRadioButton.CommandTargetProperty">
            <summary>
            Identifies the CommandTarget property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRadioButton.#ctor">
            <summary>
            Initializes a new instance of the RadRadioButton class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRadioButton.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes
            (such as a rebuilding layout pass) call 
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRadioButton.OnActivate">
            <summary>
            Raises the <see cref="E:Activate"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRadioButton.OnToggle">
            <summary>
            Invoke the base OnToggle and execute the associated Command.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRadioButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoke on mouse enter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRadioButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoke on mouse leave.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRadioButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoke on mouse left button up.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRadioButton.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoke on focus lost.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRadioButton.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoked on got focus.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRadioButton.CornerRadius">
            <summary>
            Gets or sets a value that represents the degree to which the corners of the control are rounded. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRadioButton.IsBackgroundVisible">
            <summary>
            Sets the visual appearance of the chrome not to render in Normal mode.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadRadioButton.Activate">
            <summary>
            Occurs when button is clicked.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRadioButton.Command">
            <summary>
            Gets the command that will be executed when the command source is invoked.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRadioButton.CommandTarget">
            <summary>
            The object that the command is being executed on.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadToggleButton">
            <summary>
            A ToggleButton control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadToggleButton.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadToggleButton.IsBackgroundVisibleProperty">
            <summary>
            Identifies the IsBackgroundVisible property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadToggleButton.ActivateEvent">
            <summary>
            Identifies the Activate routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadToggleButton.PreviewClickEvent">
            <summary>
            Identifies the PreviewClick property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadToggleButton.ClickEvent">
            <summary>
            Identifies the Click property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadToggleButton.CommandProperty">
            <summary>
            Identifies the Command property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadToggleButton.CommandTargetProperty">
            <summary>
            Identifies the CommandTarget property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadToggleButton.#ctor">
            <summary>
            Initializes a new instance of the RadToggleButton class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadToggleButton.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes
            (such as a rebuilding layout pass) call 
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadToggleButton.OnClick">
            <summary>
            Called when a control is clicked by the mouse or the keyboard.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadToggleButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoke on mouse enter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadToggleButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoke on mouse leave.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadToggleButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoke on mouse left button up.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadToggleButton.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoke on focus lost.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadToggleButton.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Invoked on got focus.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadToggleButton.CornerRadius">
            <summary>
            Gets or sets a value that represents the degree to which the corners of the control are rounded. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadToggleButton.IsBackgroundVisible">
            <summary>
            Sets the visual appearance of the chrome not to render in Normal mode.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadToggleButton.Activate">
            <summary>
            Occurs when button is clicked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadToggleButton.PreviewClick">
            <summary>
            Occurs when the content will be Clicked.
            If the event handler set True for the Handled proterty then the button will not be clicked.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadToggleButton.Command">
            <summary>
            Gets the command that will be executed when the command source is invoked. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadToggleButton.CommandTarget">
            <summary>
            The object that the command is being executed on.This is a dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Chromes.ButtonChrome">
            <summary>
            Renders visual states of a button.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.InnerCornerRadiusProperty">
            <summary>
            Identifies the InnerCornerRadius dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.OrientationProperty">
            <summary>
            Identifies the Orientation property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderEnabledProperty">
            <summary>
            Identifies the RenderEnabled property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderNormalProperty">
            <summary>
            Identifies the RenderNormal property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderActiveProperty">
            <summary>
            Identifies the RenderActive property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderHighlightedProperty">
            <summary>
            Identifies the RenderHighlighted property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderSelectedProperty">
            <summary>
            Identifies the RenderSelected property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderCheckedProperty">
            <summary>
            Identifies the RenderChecked property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderMouseOverProperty">
            <summary>
            Identifies the RenderMouseOver property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderPressedProperty">
            <summary>
            Identifies the RenderPressed property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderFocusedProperty">
            <summary>
            Identifies the RenderFocused property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Chromes.ButtonChrome.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Windows.Controls.Chromes.ButtonChrome"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Chromes.ButtonChrome.#ctor">
            <summary>
            Initializes a new instance of the ButtonChrome class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Chromes.ButtonChrome.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.InnerCornerRadius">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.CornerRadius">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.Orientation">
            <summary>
            Sets the visual appearance of the chrome to render Horizontal or Vertical button.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderEnabled">
            <summary>
            Sets the visual appearance of the chrome to render Enabled.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderNormal">
            <summary>
            Sets the visual appearance of the chrome not to render in Normal mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderActive">
            <summary>
            Sets the visual appearance of the chrome not to render in Active mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderHighlighted">
            <summary>
            Sets the visual appearance of the chrome to render in Highlighted mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderSelected">
            <summary>
            Sets the visual appearance of the chrome to render in Selected mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderChecked">
            <summary>
            Sets the visual appearance of the chrome to render in Selected mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderMouseOver">
            <summary>
            Sets the visual appearance of the chrome to render MouseOver.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderPressed">
            <summary>
            Sets the visual appearance of the chrome to render Pressed state.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ButtonChrome.RenderFocused">
            <summary>
            Sets the visual appearance of the chrome to render Focused state.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Chromes.ShadowChrome">
            <summary>
            Renders shadow image.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Chromes.ShadowChrome.#ctor">
            <summary>
            Initializes a new instance of the ShadowChrome class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Chromes.ValidationTooltip">
            <summary>
            Renders a Validation tooltip.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ValidationTooltip.IsOpenProperty">
            <summary>
            Identifies the IsOpenProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ValidationTooltip.TooltipPlacementTargetProperty">
            <summary>
            Identifies the TooltipPlacementTargetProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ValidationTooltip.TooltipContentProperty">
            <summary>
            Identifies the TooltipContentProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ValidationTooltip.TooltipContentTemplateProperty">
            <summary>
            Identifies the TooltipContentProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Chromes.ValidationTooltip.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadiusProperty dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Chromes.ValidationTooltip.#ctor">
            <summary>
            Initializes a new instance of the ValidationTooltip class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Chromes.ValidationTooltip.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ValidationTooltip.CornerRadius">
            <summary>
            Used to set the CornerRadius of the invalidation visual
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ValidationTooltip.IsOpen">
            <summary>
            Used to open or close the tooltip.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ValidationTooltip.TooltipPlacementTarget">
            <summary>
            Used as PlacementTarget for the Error ToolTip.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ValidationTooltip.TooltipContent">
            <summary>
            Used to set the content of the tooltip.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Chromes.ValidationTooltip.TooltipContentTemplate">
            <summary>
            ContentTemplate for the Tooltip's Content.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Clipboard">
            <summary>
            Provides clipboard support.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Clipboard.IsEnabledProperty">
            <summary>
            Identifies the IsEnabled dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Clipboard.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a value indicating whether clipboard support is enabled.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Clipboard.GetIsEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets a value indicating whether clipboard support is enabled.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Clipboard.SetData(System.Windows.Input.KeyEventArgs,System.String)">
            <summary>
            Sets data to the clipboard.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Clipboard.GetData(System.Windows.Input.KeyEventArgs)">
            <summary>
            Gets data from the clipboard.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Clipboard.SetText(System.String)">
             <summary>
             Sets Unicode text data to store on the clipboard, 
             for later access with GetText.
             </summary>
             <param name="text">
             A string that contains the Unicode text data to store on the clipboard.
            </param>
        </member>
        <member name="M:Telerik.Windows.Controls.Clipboard.GetText">
             <summary>
             Retrieves Unicode text data from the system clipboard, 
             if Unicode text data exists.
             </summary>
             <returns>
             If Unicode text data is present on the system clipboard, 
             returns a string that contains the Unicode text data. Otherwise, 
             returns an empty string.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.EnumHelper">
            <summary>
            Utility class that adds missing in Silverlight <see cref="T:System.Enum"/> methods.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.EnumHelper.GetValues``1">
            <summary>
            Gets the values.
            </summary>
            <typeparam name="T">The type of the enum.</typeparam>
            <returns>All enum value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.EnumHelper.GetValues(System.Type)">
            <summary>
            Gets the values.
            </summary>
            <param name="enumType">Type of the enum.</param>
            <returns>All enum value.</returns>
            <exception cref="T:System.ArgumentException">Given <c>enumType</c> is not <see cref="T:System.Enum"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><c>enumType</c> is null.</exception>
        </member>
        <member name="T:Telerik.Windows.ValidateValueCallback">
            <summary>
            Callback that validates the new value for the dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.PropertyMetadata">
            <summary>
            Defines certain behavior aspects of a dependency property as it is applied 
            to a specific type, including conditions it was registered with. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,Telerik.Windows.CoerceValueCallback)">
            <summary>
            Initializes a new instance of the PropertyMetadata class with the specified default value and callbacks. 
            </summary>
            <param name="defaultValue">
            The default value of the dependency property, usually 
            provided as a value of some specific type.
            </param>
            <param name="propertyChangedCallback">
            Reference to a handler implementation that is to be called by the 
            property system whenever the effective value of the property changes.
            </param>
            <param name="coerceValueCallback">
            Reference to a handler implementation that is to be called whenever the 
            property system calls CoerceValue against this property.
            </param>
        </member>
        <member name="M:Telerik.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
            <summary>
            Initializes a new instance of the PropertyMetadata class with the specified 
            PropertyChangedCallback implementation reference. 
            </summary>
            <param name="defaultValue">
            The default value of the dependency property, usually 
            provided as a value of some specific type.
            </param>
            <param name="propertyChangedCallback">
            Reference to a handler implementation that is to be called by the 
            property system whenever the effective value of the property changes.
            </param>
        </member>
        <member name="M:Telerik.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
            <summary>
            Initializes a new instance of the PropertyMetadata class with the specified 
            PropertyChangedCallback implementation reference. 
            </summary>
            <param name="propertyChangedCallback">
            Reference to a handler implementation that is to be called by the 
            property system whenever the effective value of the property changes.
            </param>
        </member>
        <member name="M:Telerik.Windows.PropertyMetadata.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the PropertyMetadata class with the specified 
            default value. 
            </summary>
            <param name="defaultValue">
            The default value of the dependency property, usually 
            provided as a value of some specific type.
            </param>
        </member>
        <member name="M:Telerik.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,Telerik.Windows.CoerceValueCallback,Telerik.Windows.ValidateValueCallback)">
            <summary>
            Initializes a new instance of the PropertyMetadata class with the specified default value and callbacks. 
            </summary>
            <param name="defaultValue">
            The default value of the dependency property, usually 
            provided as a value of some specific type.
            </param>
            <param name="propertyChangedCallback">
            Reference to a handler implementation that is to be called by the 
            property system whenever the effective value of the property changes.
            </param>
            <param name="coerceValueCallback">
            Reference to a handler implementation that is to be called whenever the 
            property system calls CoerceValue against this property.
            </param>
            <param name="validateValueCallback">
            Reference to a handler implementation that is to be called whenever the 
            property system calls ValidateValue against this property.
            </param>
        </member>
        <member name="M:Telerik.Windows.PropertyMetadata.#ctor">
            <summary>
            Initializes a new instance of the PropertyMetadata class with the specified 
            default value. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.FrameworkPropertyMetadataOptions.AffectsArrange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.FrameworkPropertyMetadataOptions.AffectsParentArrange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.FrameworkPropertyMetadataOptions.AffectsParentMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.FrameworkPropertyMetadataOptions.AffectsRender">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.FrameworkPropertyMetadataOptions.Inherits">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.FrameworkPropertyMetadataOptions.None">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ImageConverter">
            <summary>
            Provides a type converter to convert Image objects from String representation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overloaded. Returns whether this converter can convert an object of one type to the type of this converter.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">A Type that represents the type you wish to convert from.</param>
            <returns>true if this object can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given value object to a Image object.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo that specifies the culture to which to convert.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ListBox">
            <summary>
            Represents a selection control with a drop-down list that can be shown or hidden by
            clicking the arrow on the control.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Selector">
            <summary>
            Represents a control that allows a user to select items from among its child elements.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ItemsControl">
            <summary>
                Base class for all the items controls.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemsControl.ItemContainerStyleProperty">
            <summary>
                Identifies the ItemContainerStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty">
            <summary>
            Identifies the IsTextSearchEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty">
            <summary>
                Identifies the ItemContainerStyleSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty">
            <summary>
                Identifies the ItemTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemsControl.IsFocusedProperty">
            <summary>
            Identifies the IsFocused dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemsControl.HasItemsProperty">
            <summary>
            Identifies the HasItems dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.#ctor">
            <summary>
            Initializes a new instance of the ItemsControl class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)">
            <summary>
                Returns the ItemsControl of the given container.
            </summary>
            <param name="container">The container for which to retrieve the ItemsControl.</param>
            <returns>The ItemsControl of the container.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application 
            code or internal processes (such as a rebuilding layout pass) call
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.ChangeVisualState">
            <summary>
            Changes the visual state of the control using transitions.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.ChangeVisualState(System.Boolean)">
            <summary>
            Updates the visual state of the control.
            </summary>
            <param name="useTransitions">Indicates whether transitions should be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnIsEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the IsEnabled property of the control changes.
            </summary>
            <param name="e">The information about the new and old value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>Called when the value of the <see cref="P:System.Windows.Controls.ItemsControl.Items"/>
            property changes.</summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>
            that contains the event data</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.GotFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.LostFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnItemTemplateSelectorChanged(Telerik.Windows.Controls.DataTemplateSelector,Telerik.Windows.Controls.DataTemplateSelector)">
            <summary>
                When overriden OnRadItemTemplateSelectorChanged is called when the TemplateSelector for the contained items changes.
            </summary>
            <param name="oldItemTemplateSelector">The old TemplateSelector.</param>
            <param name="newItemTemplateSelector">The new TemplateSelector.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">Element used to display the specified item.</param>
            <param name="item">Specified item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnIsFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsFocused property changes.
            </summary>
            <param name="e">Event args with the old and the new value of the property.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.IsTextSearchEnabled">
            <summary>
            Gets or sets a value indicating whether TextSearch is enabled on the 
            ItemsControl instance. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.HasItems">
            <summary>
            Gets whether the ItemsControl has any children.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.IsFocused">
            <summary>
            	Gets a value indicating whether the control is focused.
            </summary>
            <remarks>
            	<para>
                    Please note that <strong>IsFocused</strong> is a read only property. 
                    To focus the Control, use the <see cref="M:System.Windows.Controls.Control.Focus"/> method.
                </para> 
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.ItemContainerStyle">
            <summary>
                Gets or sets the style for the item containers of the control. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.ItemContainerStyleSelector">
            <summary>
                Gets or sets the style selector for the items of the control. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.ItemTemplateSelector">
            <summary>
            Gets or sets the template selector for the items of the control. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.OverrideStyles">
            <summary>
            Gets whether Style should be applied on container even if Style property is already set.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.ItemContainerGenerator">
            <summary>
            Gets the ItemContainerGenerator that is associated with the control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectedValuePathProperty">
            <summary>
            Identifies the SelectedValuePath dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectedValueProperty">
            <summary>
            Identifies the SelectedValue dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.IsSelectedProperty">
            <summary>
            Identifies the IsSelected attached property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectedEvent">
            <summary>
            Identifies the Selected routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectionChangedEvent">
            <summary>
            Identifies the SelectionChanged routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.UnselectedEvent">
            <summary>
            Identifies the Unselected routed event. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.GetIsSelected(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsSelected attached property that indicates whether an item is selected.
            </summary>
            <param name="element">Object to query concerning the IsSelected property.</param>
            <returns>Bool value, true if the IsSelected property is true.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.AddSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the Selected attached event. 
            </summary>
            <param name="element">Element that listens to this event.</param>
            <param name="handler">Event handler to add.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.AddUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the Unselected attached event. 
            </summary>
            <param name="element">Element that listens to this event.</param>
            <param name="handler">Event handler to add.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.RemoveSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the Selected attached event.
            </summary>
            <param name="element">Element that listens to this event.</param>
            <param name="handler">Event handler to remove.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.RemoveUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the Unselected attached event.
            </summary>
            <param name="element">Element that listens to this event.</param>
            <param name="handler">Event handler to remove.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a property value that indicates whether an item in a Selector is selected.
            </summary>
            <param name="element">Object on which to set the property.</param>
            <param name="isSelected">Value to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.Items"/> property changes.
            </summary>
            <param name="e">Information about the change.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.OnSelectedValueChanged(System.Object,System.Object)">
            <summary>
            Called when the SelectedValue property is changed.
            </summary>
            <param name="oldValue">The old value of the SelectedValue property.</param>
            <param name="newValue">The new value of the SelectedValue property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Called when the selection changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.OnSelectedValuePathChanged(System.String,System.String)">
            <summary>
            Called when the SelectedValuePath property is changed.
            </summary>
            <param name="oldValue">The old value of the SelectedValuePath property.</param>
            <param name="newValue">The new value of the SelectedValuePath property.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.Selector.SelectionChanged">
            <summary>
            Occurs when the selection of a Selector changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Selector.SelectedValuePath">
            <summary>
            Gets or sets ... This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Selector.SelectedValue">
            <summary>
            Gets or sets ... This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Selector.SelectedIndex">
            <summary>
            Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Selector.SelectedItem">
            <summary>
            Gets or sets the first item in the current selection or returns null if the selection is empty. This is a dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.Begin">
            <summary>
            Begin tracking selection changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.SelectJustThisItem(`0)">
            <summary>
            Select just this item; all other items in Selection will be removed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.Cancel">
            <summary>
            Cancels the currently active SelectionChanger.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.Select(`0)">
            <summary>
            Queue something to be added to the selection.
            Does nothing if the item is already selected.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.Unselect(`0)">
            <summary>
            Queue something to be removed from the selection.
            Does nothing if the item is not already selected.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.AddToSelection(`0)">
            <summary>
            Commit selection changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Selector.SelectionChanger`1.IsActive">
            <summary>
            True if there is a SelectionChange currently in progress.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ListBox.SelectedItemsProperty">
            <summary>
            Identifies the SelectedItems dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ListBox.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ListBox"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application
            code or internal processes (such as a rebuilding layout pass) call
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.SelectAll">
            <summary>
            Selects all.
            </summary>
            <exception cref="T:System.NotSupportedException"><c>NotSupportedException</c>.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.HandleKeyDown(System.Windows.Input.Key,Telerik.Windows.Controls.ListBoxItem)">
            <summary>
            Handles the keyboard input.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.IsVerticalOrientation">
            <summary>
            Gets the value specifying whether the control is vertical, or not.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the control to the specified item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.SetFocusedItem(System.Int32,System.Boolean)">
            <summary>
            Focuses the item at the specified index, optionally scrolling the control to make it visible.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.NavigateNext">
            <summary>
            Navigates to the next item.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.NavigatePrev">
            <summary>
            Navigates to the previous item.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display a specified item.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.ListBoxItem"/>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>
            True if the item is (or is eligible to be) its own container; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Called when the selection changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.OnKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when OnKeyDown event is raised.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.ElementScrollViewerScrollInDirection(System.Windows.Input.Key)">
            <summary>
            Scrolls the ScrollViewer element in the specified direction, if present in the control template.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.MakeAnchorSelection(Telerik.Windows.Controls.ListBoxItem,System.Boolean)">
            <summary>
            Selects the items between the current anchor item and the specified item.
            </summary>
            <param name="actionItem">The item that has been clicked.</param>
            <param name="clearCurrent">Boolean specifying whether to clear the current selection or not.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.MakeAnchorSelection(Telerik.Windows.Controls.ListBoxItem)">
            <summary>
            Selects the items between the current anchor item and the specified item.
            </summary>
            <param name="actionItem">The item that has been clicked.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.MakeSingleSelection(Telerik.Windows.Controls.ListBoxItem)">
            <summary>
            Selects the specified item, unselects any other selected items.
            </summary>
            <param name="listItem">The item to select.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.MakeToggleSelection(Telerik.Windows.Controls.ListBoxItem)">
            <summary>
            Toggles the selected state of the specified item. Updates the anchor item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.NavigateToItem(System.Object)">
            <summary>
            Navigates to the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.Select(System.Object)">
            <summary>
            Selects the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBox.FocusedItem">
            <summary>
            Gets the focused item.
            </summary>
            <value>The focused item.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBox.SelectedItems">
            <summary>
            Gets or sets the selected items.
            </summary>
            <value>The selected items.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBox.SelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
            <value>The selection mode.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBox.AnchorItem">
            <summary>
            The current anchor item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBox.FocusedIndex">
            <summary>
            Gets the index of the focused ListBox item.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.NullableDoubleConverter">
            <summary>
            This class is used by the design-time and XAML infrastructure to convert string to nullable double.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.NullableDoubleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.NullableDoubleConverter"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.NullableDoubleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from.
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.NullableDoubleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance [can convert from] the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="sourceType">Type of the source.</param>
            <returns>
            	<c>true</c> if this instance [can convert from] the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.PickerTextBox">
            <summary>
            A PickerTextBox class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PickerTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.PickerTextBox"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PickerTextBox.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code
            or internal processes (such as a rebuilding layout pass) call System.Windows.Controls.Control.ApplyTemplate().
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PickerTextBox.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PickerToggleButton">
            <summary>
            A PickerToggleButton class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PickerToggleButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.PickerToggleButton"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PickerToggleButton.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.StringToLongTypeConverter">
            <summary>
            This class is used by the design-time and XAML infrastructure to convert string to long.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StringToLongTypeConverter.#ctor">
            <summary>
            Initializes a new instance of the StringToLong class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StringToLongTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.StringToLongTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.StringToLongTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.StringToLongTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.QuickStart.ThemeAwareBackgroundBehavior">
            <summary>
            Telerik QuickStart Framework element background changer.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.QuickStart.ThemeAwareBackgroundBehavior.IsEnabledProperty">
            <summary>
            Identifies the IsEnabled attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.QuickStart.ThemeAwareBackgroundBehavior.GetIsEnabled(System.Windows.DependencyObject)">
            <summary>
            Returns a bool that specifies whether the behavior is enabled or not.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.QuickStart.ThemeAwareBackgroundBehavior.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Writes the TextPath attached property to the specified element.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Automation.Peers.RadRangeBaseAutomationPeer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.RadRangeBaseAutomationPeer.#ctor(Telerik.Windows.Controls.RadRangeBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Automation.Peers.RadRangeBaseAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.RadRangeBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">A value from the enumeration.</param>
            <returns>null.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.RadRangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
            <summary>
            Sets the value of the control.
            </summary>
            <param name="val">Sets the value of the control.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadRangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
            <summary>
            Gets a value that specifies whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadRangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
            <summary>
            Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> property when a large change is made, such as with the PAGE DOWN key.
            </summary>
            <value></value>
            <returns>
            The large-change value supported by the control or null (Nothing in Microsoft Visual Basic .NET) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange"/>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadRangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Maximum">
            <summary>
            Gets the maximum range value supported by the control.
            </summary>
            <value></value>
            <returns>
            The maximum value supported by the control or null (Nothing in Microsoft Visual Basic .NET) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum"/>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadRangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Minimum">
            <summary>
            Gets the minimum range value supported by the control.
            </summary>
            <value></value>
            <returns>
            The minimum value supported by the control or null (Nothing in Microsoft Visual Basic .NET) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum"/>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadRangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
            <summary>
            Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> property when a small change is made, such as with an arrow key.
            </summary>
            <value></value>
            <returns>
            The small-change value or null (Nothing in Microsoft Visual Basic .NET) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange"/>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.RadRangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>
            The value of the control or null (Nothing in Microsoft Visual Basic .NET) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/>.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSlider">
            <summary>
            Slider control lets the user select from a range of values by moving a slider. 
            Slider is used to enable to user to gradually modify a value (range selection). 
            Slider is an easy and natural interface for users, because it provides good visual feedback.
            </summary> 
        </member>
        <member name="T:Telerik.Windows.Controls.DoubleRangeBase">
            <summary>
            DoubleRangeBase inherits RangeBase and introduces two new fields - SelectionStart and SelectionEnd.
            SelectionStart cannot be greater than SelectionEnd and SelectionEnd cannot be less than SelectionStart.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DoubleRangeBase.IsSelectionRangeEnabledProperty">
            <summary>
            Identifies the IsSelectionRangeEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DoubleRangeBase.SelectionStartProperty">
            <summary>
            Identifies the SelectionStart dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DoubleRangeBase.SelectionEndProperty">
            <summary>
            Identifies the SelectionEnd dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DoubleRangeBase.MinimumRangeSpanProperty">
            <summary>
            Identifies the MinimumRangeSpan dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DoubleRangeBase.MaximumRangeSpanProperty">
            <summary>
            Identifies the MaximumRangeSpan dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DoubleRangeBase.SelectionProperty">
            <summary>
            Identifies the SelectionProperty dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DoubleRangeBase"/> class.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DoubleRangeBase.SelectionChangedEvent">
            <summary>
            Identifies the Hover routed event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property changes.
            </summary>
            <param name="oldMinimum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param>
            <param name="newMinimum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property changes.
            </summary>
            <param name="oldMaximum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param>
            <param name="newMaximum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnSelectionStartChanged(System.Double,System.Double)">
            <summary>
            Called when SelectionStartChanged event occurs.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnSelectionEndChanged(System.Double,System.Double)">
            <summary>
            Called when SelectionEndChanged event occurs.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnMinimumRangeSpanChanged(System.Double,System.Double)">
            <summary>
            Called when MinimumRangeSpanChanged event occurs.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnMaximumRangeSpanChanged(System.Double,System.Double)">
            <summary>
            Called when MaximumRangeSpanChanged event occurs.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnIsSelectionRangeEnabledChanged">
            <summary>
            Called when the IsSelectionRangeEnabled property changes value.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnSelectionRangeChanged(Telerik.Windows.Controls.SelectionRangeChangedEventArgs,Telerik.Windows.Controls.SelectionRangeChangedEventArgs)">
            <summary>
            Called when SelectionRange event occurs.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnSelectionChanged">
            <summary>
            Called when SelectionRange event occurs.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.BeginInit">
            <summary>
            Called when the control begins Initializing
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.EndInit">
            <summary>
            Called when the control is Initialized
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.DoubleRangeBase.SelectionStartChanged">
            <summary>
            Occurs when SelectionStart property changes value.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.DoubleRangeBase.SelectionEndChanged">
            <summary>
            Occurs when SelectionEnd property changes value.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.DoubleRangeBase.MinimumRangeSpanChanged">
            <summary>
            Occurs when MinimumRangeSpan property changes value.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.DoubleRangeBase.MaximumRangeSpanChanged">
            <summary>
            Occurs when MaximumRangeSpan property changes value.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.DoubleRangeBase.SelectionRangeChanged">
            <summary>
            Occurs when SelectionRange changes value. It is now depricated. Use SelectionChanged event instead.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.DoubleRangeBase.SelectionChanged">
            <summary>
            Occurs when the Selection property has changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DoubleRangeBase.IsInitialized">
            <summary>
            Indicates whether the Control is initialized.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DoubleRangeBase.IsSelectionRangeEnabled">
            <summary>
            Gets or sets a value that indicates whether the RadSlider can displays a selection range. This is a dependency property. 
            </summary>
            <remarks>
            The <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionStart">SelectionStart</see> and <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see> properties define a selection range and must be set for the selection range to appear when IsSelectionRangeEnabled is set to true. 
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			IsSelectionRangeEnabled="True" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.Orientation = Orientation.Horizontal;
            		radSlider1.IsSelectionRangeEnabled = true;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionRange">
            <summary>
            Gets the difference between SelectionStart and SelectionEnd.
            </summary>
            <value>The difference between SelectionStart and SelectionEnd.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.DoubleRangeBase.Selection">
            <summary>
            Gets or sets a value indicating whether side ticks are enabled.
            </summary>
            <value><c>True</c> if side ticks are enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">
            <summary>
            Gets or sets the largest value of a specified selection.
            </summary>
            <remarks>
            The value of the <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see> property cannot be greater than the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum">Maximum</see> property and cannot be less than the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum">Minimum</see> property. 
            The value of the <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see> property must also be greater than or equal to the value of the <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionStart">SelectionStart</see> property. 
            If the value of the <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see> property is greater than the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum">Maximum</see> property or less than the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum">Minimum</see> property, the value is set to the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum">Maximum</see> or <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum">Minimum</see> property respectively. 
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			Orientation="Horizontal"
            			Minimum="0" Maximum="10"
            			TickPlacement="TopLeft"
            			TickFrequency="1"
            			IsSelectionRangeEnabled="True" 
            			SelectionEnd="8"
            			SelectionStart="6"/>
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.Orientation = Orientation.Horizontal;
            		radSlider1.Minimum = 0;
            		radSlider1.Maximum = 10;
            		radSlider1.TickPlacement = TickPlacement.TopLeft;
            		radSlider1.TickFrequency = 1;
            		radSlider1.IsSelectionRangeEnabled = true;
            		radSlider1.SelectionEnd = 8;
            		radSlider1.SelectionStart = 6;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionStart">
            <summary>
            Gets or sets the smallest value of a specified selection.
            </summary>
            <remarks>
            IsSelectionRangeEnabled must be True in order to use <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionStart">SelectionStart</see> and <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see>
            The value of the SelectionStart property cannot be less than the value of the Minimum property and cannot be greater than the value of the Maximum property. The value of the SelectionEnd property must also be greater than or equal to the value of the SelectionStart property. If SelectionStart is less than Minimum or greater than Maximum, SelectionStart is set to the value of Minimum or Maximum respectively.
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			Orientation="Horizontal"
            			Minimum="0" Maximum="10"
            			TickPlacement="TopLeft"
            			TickFrequency="1"
            			IsSelectionRangeEnabled="True" 
            			SelectionEnd="8"
            			SelectionStart="6"/>
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.Orientation = Orientation.Horizontal;
            		radSlider1.Minimum = 0;
            		radSlider1.Maximum = 10;
            		radSlider1.TickPlacement = TickPlacement.TopLeft;
            		radSlider1.TickFrequency = 1;
            		radSlider1.IsSelectionRangeEnabled = true;
            		radSlider1.SelectionEnd = 8;
            		radSlider1.SelectionStart = 6;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.DoubleRangeBase.MinimumRangeSpan">
            <summary>
            Gets or sets the minimum value distance between <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionStart">SelectionStart</see> and <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see>.
            </summary>
            <remarks>
            The <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.IsSelectionRangeEnabled">IsSelectionRangeEnabled</see> property of RadSlider has to be set to True.
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			IsSelectionRangeEnabled="True"
            			MinimumRangeSpan="0.1"/>
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.IsSelectionRangeEnabled = true;
            		radSlider1.MinimumRangeSpan = 0.1;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.DoubleRangeBase.MaximumRangeSpan">
            <summary>
            Gets or sets the maximum value distance between <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionStart">SelectionStart</see> and <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see>.
            </summary>
            <remarks>
            The <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.IsSelectionRangeEnabled">IsSelectionRangeEnabled</see> property of RadSlider has to be set to True.
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			IsSelectionRangeEnabled="True"
            			MaximumRangeSpan="0.1"/>
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.IsSelectionRangeEnabled = true;
            		radSlider1.MaximumRangeSpan = 0.7;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsFocusedProperty">
            <summary>
                Identifies the IsFocused dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.EnableSideTicksProperty">
            <summary>
            Identifies the EnableSideTicks dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.HandlesVisibilityProperty">
            <summary>
            Identifies the HandlesVisibility dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsDirectionReversedProperty">
            <summary> 
            Identifies the IsDirectionReversed dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsMoveToPointEnabledProperty">
            <summary>
            Identifies the IsMoveToPointEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.StepActionProperty">
            <summary>
            Identifies the StepAction dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TickTemplateSelectorProperty">
            <summary>
            Identifies the TickTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TickTemplateProperty">
            <summary>
            Identifies the TickTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TicksProperty">
            <summary>
            Identifies the Ticks dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.ResultTicksProperty">
            <summary>
            Identifies the Ticks dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TickPlacementProperty">
            <summary>
            Identifies the TickPlacement dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TickFrequencyProperty">
            <summary>
            Identifies the TickFrequency dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsMouseWheelEnabledProperty">
            <summary>
            Identifies the IsMouseWheelEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsSnapToTickEnabledProperty">
            <summary>
            Identifies the IsSnapToTickEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.RepeatIntervalProperty">
            <summary>
            Identifies the RepeatInterval dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.ThumbVisibilityProperty">
            <summary>
            Identifies the ThumbVisibility dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.DelayProperty">
            <summary>
            Identifies the Delay dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsDeferredDraggingEnabledProperty">
            <summary>
            Identifies the IsDeferredDraggingEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.ThumbStyleProperty">
            <summary>
            Identifies the ThumbStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TrackStyleProperty">
            <summary>
            Identifies the TrackStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TickBarStyleProperty">
            <summary>
            Identifies the TickBarStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.SelectionMiddleThumbStyleProperty">
            <summary>
            Identifies the SelectionMiddleThumbStyleProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IncreaseHandleStyleProperty">
            <summary>
            Identifies the HandleStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.DecreaseHandleStyleProperty">
            <summary>
            Identifies the HandleStyle dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnMinimumChanged(System.Double,System.Double)">
            <summary> 
            Called when the Minimum property changes.
            </summary> 
            <param name="oldMinimum">Old value of the Minimum property.</param>
            <param name="newMinimum">New value of the Minimum property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnMaximumChanged(System.Double,System.Double)">
            <summary> 
            Called when the Maximum property changes.
            </summary>
            <param name="oldMaximum">Old value of the Maximum property.</param> 
            <param name="newMaximum">New value of the Maximum property.</param> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnSelectionStartChanged(System.Double,System.Double)">
            <summary>
            Called when SelectionStart changes value.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnSelectionEndChanged(System.Double,System.Double)">
            <summary>
            Called when SelectionEnd changes value.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnMinimumRangeSpanChanged(System.Double,System.Double)">
            <summary>
            Called when MinimumRangeSpanChanged event occurs.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnIsSelectionRangeEnabledChanged">
            <summary>
            Called when the IsSelectionRangeEnabled property changes value.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnOrientationChanged">
            <summary> 
            Called when the Orientation property changes value.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnMaximumRangeSpanChanged(System.Double,System.Double)">
            <summary>
            Called when MaximumRangeSpanChanged event occurs.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadSlider"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnValueChanged(System.Double,System.Double)">
            <summary>
            Called when the Value property changes. 
            </summary>
            <param name="oldValue">Old value of the Value property.</param>
            <param name="newValue">New value of the Value property.</param> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.ChangeVisualState">
            <summary>
            Changes the visual state of the control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnIsFocusedChanged">
            <summary>
            Called when the is focused changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel"/> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.ChangeVisualState(System.Boolean)">
            <summary>
            Changes the visual state of the control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.UpdateTrackLayout">
            <summary> 
            This method will take the current min, max, and value to 
            calculate and layout the current control measurements.
            </summary> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSlider.DragStarted">
            <summary>
            Occurs when a thumb starts dragging.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSlider.DragDelta">
            <summary>
            Occurs when the mouse moves while the thumb is still on focus.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSlider.DragCompleted">
            <summary>
            Occurs when the Thumb control loses mouse capture.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.ResultTicks">
            <summary>
            Gets or sets the style for the border track used internally by the slider.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IncreaseHandleStyle">
            <summary>
            Gets or sets the style for the Increase Repeate button used internally by the slider.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.DecreaseHandleStyle">
            <summary>
            Gets or sets the style for the Decrease Repeate button used internally by the slider.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.SelectionMiddleThumbStyle">
            <summary>
            Gets or sets the style for the border track used internally by the slider.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.ThumbStyle">
            <summary>
            Gets or sets the style for the Thumbs used internally by the slider.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.TrackStyle">
            <summary>
            Gets or sets the style for the track used internally by the slider.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.TickBarStyle">
            <summary>
            Gets or sets the style for the RadTickBar used internally by the slider.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.EnableSideTicks">
            <summary>
            Gets or sets a value indicating whether side ticks are enabled.
            </summary>
            <value><c>True</c> if side ticks are enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.StepAction">
            <summary>
            This property determines how the slider will behave when in range mode. Setting this property to ChangeRange will move only the corresponding thumb when Large or Small step is performed.
            Setting the property to MoveRange will move the whole range when Large or Small change has been performed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.Delay">
            <summary>
            Gets or sets the Delay property of the Increase and Decrease handles.
            </summary>
            <remarks>
            Each click on any of the handles increases/decreases the value by the amount that is set to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">SmallChange</see> property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.HandlesVisibility">
            <summary>
            Gets or sets the Visibility property of the Increase and Decrease handles.
            </summary>
            <remarks>
            Each click on any of the handles increases/decreases the value by the amount that is set to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">SmallChange</see> property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.RepeatInterval">
            <summary>
            Gets or sets the RepeatInterval property of the Increase and Decrease handles.
            </summary>
            <remarks>
            Each click on any of the handles increases/decreases the value by the amount that is set to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">SmallChange</see> property.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsDirectionReversed">
            <summary> 
            Gets or sets the direction of increasing value. This is a dependency property. 
            </summary>
            <remarks>
            The value of this property determines the direction of increasing value of a RadRadSlider. 
            	<para>
            		For example, when you move the thumb control up on a vertical RadSlider when the IsDirectionReversed property is set to false, the Value of the RadSlider increases. 
            		If the value of the <b>IsDirectionReversed</b> property is changed to true, the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value">Value</see> of the <see cref="T:Telerik.Windows.Controls.RadSlider">RadSlider</see> decreases as the thumb moves up. 
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsMoveToPointEnabled">
            <summary>
            Gets or sets a value that indicates whether the thumb of a RadSlider moves immediately to the location of the mouse click that occurs while the mouse pointer pauses on the RadSlider track. This is a dependency property. 
            </summary>
            <remarks>
            When this property is set to false and a mouse click occurs along the RadSlider away from the thumb, the thumb moves in the direction of the mouse click. 
            Instead of moving immediately to the mouse click location, the thumb moves a distance that is defined by the RepeatInterval property for each mouse click.
            The effect of multiple mouse clicks can be emulated by pressing and holding the left mouse button until the thumb is repositioned to the desired location. 
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsSnapToTickEnabled">
            <summary>
            Gets or sets a value that indicates whether the RadSlider automatically moves the thumb to the closest tick mark. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.Orientation">
            <summary>
            Gets or sets the orientation of a RadSlider. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsMouseWheelEnabled">
            <summary>
            Gets or sets whether the wheel of the mouse can be used for sliding the thumb. This is dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.TickFrequency">
            <summary>
            Gets or sets the interval between tick marks. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.TickPlacement">
            <summary>
            Gets or sets the position of tick marks with respect to the track of the RadSlider. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.Ticks">
            <summary>
            Gets or sets the positions of the tick marks to display for a RadSlider. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.TickTemplate">
            <summary>
            Gets or sets the TickTemplate that will be used to represent a single tick on the TickBar.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.TickTemplateSelector">
            <summary>
            Gets or sets the TickTemplateSelector that will be used to pick a template for the tick marks.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.ThumbVisibility">
            <summary>
            Gets or sets the visibility of the thumb(s) in RadSlider.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsDeferredDraggingEnabled">
            <summary>
            Gets or sets a value that indicates whether the content is stationary when the user drags the Thumb  of RadSlider. This is dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsFocused">
            <summary>
                Gets whether the RadSlider control is focused. This is a dependency property.
            </summary>			
        </member>
        <member name="T:Telerik.Windows.Controls.RadExpanderDecorator">
            <summary>
             A ContentControl used to represent the Expand/Collapse decorator in the Expander's Header.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpanderDecorator.IsExpandedProperty">
            <summary>
            Identifies the IsExpanded property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpanderDecorator.IsPressedProperty">
            <summary>
            Identifies the IsPressed property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpanderDecorator.IsHighlightedProperty">
            <summary>
            Identifies the IsHighlighted property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpanderDecorator.ExpandDirectionProperty">
            <summary>
            Identifies the ExpandDirection property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderDecorator.#ctor">
            <summary>
            Initializes a new instance of the RadExpanderDecorator class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderDecorator.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes
            (such as a rebuilding layout pass) call 
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderDecorator.ChangeVisualState(System.Boolean)">
            <summary>
            Updates the visual state of the control.
            </summary>
            <param name="useTransitions">Indicates whether transitions should be used.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpanderDecorator.IsExpanded">
            <summary>
            Gets or sets whether the state is expanded. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpanderDecorator.IsPressed">
            <summary>
            Gets or sets whether the state is pressed. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpanderDecorator.IsHighlighted">
            <summary>
            Gets or sets whether the mouse is over. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpanderDecorator.ExpandDirection">
            <summary>
            Gets or sets the direction in which the expander would expand. This is a dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadExpanderHeader">
            <summary>
             A Toggle Button used to represent the Clickable Header of the Expander control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpanderHeader.IsExpandedProperty">
            <summary>
            Identifies the IsExpanded property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpanderHeader.DecoratorTemplateProperty">
            <summary>
            Identifies the DecoratorTemplate property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpanderHeader.ExpandDirectionProperty">
            <summary>
            Identifies the ExpandDirection property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpanderHeader.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderHeader.#ctor">
            <summary>
            Initializes a new instance of the RadExpanderHeader class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderHeader.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call.
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderHeader.ChangeVisualState(System.Boolean)">
            <summary>
            Updates the visual state of the control.
            </summary>
            <param name="useTransitions">Indicates whether transitions should be used.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpanderHeader.IsExpanded">
            <summary>
            Gets or sets whether the content is expanded. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpanderHeader.DecoratorTemplate">
            <summary>
            Gets or sets a template for the Expander-decorator item. This is a dependency property.
            </summary>
            <remarks>
            The Expander Decorator is a ContentControl that represents the Expander's state.
            You can customize the Decorator item via this property.
            </remarks>
            <example>
                <code lang="XAML">
                    <![CDATA[
                        <telerik:RadExpander
                            x:Name="myExpander" 
                            DecoratorTemplate="{StaticResource CustomDecoratorTemplate}"/>
                    ]]>
                </code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpanderHeader.ExpandDirection">
            <summary>
            Gets or sets the direction in which the content would expand. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpanderHeader.CornerRadius">
            <summary>
            Gets or sets a value that represents the degree (in pixels) to which the corners of a Border are rounded. This is a dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.InvertedBooleanToOpacityConverter">
            <summary>
            Represents the converter that converts Boolean values to and from 1 and 0 opacity.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InvertedBooleanToOpacityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.InvertedBooleanToOpacityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.Designer">
            <summary>
            Wraps the system DesignTimeProperties in order to allow design time simulation for unit testing purposes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.Designer.SimulateDesignMode(System.Boolean)">
            <summary>
            Simulates design mode for the purposes of unit testing.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.WindowCommands">
            <summary>
            Holds commands that can be used by a window.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Maximize">
            <summary>
            Gets value that represents the maximize window command.
            </summary>
            <value>The maximize command.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Minimize">
            <summary>
            Gets value that represents the minimize window command.
            </summary>
            <value>The minimize command.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Restore">
            <summary>
            Gets value that represents the restore window command.
            </summary>
            <value>The restore command.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Close">
            <summary>
            Gets value that represents the close window command.
            </summary>
            <value>The close command.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Confirm">
            <summary>
            Gets value that represents the Confirm window command.
            </summary>
            <value>The Confirm command.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Cancel">
            <summary>
            Gets value that represents the Cancel window command.
            </summary>
            <value>The Cancel command.</value>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Maximize">
            <summary>
            Maximazes the window.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Minimize">
            <summary>
            Minimizes the window.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Restore">
            <summary>
            Restores the window to Normal state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Close">
            <summary>
            Closes the window.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Confirm">
            <summary>
            Closes the window with DilogResult true.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Cancel">
            <summary>
            Closes the window with DilogResult false.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DoubleToGridLengthConverter">
            <summary>
            Value converter used with binding to Convert double to GridLength.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleToGridLengthConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleToGridLengthConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.INotifyLayoutChange">
            <summary>
            Notifies client when starts and finishes updating the layout.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.INotifyLayoutChange.LayoutChangeStarted">
            <summary>
            Occurs when the layout change is started.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.INotifyLayoutChange.LayoutChangeEnded">
            <summary>
            Occurs when the layout change is ended.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.INotifyLayoutChange.IsLayoutChanging">
            <summary>
            Gets a value indicating whether this instance is layout changing.
            </summary>
            <value>
            	<c>True</c> if this instance is layout changing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.ExpanderExpandCollapseAnimation">
            <summary>
            Animation for the Expander Expand/Collapse.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ExpanderExpandCollapseAnimation.CreateAnimation(System.Windows.FrameworkElement)">
            <summary>
            Creates the Expander animation.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ExpanderExpandCollapseAnimation.UpdateAnimation(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Object[])">
            <summary>
            Updates the ExpanderAnimation.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyvoard that needs to be updated.</param>
            <param name="args">Optional arguments that the animation needs, can be provided by the control.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.ExpanderExpandCollapseAnimation.Direction">
            <summary>
            Gets or sets a value indicating whether the direction of the animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.ExpanderExpandCollapseAnimation.TargetElementName">
            <summary>
            Gets or sets the name of the element that sould be animated.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.ExportExtensions">
            <summary>
            This class provides methods to export the content of a generic FrameworkElement
            to image, Excel image, and Xps image formats.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.ExportExtensions.ExportToImage(System.Windows.FrameworkElement,System.IO.Stream,Telerik.Windows.Media.Imaging.BitmapEncoder)">
            <summary>
            Exports an image of the given element to stream using the specified bitmap encoder.
            </summary>
            <param name="element">FrameworkElement to get image from.</param>
            <param name="encoder">Bitmap encoder.</param>
            <param name="stream">Stream to write image to.</param>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.ExportExtensions.ExportToExcelMLImage(System.Windows.FrameworkElement,System.IO.Stream)">
            <summary>
            Exports an image of the given element to the Excel file.
            </summary>
            <param name="element">FrameworkElement to get image from.</param>
            <param name="stream">Stream.</param>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.ExportExtensions.ExportToXpsImage(System.Windows.FrameworkElement,System.IO.Stream)">
            <summary>
            Exports an image of the given element to the Xps file.
            </summary>
            <param name="element">FrameworkElement to get image from.</param>
            <param name="stream">Stream.</param>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.BitmapCodecInfo">
            <summary>
            Represents the BitmapCodecInfo class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.BitmapCodecInfo.#ctor">
            <summary>
            Initializes a new instance of the BitmapCodecInfo class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions">
            <summary>
            Gets a value that identifies the file extensions associated with the codec.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes">
            <summary>
            Gets a value that identifies the MIME types associated with the codec.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.BitmapCodecInfo.SupportsAnimation">
            <summary>
            Gets a value that indicates whether the codec supports animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.BitmapCodecInfo.SupportsMultipleFrames">
            <summary>
            Gets a value that identifies whether the codec supports multiple frames.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.BitmapEncoder">
            <summary>
            Encodes a collection of BitmapFrame objects to a stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.BitmapEncoder.#ctor">
            <summary>
            Initializes a new instance of the BitmapEncoder class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.BitmapEncoder.Dispose">
            <summary>
            Disposes the encoder.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.BitmapEncoder.Save(System.IO.Stream)">
            <summary>
            Encodes a bitmap image to a specified System.IO.Stream.
            </summary>
            <param name="stream">Stream.</param>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.BitmapEncoder.CodecInfo">
            <summary>
            Gets information that describes this codec.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.BitmapEncoder.Frames">
            <summary>
            Gets or sets the individual frames within an image.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.BitmapFrame">
            <summary>
            Represents image data accepted by encoders.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.BitmapFrame.Create(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Creates a new BitmapFrame from a given BitmapSource.
            </summary>
            <param name="source"></param>
            <returns>BitmapFrame object.</returns>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.BmpBitmapEncoder">
            <summary>
            Encodes a collection of BitmapFrame objects to a bitmap image stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.BmpBitmapEncoder.#ctor">
            <summary>
            Initializes a new instance of the BmpBitmapEncoder class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.BmpBitmapEncoder.Save(System.IO.Stream)">
            <summary>
            Encodes a bitmap image to a specified System.IO.Stream.
            </summary>
            <param name="stream">Stream.</param>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.BmpBitmapEncoder.CodecInfo">
            <summary>
            Gets information that describes this codec.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.BmpCodecInfo">
            <summary>
            Represents the BitmapCodecInfo class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.BmpCodecInfo.FileExtensions">
            <summary>
            Gets a value that identifies the file extensions associated with the codec.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.BmpCodecInfo.MimeTypes">
            <summary>
            Gets a value that identifies the MIME types associated with the codec.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.PngBitmapEncoder">
            <summary>
            Encodes a collection of BitmapFrame objects to a PNG image stream.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.PngBitmapEncoder.#ctor">
            <summary>
            Initializes a new instance of the PngBitmapEncoder class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.PngBitmapEncoder.Dispose">
            <summary>
            Disposes the encoder.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.PngBitmapEncoder.Save(System.IO.Stream)">
            <summary>
            Encodes a bitmap image to a specified System.IO.Stream.
            </summary>
            <param name="stream">Stream.</param>
        </member>
        <member name="M:Telerik.Windows.Media.Imaging.PngBitmapEncoder.Dispose(System.Boolean)">
            <summary>
            Disposes the encoder.
            </summary>
            <param name="cleanUpBoth">Clean up.</param>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.PngBitmapEncoder.CodecInfo">
            <summary>
            Gets information that describes this codec.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngChunkTypes">
            <summary>
            Contains a list of possible chunk type identifier.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngChunkTypes.Header">
            <summary>
            The first chunk in a png file. Can only exists once. Contains 
            common information like the width and the height of the image or
            the used compression method.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngChunkTypes.Palette">
            <summary>
            The PLTE chunk contains from 1 to 256 palette entries, each a three byte
            series in the RGB format.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngChunkTypes.Data">
            <summary>
            The IDAT chunk contains the actual image data. The image can contains more
            than one chunk of this type. All chunks together are the whole image.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngChunkTypes.End">
            <summary>
            This chunk must appear last. It marks the end of the PNG datastream. 
            The chunk's data field is empty. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngChunkTypes.PaletteAlpha">
            <summary>
            This chunk specifies that the image uses simple transparency: 
            either alpha values associated with palette entries (for indexed-color images) 
            or a single transparent color (for grayscale and truecolor images). 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngChunkTypes.Text">
            <summary>
            Textual information that the encoder wishes to record with the image can be stored in 
            tEXt chunks. Each tEXt chunk contains a keyword and a text string.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngChunkTypes.Gamma">
            <summary>
            Thes chunk specifies the relationship between the image samples and the desired 
            display output intensity.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngHeader">
            <summary>
            Represents the png header chunk.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngHeader.Width">
            <summary>
            The dimension in x-direction of the image in pixels.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngHeader.Height">
            <summary>
            The dimension in y-direction of the image in pixels.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngHeader.BitDepth">
            <summary>
            Bit depth is a single-byte integer giving the number of bits per sample 
            or per palette index (not per pixel). Valid values are 1, 2, 4, 8, and 16, 
            although not all values are allowed for all color types. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngHeader.ColorType">
            <summary>
            Color type is a integer that describes the interpretation of the 
            image data. Color type codes represent sums of the following values: 
            1 (palette used), 2 (color used), and 4 (alpha channel used).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngHeader.CompressionMethod">
            <summary>
            Indicates the method  used to compress the image data. At present, 
            only compression method 0 (deflate/inflate compression with a sliding 
            window of at most 32768 bytes) is defined.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngHeader.FilterMethod">
            <summary>
            Indicates the preprocessing method applied to the image 
            data before compression. At present, only filter method 0 
            (adaptive filtering with five basic filter types) is defined.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.PngBitmapEncoder.PngHeader.InterlaceMethod">
            <summary>
            Indicates the transmission order of the image data. 
            Two values are currently defined: 0 (no interlace) or 1 (Adam7 interlace).
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.PngCodecInfo">
            <summary>
            Represents the BitmapCodecInfo class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.PngCodecInfo.FileExtensions">
            <summary>
            Gets a value that identifies the file extensions associated with the codec.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Media.Imaging.PngCodecInfo.MimeTypes">
            <summary>
            Gets a value that identifies the MIME types associated with the codec.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Media.Imaging.StreamExtension">
            <summary>
            The StreamExtension class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ContentChangeMode">
            <summary>
            Indicates the possible modes for changing the visible content of the RadFluidContentControl.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ContentChangeMode.Automatic">
            <summary>
            The content is automatically changed depending on the available space and the threshold properties.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ContentChangeMode.Manual">
            <summary>
            The content is manually changed via the State property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.FluidContentControlState">
            <summary>
            Indicattes the state of the RadFluidContentControl.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.FluidContentControlState.Small">
            <summary>
            The small content is visible.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.FluidContentControlState.Normal">
            <summary>
            The normal content is visible.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.FluidContentControlState.Large">
            <summary>
            The large content is visible.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.FluidContentControlStateChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.FluidContentControlStateChangedEventArgs.#ctor(Telerik.Windows.Controls.FluidContentControlState,Telerik.Windows.Controls.FluidContentControlState)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.FluidContentControlStateChangedEventArgs"/> class.
            </summary>
            <param name="oldState">The old state.</param>
            <param name="newState">The new state.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.FluidContentControlStateChangedEventArgs.OldState">
            <summary>
            Gets or sets the old state.
            </summary>
            <value>The old state.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.FluidContentControlStateChangedEventArgs.NewState">
            <summary>
            Gets or sets the new state.
            </summary>
            <value>The new state.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadFluidContentControl">
            <summary>
            The RadFluidContentControl has three content properties which are displayed depending on the available space.
            Using the adjustable threshold properties, the exact points at which the visible content is switched can be
            precisely controlled.
            </summary>	
        </member>
        <member name="M:Telerik.Windows.Controls.RadFluidContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadFluidContentControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFluidContentControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFluidContentControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFluidContentControl.OnContentChanged(System.Object,System.Object)">
            <summary>
            Raised on content changed
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.StateProperty">
            <summary>
            Identifies the State dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.SmallContentProperty">
            <summary>
            Identifies the SmallContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.SmallContentTemplateProperty">
            <summary>
            Identifies the SmallContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.LargeContentProperty">
            <summary>
            Identifies the LargeContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.LargeContentTemplateProperty">
            <summary>
            Identifies the LargeContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.SmallToNormalThresholdProperty">
            <summary>
            Identifies the SmallToNormalThreshold dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.NormalToSmallThresholdProperty">
            <summary>
            Identifies the NormalToSmallThreshold dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.NormalToLargeThresholdProperty">
            <summary>
            Identifies the NormalToLargeThreshold dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.LargeToNormalThresholdProperty">
            <summary>
            Identifies the LargeToNormalThreshold dependency property.
            </summary>		
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.ContentChangeModeProperty">
            <summary>
            Identifies the ContentChangeMode dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.VisibleContentTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.TransitionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.TransitionDurationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFluidContentControl.VisibleContentProperty">
            <summary>
            Identifies the VisibleContent readonly dependency property.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadFluidContentControl.StateChanged">
            <summary>
            Occurs when the State property of the control is changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.TransitionDuration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.Transition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.State">
            <summary>
            Gets or sets the current state of the FluidContentControl.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.VisibleContent">
            <summary>
            Gets the currently visible content.
            </summary>
            <value>The visible content.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.VisibleContentTemplate">
            <summary>
            Gets the currently visible content.
            </summary>
            <value>The visible content.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.SmallContent">
            <summary>
            Gets or sets the content visible when the control is in Small state.
            </summary>
            <value>The visible when the control is in Small state.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.SmallContentTemplate">
            <summary>
            Gets or sets the small content template.
            </summary>
            <value>The small content template.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.LargeContent">
            <summary>
            Gets or sets the content visible when the control is in Large state.
            </summary>
            <value>The content visible when the control is in Large state.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.LargeContentTemplate">
            <summary>
            Gets or sets the large content template.
            </summary>
            <value>The large content template.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.SmallToNormalThreshold">
            <summary>
            Gets or sets the small to normal threshold.
            </summary>
            <value>The small to normal threshold.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.NormalToSmallThreshold">
            <summary>
            Gets or sets the normal to small threshold.
            </summary>
            <value>The normal to small threshold.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.NormalToLargeThreshold">
            <summary>
            Gets or sets the normal to large threshold.
            </summary>
            <value>The normal to large threshold.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.LargeToNormalThreshold">
            <summary>
            Gets or sets the large to normal threshold.
            </summary>
            <value>The large to normal threshold.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFluidContentControl.ContentChangeMode">
            <summary>
            Gets or sets the content change mode.
            </summary>
            <value>The content change mode.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.InvertedBooleanToVisibilityConverter">
            <summary>
            Represents the converter that converts Boolean values to and from Visibility enumeration values.
            InvertedBooleanToVisibilityConverter converts "true" to Visibility.Collapsed and "false" to Visibility.Visible.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InvertedBooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.InvertedBooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.MathUtilities">
            <summary>
            Provides static methods not included in the standard Math class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MathUtilities.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.MathUtilities.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.MathUtilities.IsInRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks if a value is within a specified range
            </summary>
            <param name="value">The value to check.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>True if the values is within the range, fals otherwise</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.RadRangeBase">
            <summary>
            Represents an element that has a value within a specific range.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRangeBase.LargeChangeProperty">
            <summary>
            Identifies the LargeChange dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRangeBase.MaximumProperty">
            <summary>
            Identifies the LargeChange dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRangeBase.MinimumProperty">
            <summary>
            Identifies the LargeChange dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRangeBase.SmallChangeProperty">
            <summary>
            Identifies the LargeChange dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRangeBase.ValueProperty">
            <summary>
            Identifies the LargeChange dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRangeBase.AutoReverseProperty">
            <summary>
            Identifies the AutoReverse dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadRangeBase"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeBase.ChangeValue(System.Double)">
            <summary>
            Adds the provided delta to the current value.
            </summary>
            <param name="delta">The amount to add to Value</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeBase.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the NullableRangeBase.Maximum property changes.
            </summary>
            <param name="oldMaximum">Old value of the NullableRangeBase.Maximum property.</param>
            <param name="newMaximum">New value of the NullableRangeBase.Maximum property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeBase.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the NullableRangeBase.Minimum property changes.
            </summary>
            <param name="oldMinimum">Old value of the NullableRangeBase.Minimum property.</param>
            <param name="newMinimum">New value of the NullableRangeBase.Minimum property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeBase.OnValueChanged(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Raises the NullableRangeBase.ValueChanged routed event.
            </summary>
            <param name="oldValue">Old value of the NullableRangeBase.Value property.</param>
            <param name="newValue">New value of the NullableRangeBase.Value property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeBase.OnValueChanged(Telerik.Windows.Controls.RadRangeBaseValueChangedEventArgs)">
            <summary>
            Raises the NullableRangeBase.ValueChanged routed event.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadRangeBase.ValueChanged">
            <summary>
             Occurs when the range value changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRangeBase.AutoReverse">
            <summary>
            Gets or sets the value that specifies whether the control will change its value to its minimum when it reaches its maximum, or vice versa.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRangeBase.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the Value of a NullableRangeBase control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRangeBase.Maximum">
            <summary>
             Gets or sets the highest possible NullableRangeBase.Value of the range element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRangeBase.Minimum">
            <summary>
             Gets or sets the lowest possible NullableRangeBase.Value of the range element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRangeBase.SmallChange">
            <summary>
            Gets or sets the value to be added to or subtracted from the NullableRangeBase.Value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRangeBase.Value">
            <summary>
            Gets or sets the current setting of the range control, which may be coerced.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadRangeBaseValueChangedEventArgs">
            <summary>
            EventArgs used when <see cref="T:Telerik.Windows.Controls.RadRangeBase"/> changes its value.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeBaseValueChangedEventArgs.#ctor(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadRangeBaseValueChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRangeBaseValueChangedEventArgs.OldValue">
            <summary>
            Gets or sets the old value.
            </summary>
            <value>The old value.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRangeBaseValueChangedEventArgs.NewValue">
            <summary>
            Gets or sets the new value.
            </summary>
            <value>The new value.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.CanExecuteRoutedEventArgs">
            <summary>
            Provides data for the CanExecute and PreviewCanExecute routed events. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CanExecuteRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="genericHandler">The generic handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.CanExecuteRoutedEventArgs.CanExecute">
            <summary>
            Gets or sets a value that indicates whether the RoutedCommand associated with this event can be executed on the command target. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.CanExecuteRoutedEventArgs.Command">
            <summary>
            Gets the command associated with this event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.CanExecuteRoutedEventArgs.Parameter">
            <summary>
            Gets the command specific data. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.CanExecuteRoutedEventHandler">
            <summary>
            Represents the method that will handle the CanExecute event. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.CommandBinding">
            <summary>
            Binds a RoutedCommand to the event handlers that implement the command. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CommandBinding"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandBinding.#ctor(System.Windows.Input.ICommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CommandBinding"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandBinding.#ctor(System.Windows.Input.ICommand,Telerik.Windows.Controls.ExecutedRoutedEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CommandBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="executed">The executed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandBinding.#ctor(System.Windows.Input.ICommand,Telerik.Windows.Controls.ExecutedRoutedEventHandler,Telerik.Windows.Controls.CanExecuteRoutedEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CommandBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="executed">The executed.</param>
            <param name="canExecute">The can execute.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.CommandBinding.CanExecute">
            <summary>
            Occurs when the command associated with this CommandBinding initiates a check to determine whether the command can be executed on the command target. 
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.CommandBinding.Executed">
            <summary>
            Occurs when the command associated with this CommandBinding executes. 
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.CommandBinding.PreviewCanExecute">
            <summary>
            Occurs when the command associated with this CommandBinding initiates a check to determine whether the command can be executed on the current command target. 
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.CommandBinding.PreviewExecuted">
            <summary>
            Occurs when the command associated with this CommandBinding executes. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.CommandBinding.Command">
            <summary>
            Gets or sets the ICommand associated with this CommandBinding. 
            </summary>
            <value>The command.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.CommandBindingCollection">
            <summary>
            Represents a collection of CommandBinding objects. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.CommandConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.CommandManager">
            <summary>
            Provides command related utility methods that register CommandBinding and InputBinding objects for class owners and commands, add and remove command event handlers, and provides services for querying the status of a command. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.CanExecuteEvent">
            <summary>
            Identifies the CanExecute attached event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.ExecutedEvent">
            <summary>
            Identifies the Executed attached event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.PreviewCanExecuteEvent">
            <summary>
            Identifies the PreviewCanExecute attached event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.PreviewExecutedEvent">
            <summary>
            Identifies the PreviewExecuted attached event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.InputBindingsProperty">
            <summary>
            Identifies the InputBindings dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.CommandBindingsProperty">
            <summary>
            Identifies the CommandBindings dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.GetInputBindings(System.Windows.DependencyObject)">
            <summary>
            Gets the collection of input bindings associated with this element. 
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.SetInputBindings(System.Windows.DependencyObject,Telerik.Windows.Controls.InputBindingCollection)">
            <summary>
            Sets the collection of input bindings associated with this element. 
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.GetCommandBindings(System.Windows.DependencyObject)">
            <summary>
            Gets a collection of CommandBinding objects associated with this element. A CommandBinding enables command handling for this element, 
            and declares the linkage between a command, its events, and the handlers attached by this element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.SetCommandBindings(System.Windows.DependencyObject,Telerik.Windows.Controls.CommandBindingCollection)">
            <summary>
            Sets a collection of CommandBinding objects associated with this element. A CommandBinding enables command handling for this element, 
            and declares the linkage between a command, its events, and the handlers attached by this element.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.AddCanExecuteHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.CanExecuteRoutedEventHandler)">
            <summary>
            Attaches the specified CanExecuteRoutedEventHandler to the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.AddExecutedHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.ExecutedRoutedEventHandler)">
            <summary>
            Attaches the specified ExecutedRoutedEventHandler to the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.AddPreviewCanExecuteHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.CanExecuteRoutedEventHandler)">
            <summary>
            Attaches the specified CanExecuteRoutedEventHandler to the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.AddPreviewExecutedHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.ExecutedRoutedEventHandler)">
            <summary>
            Attaches the specified ExecutedRoutedEventHandler to the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RemoveCanExecuteHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.CanExecuteRoutedEventHandler)">
            <summary>
            Detaches the specified CanExecuteRoutedEventHandler from the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RemoveExecutedHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.ExecutedRoutedEventHandler)">
            <summary>
            Detaches the specified ExecutedRoutedEventHandler from the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.CanExecuteRoutedEventHandler)">
            <summary>
            Detaches the specified CanExecuteRoutedEventHandler from the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RemovePreviewExecutedHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.ExecutedRoutedEventHandler)">
            <summary>
            Detaches the specified ExecutedRoutedEventHandler from the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RegisterClassCommandBinding(System.Type,Telerik.Windows.Controls.CommandBinding)">
            <summary>
            Registers a CommandBinding with the specified type. 
            </summary>
            <param name="type">The type.</param>
            <param name="commandBinding">The command binding.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RegisterClassInputBinding(System.Type,Telerik.Windows.Controls.InputBinding)">
            <summary>
            Registers the specified InputBinding with the specified type. 
            </summary>
            <param name="type">The type.</param>
            <param name="inputBinding">The input binding.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.InvalidateRequerySuggested">
            <summary>
            Forces the CommandManager to raise the RequerySuggested event. 
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.CommandManager.RequerySuggested">
            <summary>
            Occurs when the CommandManager detects conditions that might change the ability of a command to execute. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ExecutedRoutedEventArgs">
            <summary>
            Provides data for the Executed and PreviewExecuted routed events. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ExecutedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="genericHandler">The generic handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ExecutedRoutedEventArgs.Command">
            <summary>
            Gets the command that was invoked. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ExecutedRoutedEventArgs.Parameter">
            <summary>
            Gets data parameter of the command. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ExecutedRoutedEventHandler">
            <summary>
            Represents the method that will handle the CommandBinding.Executed and CommandBinding.PreviewExecuted routed events, as well as related attached events. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Telerik.Windows.Controls.InputBinding">
            <summary>
            Represents a binding between an InputGesture and a command. The command is potentially a RoutedCommand. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InputBinding.#ctor(System.Windows.Input.ICommand,Telerik.Windows.Controls.InputGesture)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.InputBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="inputGesture">The input gesture.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.InputBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.InputBinding"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.InputBinding.Command">
            <summary>
            Gets the command that will be executed when the command source is invoked.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Controls.InputBinding.CommandParameter">
            <summary>
            Represents a user defined data value that can be passed to the command when it is executed.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Controls.InputBinding.CommandTarget">
            <summary>
            The object that the command is being executed on.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Controls.InputBinding.Gesture">
            <summary>
            Gets or sets the InputGesture associated with this input binding. 
            </summary>
            <value>The gesture.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.InputBindingCollection">
            <summary>
            Represents an ordered collection of InputBinding objects. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.InputGesture">
            <summary>
            Abstract class that describes input device gestures. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InputGesture.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.InputGesture"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InputGesture.Matches(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When overridden in a derived class, determines whether the specified InputGesture matches the input associated with the specified InputEventArgs object. 
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="inputEventArgs">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.InputGestureCollection">
            <summary>
            Represents an ordered collection of InputGesture objects. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.KeyBinding">
            <summary>
            Binds a KeyGesture to a RoutedCommand (or another ICommand implementation). 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyBinding"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyBinding.#ctor(System.Windows.Input.ICommand,Telerik.Windows.Controls.KeyGesture)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="gesture">The gesture.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="key">The key.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyBinding.Gesture">
            <summary>
            Gets or sets the InputGesture associated with this input binding.
            </summary>
            <value>The gesture.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyBinding.Key">
            <summary>
            Gets or sets the Key of the KeyGesture associated with this KeyBinding. 
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyBinding.Modifiers">
            <summary>
            Gets or sets the ModifierKeys of the KeyGesture associated with this KeyBinding. 
            </summary>
            <value>The modifiers.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.KeyConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.KeyGesture">
            <summary>
            Defines a keyboard combination that can be used to invoke a command. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyGesture.#ctor(System.Windows.Input.Key)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyGesture"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyGesture"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyGesture"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="modifiers">The modifiers.</param>
            <param name="displayString">The display string.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)">
            <summary>
            Returns a string that can be used to display the KeyGesture. 
            </summary>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyGesture.Matches(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When overridden in a derived class, determines whether the specified InputGesture matches the input associated with the specified InputEventArgs object.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="inputEventArgs">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyGesture.DisplayString">
            <summary>
            Gets a string representation of this KeyGesture. 
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyGesture.Key">
            <summary>
            Gets the key associated with this KeyGesture. 
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyGesture.Modifiers">
            <summary>
            Gets the modifier keys associated with this KeyGesture. 
            </summary>
            <value>The modifiers.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.KeyGestureConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.ModifierKeysConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.MouseAction">
            <summary>
            Specifies constants that define actions performed by the mouse. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.LeftClick">
            <summary>
            A left mouse button click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.LeftDoubleClick">
            <summary>
            A left mouse button double-click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.MiddleClick">
            <summary>
            A middle mouse button click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.MiddleDoubleClick">
            <summary>
            A middle mouse button double-click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.None">
            <summary>
            No action. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.RightClick">
            <summary>
            A right mouse button click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.RightDoubleClick">
            <summary>
            A right mouse button double-click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.WheelClick">
            <summary>
            A mouse wheel rotation. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.MouseActionConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseActionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseActionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseActionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseActionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.MouseBinding">
            <summary>
            Binds a MouseGesture to a RoutedCommand (or another ICommand implementation). 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.MouseBinding"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseBinding.#ctor(System.Windows.Input.ICommand,Telerik.Windows.Controls.MouseGesture)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.MouseBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="gesture">The gesture.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.MouseBinding.Gesture">
            <summary>
            Gets or sets the InputGesture associated with this input binding.
            </summary>
            <value>The gesture.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.MouseBinding.MouseAction">
            <summary>
            Gets or sets the MouseAction associated with this MouseBinding. 
            </summary>
            <value>The mouse action.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.MouseGesture">
            <summary>
            Defines a mouse input gesture that can be used to invoke a command. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseGesture.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.MouseGesture"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseGesture.#ctor(Telerik.Windows.Controls.MouseAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.MouseGesture"/> class.
            </summary>
            <param name="mouseAction">The mouse action.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseGesture.#ctor(Telerik.Windows.Controls.MouseAction,System.Windows.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.MouseGesture"/> class.
            </summary>
            <param name="mouseAction">The mouse action.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseGesture.Matches(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When overridden in a derived class, determines whether the specified InputGesture matches the input associated with the specified InputEventArgs object.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="inputEventArgs">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.MouseGesture.Modifiers">
            <summary>
            Gets or sets the modifier keys associated with this MouseGesture. 
            </summary>
            <value>ModifierKeys.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.MouseGesture.MouseAction">
            <summary>
            Gets or sets the MouseAction associated with this gesture. 
            </summary>
            <value>MouseAction.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.MouseGestureConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.RoutedCommand">
            <summary>
            Defines a command that implements ICommand and is routed through the element tree. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedCommand"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="ownerType">Type of the owner.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.#ctor(System.String,System.Type,Telerik.Windows.Controls.InputGestureCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedCommand"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="ownerType">Type of the owner.</param>
            <param name="inputGestures">The input gestures.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedCommand"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.CanExecute(System.Object,System.Windows.UIElement)">
            <summary>
            Determines whether this instance can execute the specified parameter.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="target">The target.</param>
            <returns>
            	<c>true</c> if this instance can execute the specified parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.Execute(System.Object,System.Windows.UIElement)">
            <summary>
            Executes the RoutedCommand on the current command target. 
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            True if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.System#Windows#Input#ICommand#Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.RoutedCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether the command should execute.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RoutedCommand.InputGestures">
            <summary>
            Gets the collection of InputGesture objects that are associated with this command. 
            </summary>
            <value>The input gestures.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RoutedCommand.Name">
            <summary>
            Gets the name of the command. 
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RoutedCommand.OwnerType">
            <summary>
            Gets the type that is registered with the command. 
            </summary>
            <value>The type of the owner.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RoutedUICommand">
            <summary>
            Defines an ICommand that is routed through the element tree and contains a text property. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedUICommand.#ctor(System.String,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedUICommand"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="name">The name.</param>
            <param name="ownerType">Type of the owner.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedUICommand.#ctor(System.String,System.String,System.Type,Telerik.Windows.Controls.InputGestureCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedUICommand"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="name">The name.</param>
            <param name="ownerType">Type of the owner.</param>
            <param name="inputGestures">The input gestures.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedUICommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedUICommand"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RoutedUICommand.Text">
            <summary>
            Gets or sets the text that describes this command. 
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:Telerik.Windows.RadRoutedPropertyChangedEventArgs`1">
            <summary>
            Provides data about a change in value to a dependency property as reported by particular routed events, including the previous and current value of the property that changed. 
            </summary>
            <typeparam name="T">The type of the dependency property that has changed.</typeparam>
        </member>
        <member name="M:Telerik.Windows.RadRoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the RadRoutedPropertyChangedEventArgs class.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.RadRoutedPropertyChangedEventArgs`1.#ctor(`0,`0,Telerik.Windows.RoutedEvent)">
            <summary>
            Initializes a new instance of the RadRoutedPropertyChangedEventArgs class.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="P:Telerik.Windows.RadRoutedPropertyChangedEventArgs`1.NewValue">
            <summary>
            Gets the new value.
            </summary>
            <value>The new value.</value>
        </member>
        <member name="P:Telerik.Windows.RadRoutedPropertyChangedEventArgs`1.OldValue">
            <summary>
            Gets the old value.
            </summary>
            <value>The old value.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.StepAction">
            <summary>
            Defines the behavior of a range slider when a Large/Small step is performed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.StepAction.ChangeRange">
            <summary>
            Indreases/Decreases the range.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.StepAction.MoveRange">
            <summary>
            Moves the whole range.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TelerikToolboxCategoryAttribute">
            <summary>
            This attribute should be used on classes which will be present in the Visual Studio toolbox.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TelerikToolboxCategoryAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of the ToolboxCategory attribute with the specified title.
            </summary>
            <param name="categoryTitle">The title of the category where the control will be placed</param>
        </member>
        <member name="P:Telerik.Windows.Controls.TelerikToolboxCategoryAttribute.CategoryTitle">
            <summary>
            The title of the category where the control will be placed
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TextSearchMode">
            <summary>
            Specifies how TextSearch will match items.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TextSearchMode.StartsWith">
            <summary>
            Matches items, which text starts with the search text.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TextSearchMode.Contains">
            <summary>
            Matches items, containing the search text.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TextSearchMode.StartsWithCaseSensitive">
            <summary>
            Matches items, which text starts with the search text. Case sensitive.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TextSearchMode.ContainsCaseSensitive">
            <summary>
            Matches items, containing the search text. Case sensitive.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.MetroColorPalette">
            <summary>
            This class has a singletone instance stored in the MetroColors holding the 6 brushes used to colorize the Metro Theme.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MetroColorPalette.AccentColorProperty">
            <summary>
            Identifies the AccentColor property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MetroColorPalette.BasicColorProperty">
            <summary>
            Identifies the LightHueColor property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MetroColorPalette.StrongColorProperty">
            <summary>
            Identifies the DarkHueColor property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MetroColorPalette.MainColorProperty">
            <summary>
            Identifies the MainColor property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MetroColorPalette.MarkerColorProperty">
            <summary>
            Identifies the MarkerColor property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MetroColorPalette.ValidationColorProperty">
            <summary>
            Identifies the ValidationColor property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.MetroColorPalette.AccentColor">
            <summary>
            Metro Accent Color.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.MetroColorPalette.BasicColor">
            <summary>
            Metro BasicColor Color.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.MetroColorPalette.StrongColor">
            <summary>
            Metro StrongColor Color.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.MetroColorPalette.MainColor">
            <summary>
            Metro MainColor Color.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.MetroColorPalette.MarkerColor">
            <summary>
            Metro MarkerColor Color.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.MetroColorPalette.ValidationColor">
            <summary>
            Metro Validation Color.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.MetroColors">
            <summary>
            Keeps the colors used to colorize the MetroTheme.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.MetroColors.PaletteInstance">
            <summary>
            Holds a reference to the only one existing MetroCollorPalette instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.MetroColors.Palette">
            <summary>
            Get the only one existing MetroCollorPalette instance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.MetroTheme">
            <summary>
            VistaTheme class represents the key to the Vista theme.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Theme">
            <summary>
            Contains the location of the Theme.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Theme.ApplicationThemeSetterProperty">
            <summary>
            Identifies the ApplicationThemeSetter dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Theme"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Theme"/> class.
            </summary>
            <param name="source">The Uri from which to load the Theme resources.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.GetApplicationThemeSetter(System.Windows.DependencyObject)">
            <summary>
            Gets the application theme setter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.SetApplicationThemeSetter(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the application theme setter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Theme.Source">
            <summary>
            Gets or sets a Uri source for the theme.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Theme.IsApplicationTheme">
            <summary>
            Gets or sets if the current Source is an Application Theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MetroTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.MetroTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Expression_DarkTheme">
            <summary>
            Office_BlackTheme class represents the key to the Expression_DarkTheme theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Expression_DarkTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Expression_DarkTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransparentTheme">
            <summary>
            TransparentTheme class represents the key to the Transparent theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransparentTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.TransparentTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Windows7Theme">
            <summary>
            Windows7Theme class represents the key to the Windows7 theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Windows7Theme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Windows7Theme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Office_SilverTheme">
            <summary>
            Office_SilverTheme class represents the key to the Office_Silver theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Office_SilverTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Office_SilverTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Office_BlackTheme">
            <summary>
            Office_BlackTheme class represents the key to the Office_Black theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Office_BlackTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Office_BlackTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Office_BlueTheme">
            <summary>
            Office_BlueTheme class represents the key to the Office_Blue theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Office_BlueTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Office_BlueTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SummerTheme">
            <summary>
            SummerTheme class represents the key to the Summer theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SummerTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.SummerTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ThemableAttribute">
            <summary>
            This attribute marks Telerik controls that take advantage of 
            the Theme attached property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ThemeConverter">
            <summary>
            This class is used by the design-time and XAML infrastructure to convert theme objects to strings and vice versa.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ThemeConverter"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.ThemeLocation">
            <summary>
            This enumeration is used to distinguish between built-in and custom themes.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ThemeLocation.BuiltIn">
            <summary>
            Represents a built-in theme developed by Telerik and hosted in the control assembly.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ThemeLocation.External">
            <summary>
            Represents a theme hosted in an external assembly.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ThemeLocationAttribute">
            <summary>
            The ThemeLocation attribute decorates a Theme class and carries information about where the theme is hosted.
            If a theme does not have that attribute, it is treated as an external theme by default.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeLocationAttribute.#ctor(Telerik.Windows.Controls.ThemeLocation)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ThemeLocationAttribute"/> class.
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ThemeLocationAttribute.Location">
            <summary>
            Gets the theme location type.
            </summary>
            <value>The location.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.ThemeManager">
            <summary>
            This class supports the Telerik theming infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ThemeManager.StandardThemes">
            <summary>
            Contains all standard themes.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ThemeManager.StandardThemeNames">
            <summary>
            Contains the names of all common themes - used for the QSF Theme dropdown and intellisense.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeManager.#cctor">
            <summary>
            Initializes static members of the ThemeManager class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeManager.FromName(System.String)">
            <summary>
            Returns a standard theme with the specified name. Fallbacks to the default theme 
            if a standard theme was not found.
            </summary>
            <param name="themeName">Name of the theme.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Theming">
            <summary>
            Provides functionality for changing control themes.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Theming.ThemeProperty">
            <summary>
            Gets or sets the theme of a <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Theming.SetTheme(System.Windows.DependencyObject,Telerik.Windows.Controls.Theme)">
            <summary>
            Sets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to set the theme of.</param>
            <param name="value">The new theme to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Theming.GetTheme(System.Windows.DependencyObject)">
            <summary>
            Gets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to get the theme of.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Theming.SetThemeFromParent(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Sets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to set the theme of.</param>
            <param name="parent">Parent that supplies the theme.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationExtensions.EnsureOpacityMask(Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext)">
            <summary>
            	Makes sure that the animated object has the needed opacity mask.
            </summary>
            <remarks>
            	<para>
            		Adds a vertical or horizontal opacity mask of the kind:
            	</para>
            	<![CDATA[
            	<LinearGradientBrush EndPoint="0 1">
            	    <LinearGradientBrush.RelativeTransform>
            	        <TranslateTransform Y="0" />
            	    </LinearGradientBrush.RelativeTransform>
            	    <GradientStop Offset="0" Color="Transparent" />
            	    <GradientStop Offset="0" Color="Black" />
            	    <GradientStop Offset="1" Color="Black" />
            	    <GradientStop Offset="1" Color="Transparent" />
            	</LinearGradientBrush>
            	]]>
            	</remarks>
            <param name="target">The object to set the mask for.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext">
            <summary>
            	A helper class, used for chain-creation and update of storyboards in a  jQuery way.
            </summary>
            <remarks>
            	The Result storybard is a collection of DoubleAnimationUsingKeyFrame collection.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext.StartIndex">
            <summary>
            Gets or sets the starting index or the currently affected DoubleAnimation targets.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext.EndIndex">
            <summary>
            Gets or sets the end index of the currently affected DoubleAnimation targets.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext.Targets">
            <summary>
            Gets a collection of the elemetns that is currently being animated.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext.Instance">
            <summary>
            Gets or sets the resultant Storyboard for the AnimationContext.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext.IsUpdate">
            <summary>
            Gets or sets a value idicating whether currently an animation is being created or updated.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationGroup">
            <summary>
            Represents composite animation, used for declaratively creating composite animations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationGroup.CreateAnimation(System.Windows.FrameworkElement)">
            <summary>
            Calls <see cref="M:Telerik.Windows.Controls.Animation.AnimationGroup.CreateAnimation(System.Windows.FrameworkElement)"/> for each of control 
            in <see cref="P:Telerik.Windows.Controls.Animation.AnimationGroup.Children"/> collection.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationGroup.UpdateAnimation(System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Object[])">
            <summary>
            Updates each child animation of <paramref name="storyboard"/> using according 
            animation for each child control in <see cref="P:Telerik.Windows.Controls.Animation.AnimationGroup.Children"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationGroup.Children">
            <summary>
            Gets a list of the children animation objects of this composite animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationManager">
            <summary>
            Static manager class used for dynamic animations of controls.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.AnimationManager.AnimationSelectorProperty">
            <summary>
            Represents the AnimationSelector attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.AnimationManager.IsAnimationEnabledProperty">
            <summary>
            Identifies the IsAnimationEnabled attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.AnimationManager.AnimationProperty">
            <summary>
            Identifies the Animation attached property.
            </summary>
            <remarks>
            	<para>
            		This property is used to bind the corresponding RadAnimation to a storyboard.
            	</para>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.GetAnimationSelector(System.Windows.DependencyObject)">
            <summary>
            Gets the AnimationSelector for the given DependencyObject, normally a control.
            </summary>
            <param name="obj">The target animated object, normally a control.</param>
            <returns>The animation selector for the object.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.SetAnimationSelector(System.Windows.DependencyObject,Telerik.Windows.Controls.Animation.AnimationSelectorBase)">
            <summary>
            Sets the Animation selector for the given DependencyObject, normally a Control.
            </summary>
            <param name="obj">The target animated object, normally a cotnrol.</param>
            <param name="value">The AnimationSelector to assign.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.GetIsAnimationEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets a value idicating whether animation is enabled for the given Control.
            </summary>
            <param name="obj">The dependency object for which to check the value, normally a control.</param>
            <returns>True if animation is enabled, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.SetIsAnimationEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a value idicating whether animation is enabled for the given Control.
            </summary>
            <param name="obj">The dependency object for which to check the value, normally a control.</param>
            <param name="value">True if animation should be enabled, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.Stop(System.Windows.FrameworkElement,System.String)">
            <summary>
            Stops an animation if it is currently active or filling.
            </summary>
            <param name="target">The control to stop the animation for.</param>
            <param name="animationName">The name of the animation to stop.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.Stop(System.Windows.FrameworkElement,System.String,System.Boolean)">
            <summary>
            Stops an animation if it is currently active or filling.
            </summary>
            <param name="target">The control to stop the animation for.</param>
            <param name="animationName">The name of the animation to stop.</param>
            <param name="animateSelf">Specify if animation is applied on the target. If false, animation is applied on a child of target.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.StopIfRunning(System.Windows.FrameworkElement,System.String,System.Boolean)">
            <summary>
            Stops an animation if it is currently active or filling.
            </summary>
            <param name="target">The control to stop the animation for.</param>
            <param name="animationName">The name of the animation to stop.</param>
            <param name="animateSelf">Specify if animation is applied on the target. If false, animation is applied on a child of target.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.StopIfRunning(System.Windows.FrameworkElement,System.String)">
            <summary>
            Stops an animation if it is currently active or filling.
            </summary>
            <param name="target">The control to stop the animation for.</param>
            <param name="animationName">The name of the animation to stop.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.Play(System.Windows.FrameworkElement,System.String)">
            <summary>
            Plays an animation for the given control and invokes the callback on completion.
            </summary>
            <param name="target">The control for which to play the animation.</param>
            <param name="animationName">The name of the animation.</param>
            <returns>True if an aimation actually played, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.Play(System.Windows.FrameworkElement,System.String,System.Boolean)">
            <summary>
            Plays an animation for the given control and invokes the callback on completion.
            </summary>
            <param name="target">The control for which to play the animation.</param>
            <param name="animationName">The name of the animation.</param>
            <returns>True if an aimation actually played, false otherwise.</returns>
            <param name="animateSelf">Specify if animation is applied on the target. If false, animation is applied on a child of target.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.Play(System.Windows.FrameworkElement,System.String,System.Action,System.Object[])">
            <summary>
            Plays an animation for the given control and invokes the callback on completion.
            </summary>
            <param name="target">The control for which to play the animation.</param>
            <param name="animationName">The name of the animation.</param>
            <param name="completeCallback">The callback to be called. The callback is always called.</param>
            <param name="args">Optional oarameters for the animation, can be provided by the control.</param>
            <returns>True if an aimation actually played, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.Play(System.Windows.FrameworkElement,System.String,System.Action,System.Boolean,System.Object[])">
            <summary>
            Plays an animation for the given control and invokes the callback on completion.
            </summary>
            <param name="target">The control for which to play the animation.</param>
            <param name="animationName">The name of the animation.</param>
            <param name="completeCallback">The callback to be called. The callback is always called.</param>
            <param name="args">Optional oarameters for the animation, can be provided by the control.</param>
            <param name="animateSelf">Specify if animation is applied on the target. If false, animation is applied on a child of target.</param>
            <returns>True if an aimation actually played, false otherwise.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationManager.IsGlobalAnimationEnabled">
            <summary>
            Gets or sets a value idicating whether the Animation for the whole application will be enabled. 
            This value overrides all other properties.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationManager.AnimationSpeedRatio">
            <summary>
            Gets or sets the global animation speed ration that will be used if no local speed ratio is set.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationSelectorBase">
            <summary>
            Base class for selecting DynamicAnimations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationSelectorBase.SelectAnimation(System.Windows.FrameworkElement,System.String)">
            <summary>
            	<para>
            		When overriden in derived classes, it selects an animation for the specific
            		control and reason.
            	</para>
            </summary>
            <param name="control">The control the animation is needed for.</param>
            <param name="name">The reason for the animation. Often it is a change of state, result of a user action.</param>
            <returns>The RadAnimation object.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationSelector">
            <summary>
            Animation Selector, used for easier definition of animations in xaml.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationSelector.#ctor">
            <summary>
            Initializes a new instance of the AnimationSelector class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationSelector.SelectAnimation(System.Windows.FrameworkElement,System.String)">
            <summary>
            Selects an animation based on its AnimationName.
            </summary>
            <remarks>
            	<para>
            		The AnimationSelector will return the animation with matching name from
            		its <strong>Animations</strong> list.
            	</para>
            </remarks>
            <param name="control">The control the animation is needed for.</param>
            <param name="name">The name of the animation. Often it is a change of state, result of a user action.</param>
            <returns>The RadAnimation object.</returns>
            <seealso cref="P:Telerik.Windows.Controls.Animation.AnimationSelector.Animations"/>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationSelector.Animations">
            <summary>
            Gets the list of animations in that this selector will choose from.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationDirection">
            <summary>
            Specifies the direction of the animation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.AnimationDirection.In">
            <summary>
            The animation animates an element that appears.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.AnimationDirection.Out">
            <summary>
            The animation animates an element that disappears.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.SlideMode">
            <summary>
            Represents sliding mode for animation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.SlideMode.Top">
            <summary>
            The animated element slides from top to bottom.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.SlideMode.Bottom">
            <summary>
            The animated element slides from bottm to top.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.VistaTheme">
            <summary>
            VistaTheme class represents the key to the Vista theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.VistaTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.VistaTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.BooleanToVisibilityConverter">
            <summary>
            Represents the converter that converts Boolean values to and from Visibility enumeration values.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.BindingExpressionHelper">
            <summary>
            Provides methods that allow getting property values without reflection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.BindingExpressionHelper.GetValue(System.Object,System.String)">
            <summary>
            Gets the value of the property specified by the provided propertyPath.
            </summary>
            <param name="item">The instance which property value will be returned.</param>
            <param name="propertyPath">The path of the property which value will be returned.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.BindingExpressionHelper.CreateGetValueFunc(System.Type,System.String)">
            <summary>
            Returns a Func that will return the value of the property, specified by the provided propertyPath.
            </summary>
            <param name="itemType">The type of the instance which property will be returned.</param>
            <param name="propertyPath">The path of the property which value will be returned.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.BindingExpressionHelper.GetValue(System.Object,System.Windows.Data.Binding)">
            <summary>
            Gets the value of the specified item using the provided Binding.
            </summary>
            <param name="item">The item.</param>
            <param name="binding">The binding.</param>
            <returns>The value of the item</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ContainerBinding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ContainerBinding.ContainerBindingsProperty">
            <summary>
            Identifies the ContainerBindings dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ContainerBinding.GetContainerBindings(System.Windows.DependencyObject)">
            <summary>
            Gets the container bindings from the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ContainerBinding.SetContainerBindings(System.Windows.DependencyObject,Telerik.Windows.Controls.ContainerBindingCollection)">
            <summary>
            Sets the container bindings on the specified element.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The container bindings to be set.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ContainerBinding.PropertyName">
            <summary>
            Gets or sets the name of the property of the item container, that will have the Binding applied to.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ContainerBinding.Binding">
            <summary>
            Gets or sets the binding that will be applied on the container property with name PropertyName.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.ContainerBindingCollection">
            <summary>
            Represents an observable collection of ContainerBinding objects.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ILocalizable">
            <summary>
            All elements with sophisticated localization machanizm have to implement this interface.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ILocalizable.SetString(System.String)">
            <summary>
            A method to supply element with the localized data.
            </summary>
            <param name="localizedValue"></param>
        </member>
        <member name="T:Telerik.Windows.Controls.DeferredAction`3">
            <summary>
            Request for an action that takes two parameters.
            </summary>
            <typeparam name="T1">The first parameter's type.</typeparam>
            <typeparam name="T2">The second parameter's type.</typeparam>
            <typeparam name="T3">The third parameter's type.</typeparam>
        </member>
        <member name="T:Telerik.Windows.Controls.DeferredActionBase">
            <summary>
            Base class for delayed action calls.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredActionBase.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`3.#ctor(System.Action{`0,`1,`2},`0,`1,`2)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DeferredAction"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="parameter1">The first parameter.</param>
            <param name="parameter2">The second parameter.</param>
            <param name="parameter3">The third parameter.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`3.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DeferredAction`2">
            <summary>
            Request for an action that takes two parameters.
            </summary>
            <typeparam name="T1">The first parameter.</typeparam>
            <typeparam name="T2">The second parameter.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`2.#ctor(System.Action{`0,`1},`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DeferredAction"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="parameter1">The first parameter.</param>
            <param name="parameter2">The second parameter.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`2.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DeferredAction`1">
            <summary>
            Request for an action that takes one parameter.
            </summary>
            <typeparam name="T">The first parameter.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`1.#ctor(System.Action{`0},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DeferredAction"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="parameter1">The first parameter.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`1.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HACKS.AttachPopupToVisualTree(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Attaches the popup to visual tree.
            </summary>
            <param name="popup">The popup.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HACKS.RemovePopupFromVisualTree(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Removes the popup from visual tree.
            </summary>
            <param name="popup">The popup.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HACKS.RemoveParent(System.Windows.FrameworkElement)">
            <summary>
            Removes a framework element from the VisualTree.
            </summary>
            <param name="child">The element to remove.</param>
            <returns>true if successful; false if not.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Automation.Peers.ListBoxItemAutomationPeer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Object,Telerik.Windows.Controls.Automation.Peers.SelectorAutomationPeer)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Automation.Peers.ListBoxItemAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="selectorAutomationPeer">The selector automation peer.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.ListBoxItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>
            The object that implements the pattern interface, or null if the specified pattern interface is not implemented.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.ListBoxItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
            <summary>
            Scrolls the content area of a container object in order to display the control within the visible region (viewport) of the container.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.ListBoxItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.ListBoxItemAutomationPeer.GetClassNameCore">
            <summary>
            Returns the class name of the item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.LocalizationManager">
            <summary>
            A localization manager class.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LocalizationManager.ResourceKeyProperty">
            <summary>
            Identifies the ResourceKey attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LocalizationManager.GetString(System.String)">
            <summary>
            Returns a string related to the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LocalizationManager.GetResourceKey(System.Windows.DependencyObject)">
            <summary>
            Returns the value of the ResourceKey property related to the specified object.
            </summary>
            <param name="element">The item to check.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LocalizationManager.SetResourceKey(System.Windows.DependencyObject,System.String)">
            <summary>
            Set the value of the ResourceKey property related to the specified object.
            </summary>
            <param name="element">The item to be initialized.</param>
            <param name="value">The supplyed value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LocalizationManager.GetStringOverride(System.String)">
            <summary>
            Returns a string related to the specified key and culture.
            </summary>
            <param name="key">The key.</param>
            <returns>A value relative to the specified key.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.Manager">
            <summary>
            Holder of the only posibble Localization Manager.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.DefaultCulture">
            <summary>
            Default culture to follow if the specific one is null.
            This is an easy way to override the culture without instantiating a new manager.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.DefaultResourceManager">
            <summary>
            Default resource manager to follow if the specific one is null.
            This is an easy way to override the resource manager without instantiating a new manager.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.ResourceManager">
            <summary>
            Gets or sets specific resource manager.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.Culture">
            <summary>
            A specific culture to follow.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ResourceParser">
            <summary>
            Parse streams containing theme resources.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ResourceParser.OldXamlNamespace">
            <summary>
            The default old XAML namespace.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ResourceParser.NewXamlNamespace">
            <summary>
            The default new XAML namespace.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ResourceParser.StyleXaml">
            <summary>
            The XAML markup for an empty Style declaration.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ResourceParser.StyleXamlWithPrefix">
            <summary>
            The XAML markup for an empty Style declaration with a TargetType
            using an XML prefix.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceParser.Parse(System.IO.Stream,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves a resource dictionary from an input stream.
            </summary>
            <param name="stream">
            A stream containing the XAML for a  resource dictionary.
            </param>
            <param name="checkTypes">
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
            <param name="keys">Collection that will be populated with all key attributes from the parsed XAML.</param>
            <returns>A resource dictionary.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceParser.IsXamlElement``1(System.String,System.String)">
            <summary>
            Determines whether an XML element is a type in the core Silverlight
            namespace.
            </summary>
            <typeparam name="T">The type to check for.</typeparam>
            <param name="name">The name of the element.</param>
            <param name="ns">The namespace of the element.</param>
            <returns>
            A value indicating whether an the element is the Silverlight type.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceParser.ParseResources(System.Xml.XmlReader,System.Xml.XmlWriter,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Transform a ResourceDictionary defined in the reader into a
            ContentControl in the writer and nest all of its resources in
            ContentControl.Resources.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <param name="writer">Writer with the transformed resources.</param>
            <param name="checkTypes">
            <param name="keys">Collection that will be populated with all key attributes from the parsed XAML.</param>
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceParser.ParseElement(System.Xml.XmlReader,System.Xml.XmlWriter,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Process an element's opening tag.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <param name="writer">Writer with the transformed resources.</param>
            <param name="checkTypes">
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
            <param name="keys">Collection that will be populated with all key attributes from the parsed XAML.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceParser.IsStyleOrControlTemplateTargetTypeLoaded(System.Xml.XmlReader)">
            <summary>
            Determine if the current element in the reader represents a Style or ControlTemplate
            whose TargetType has been loaded in the assembly.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <returns>
            A value indicating whether the element is not a (Style or ControlTemplate) or it is a
            (Style or ControlTemplate) with a TargetType loaded in this assembly.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Automation.Peers.SelectorAutomationPeer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.SelectorAutomationPeer.#ctor(Telerik.Windows.Controls.Selector)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Automation.Peers.SelectorAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.SelectorAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of child elements of the <see cref="T:System.Windows.Controls.ItemsControl"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"/>.
            </summary>
            <returns>The collection of child elements.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.SelectorAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.SelectorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets a control pattern for the <see cref="T:System.Windows.Controls.ItemsControl"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values that indicates the control pattern.</param>
            <returns>
            The object that implements the pattern interface, or null if the specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is selected.
            </summary>
            <returns>
            A generic list of UI automation providers.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            Gets a value that indicates whether the UI automation provider allows more than one child element to be selected concurrently.
            </summary>
            <value></value>
            <returns>true if multiple selection is allowed; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            Gets a value that indicates whether the UI automation provider requires at least one child element to be selected.
            </summary>
            <value></value>
            <returns>true if selection is required; otherwise, false.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.StyleManager">
            <summary>
            Provides functionality for changing control themes.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.StyleManager.BasedOnProperty">
            <summary>
            Identifies the BasedOn attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.StyleManager.ThemeProperty">
            <summary>
            Identifies the Theme attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StyleManager.GetTheme(System.Windows.DependencyObject)">
            <summary>
            Gets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to get the theme of.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.StyleManager.SetTheme(System.Windows.DependencyObject,Telerik.Windows.Controls.Theme)">
            <summary>
            Sets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to set the theme of.</param>
            <param name="value">The new theme to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.StyleManager.GetBasedOn(System.Windows.DependencyObject)">
            <summary>
            Gets the theme where to find the target style base.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StyleManager.SetBasedOn(System.Windows.DependencyObject,Telerik.Windows.Controls.Theme)">
            <summary>
            Sets the theme where to find the target style base.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StyleManager.SetThemeFromParent(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Sets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to set the theme of.</param>
            <param name="parent">Parent that supplies the theme.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.StyleManager.ApplicationTheme">
            <summary>
            Specifies a Theme that will be automatically applied on all controls in the application. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Common.IMouseEventArgs">
            <summary>
            Abstracts the mouse event args to allow easier testing of mouse-related events.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Common.IMouseButtonEventArgs">
            <summary>
            Abstracts the mouse event args to allow easier testing of mouse-related events.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.FilteringMode">
            <summary>
            Specifies the FilteringMode of RadComboBox.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.FilteringMode.None">
            <summary>
            Filtering disabled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.FilteringMode.Contains">
            <summary>
            Matches items, containing the search text.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.FilteringMode.StartsWith">
            <summary>
            Matches items, which text starts with the search text.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.GeneratorStatus">
            <summary>
            Used by <see cref="T:Telerik.Windows.Controls.ItemContainerGenerator"/> to indicate the status of its item generation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.GeneratorStatus.NotStarted">
            <summary>
            The generator has not tried to generate content.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.GeneratorStatus.GeneratingContainers">
            <summary>
            The generator is generating containers.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.GeneratorStatus.ContainersGenerated">
            <summary>
            The generator has finished generating containers. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.GeneratorStatus.Error">
            <summary>
            The generator has finished generating containers, but encountered one or more errors.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.FrameworkElementExtensions.GetFirstDescendantOfType``1(System.Windows.DependencyObject)">
            <summary>
                Does a deep search of the element tree, trying to find a descendant of the given type 
                (including the element itself).
            </summary>
            <returns>True if the target is one of the elements.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ListBoxItem">
            <summary>
            Represents a selectable item in a ListBox.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ListBoxItem.SelectedEvent">
            <summary>
            Identifies the Selected routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ListBoxItem.UnselectedEvent">
            <summary>
            Identifies the Unselected routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ListBoxItem.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItem.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItem.OnSelected(Telerik.Windows.RadRoutedEventArgs)">
            <summary>
            Called when the ListBoxItem is selected in a ListBox.
            </summary>
            <param name="e">The event data.</param>
            <remarks>
            This method is called when the IsSelected property changes to true.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItem.OnUnselected(Telerik.Windows.RadRoutedEventArgs)">
            <summary>
            Called when the ListBoxItem is unselected in a ListBox.
            </summary>
            <param name="e">The event data.</param>
            <remarks>
            This method is called when the IsSelected property changes to false.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the user presses the left mouse button over the ListBoxItem. 
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.ListBoxItem.Selected">
            <summary>
            Occurs when a ListBoxItem is selected.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.ListBoxItem.Unselected">
            <summary>
            Occurs when a ListBoxItem is unselected.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBoxItem.IsSelected">
            <summary>
            Gets or sets a value that indicates whether a ListBoxItem is selected. This is a dependency property. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.NullableEnumConverter`1">
            <summary>
            Type converter for nullable enum types.
            </summary>
            <typeparam name="T">The type of the enum the type converter is intended for.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.NullableEnumConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance can convert from the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="sourceType">Type of the source.</param>
            <returns>
            	<c>true</c> if this instance can convert from the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.NullableEnumConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionChangedEventArgs">
            <summary>
            Provides data for the Telerik.Windows.Controls.Selector.SelectionChanged event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChangedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Collections.IList,System.Collections.IList)">
            <summary>
            Initializes a new instance of the SelectionChangedEventArgs class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="removedItems">The items that were unselected.</param>
            <param name="addedItems">The items that were selected.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangedEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items that were selected.
            </summary>
            <value>
            The items that were selected in this event.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangedEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items that were unselected. 
            </summary>
            <value>
            The items that were unselected in this event.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.ItemsControlExtensions">
            <summary>
            Contains helper extension methods for the ItemsControl class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControlExtensions.ForEachContainerItem``1(Telerik.Windows.Controls.ItemsControl,System.Action{``0})">
            <summary>
                Executes the given action on each container item of the control.
            </summary>
            <typeparam name="T">The type of container expected, depends on the ItemControl calss.</typeparam>
            <param name="itemsControl">The ItemsControl instance.</param>
            <param name="work">The action to execute on the items.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControlExtensions.GetContainers``1(Telerik.Windows.Controls.ItemsControl)">
            <summary>
            Enumerates the containers of a given ItemsControl.
            </summary>
            <typeparam name="T">The expected type of the containers.</typeparam>
            <param name="target">The target ItemsControl.</param>
            <returns>An enumerator for the containers of the items control.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControlExtensions.GetItemsPanel(System.Windows.DependencyObject)">
            <summary>
            Gets the items panel from the visual tree of the control.
            </summary>
            <param name="itemsControl">The items control, which panel will be returned.</param>
            <returns>The <see cref="T:System.Windows.Controls.Panel"/> which will arrange the items.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ItemContainerGenerator">
            <summary>
               Wraps the ItemsContainerGenerator that comes with the
               System.Windows.ItemsControl and adds a Status property and
               StatusChanged event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.#ctor(System.Windows.Controls.ItemContainerGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ItemContainerGenerator"/> class.
            </summary>
            <param name="originalGenerator">The original generator.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
            <summary>
                Returns the container for the given item index.
            </summary>
            <param name="index">The index of the item.</param>
            <returns>The container for the item at the given index.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
            <summary>
                Returns the container for the given item of the ItemsControl.
            </summary>
            <param name="item">The item for which ti finds the container.</param>
            <returns>Returns null if not found.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
            <summary>
                Returns the item for the given container.
            </summary>
            <param name="container">The container for which to get an item.</param>
            <returns>Returns the item for the container.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
            <summary>
                Returns the index of the given container.
            </summary>
            <param name="container">The container for which to get the index.</param>
            <returns>The index of the container.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
            <summary>
            Returns the Generator position for the given index.
            </summary>
            <param name="itemIndex">The index to return Generator position for.</param>
            <returns>An System.Int32 that is the index which maps to the specified System.Windows.Controls.Primitives.GeneratorPosition.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
            <summary>
            Returns the index that maps to the specified System.Windows.Controls.Primitives.GeneratorPosition.
            </summary>
            <param name="position">
            The index of desired item.The System.Windows.Controls.Primitives.GeneratorPosition
            for the desired index.</param>
            <returns>An System.Int32 that is the index which maps to the specified System.Windows.Controls.Primitives.GeneratorPosition.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext(System.Boolean@)">
            <summary>
            Returns the container element used to display the next item, and whether the container element has been newly generated (realized).
            </summary>
            <param name="isNewlyRealized">Is true if the returned <see cref="T:System.Windows.DependencyObject"/> is newly generated (realized); otherwise, false.</param>
            <returns>
            A <see cref="T:System.Windows.DependencyObject"/> that is the container element which is used to display the next item.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
            <summary>
            Returns the <see cref="T:System.Windows.Controls.ItemContainerGenerator"/> appropriate for use by the specified panel.
            </summary>
            <param name="panel">The panel for which to return an appropriate <see cref="T:System.Windows.Controls.ItemContainerGenerator"/>.</param>
            <returns>
            An <see cref="T:System.Windows.Controls.ItemContainerGenerator"/> appropriate for use by the specified panel.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#PrepareItemContainer(System.Windows.DependencyObject)">
            <summary>
            Prepares the specified element as the container for the corresponding item.
            </summary>
            <param name="container">The container to prepare. Normally, <paramref name="container"/> is the result of the previous call to <see cref="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)"/>.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
            <summary>
            Removes one or more generated (realized) items.
            </summary>
            <param name="position">The <see cref="T:System.Int32"/> index of the element to remove. <paramref name="position"/> must refer to a previously generated (realized) item, which means its offset must be zero.</param>
            <param name="count">The <see cref="T:System.Int32"/> number of elements to remove, starting at <paramref name="position"/>.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#RemoveAll">
            <summary>
            Removes all generated (realized) items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
            <summary>
            Prepares the generator to generate items, starting at the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/>, and in the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection"/>, and controlling whether or not to start at a generated (realized) item.
            </summary>
            <param name="position">A <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/>, that specifies the position of the item to start generating items at.</param>
            <param name="direction">Specifies the position of the item to start generating items at.</param>
            <param name="allowStartAtRealizedItem">A <see cref="T:System.Boolean"/> that specifies whether to start at a generated (realized) item.</param>
            <returns>
            An <see cref="T:System.IDisposable"/> object that tracks the lifetime of the generation process.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IRecyclingItemContainerGenerator#Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
            <summary>
            Disassociates item containers from their data items and saves the containers so they can be reused later for other data items.
            </summary>
            <param name="position">The zero-based index of the first element to reuse. <paramref name="position"/> must refer to a previously generated (realized) item.</param>
            <param name="count">The number of elements to reuse, starting at <paramref name="position"/>.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.ItemContainerGenerator.ItemsChanged">
            <summary>
            Invoked when the items of the ItemsControl change, called before
            the OnItemsChanged override.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.ItemContainerGenerator.StatusChanged">
            <summary>
            The StatusChanged event is raised by a <see cref="T:Telerik.Windows.Controls.ItemContainerGenerator"/> to inform controls that its status has changed. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemContainerGenerator.Status">
            <summary>
            The generation status of the ItemContainerGenerator.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.LayoutTransformControl">
            <summary>
            Represents a control that applies a layout transformation to its Content.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl.RootVisualTemplatePartName">
            <summary>
            Name of the TransformRoot template part.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl.ContentPresenterTemplatePartName">
            <summary>
            Name of the Presenter template part.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl.AcceptableDelta">
            <summary>
            Acceptable difference between two doubles.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl.RoundPrecision">
            <summary>
            Number of decimals to round the Matrix to.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl.LayoutTransformProperty">
            <summary>
            Identifies the LayoutTransform DependencyProperty.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl._transformationPanel">
            <summary>
            Root element for performing transformations.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl._contentPresenter">
            <summary>
            ContentPresenter element for displaying the content.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl._matrixTransform">
            <summary>
            RenderTransform/MatrixTransform applied to _transformationPanel.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl._transformation">
            <summary>
            Transformation matrix corresponding to _matrixTransform.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl._childActualSize">
            <summary>
            Actual DesiredSize of Child element (the value it returned from its MeasureOverride method).
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.#ctor">
            <summary>
            Initializes a new instance of the LayoutTransformer class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the LayoutTransformer control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.LayoutTransformChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Transform DependencyProperty.
            </summary>
            <param name="o">Source of the change.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.ApplyLayoutTransform">
            <summary>
            Applies the layout transform on the LayoutTransformer control content.
            </summary>
            <remarks>
            Only used in advanced scenarios (like animating the LayoutTransform). 
            Should be used to notify the LayoutTransformer control that some aspect 
            of its Transform property has changed. 
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.ProcessTransform(System.Windows.Media.Transform)">
            <summary>
            Processes the Transform to determine the corresponding Matrix.
            </summary>
            <param name="transform">Transform to process.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.GetTransformMatrix(System.Windows.Media.Transform)">
            <summary>
            Walks the Transform(Group) and returns the corresponding Matrix.
            </summary>
            <param name="transform">Transform(Group) to walk.</param>
            <returns>Computed Matrix.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Measure" pass of layout.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of layout.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.ComputeLargestTransformedSize(System.Windows.Size)">
            <summary>
            Compute the largest usable size (greatest area) after applying the transformation to the specified bounds.
            </summary>
            <param name="arrangeBounds">Arrange bounds.</param>
            <returns>Largest Size possible.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.IsSizeSmaller(System.Windows.Size,System.Windows.Size)">
            <summary>
            Returns true if Size a is smaller than Size b in either dimension.
            </summary>
            <param name="a">Second Size.</param>
            <param name="b">First Size.</param>
            <returns>True if Size a is smaller than Size b in either dimension.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.RoundMatrix(System.Windows.Media.Matrix,System.Int32)">
            <summary>
            Rounds the non-offset elements of a Matrix to avoid issues due to floating point imprecision.
            </summary>
            <param name="matrix">Matrix to round.</param>
            <param name="decimals">Number of decimal places to round to.</param>
            <returns>Rounded Matrix.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.RectTransform(System.Windows.Rect,System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Rect.Transform on Silverlight.
            </summary>
            <param name="rect">Rect to transform.</param>
            <param name="matrix">Matrix to transform with.</param>
            <returns>Bounding box of transformed Rect.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.MatrixMultiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.Multiply on Silverlight.
            </summary>
            <param name="matrix1">First matrix.</param>
            <param name="matrix2">Second matrix.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.MatrixHasInverse(System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.HasInverse on Silverlight.
            </summary>
            <param name="matrix">Matrix to check for inverse.</param>
            <returns>True if the Matrix has an inverse.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.LayoutTransformControl.LayoutTransform">
            <summary>
            Gets or sets the layout transform to apply on the LayoutTransformer 
            control content.
            </summary>
            <remarks>
            Corresponds to UIElement.LayoutTransform.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.LayoutTransformControl.Child">
            <summary>
            Gets the child element being transformed.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadControl">
            <summary>
            Static container for the Theme attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadControl.ThemeProperty">
            <summary>
            Identifies the Theme attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadControl.GetTheme(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the Theme attached property from a given DependencyObject.
            </summary>
            <param name="obj">The DependencyObject from which to read the property value.</param>
            <returns>The value of the Theme attached property.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadControl.SetTheme(System.Windows.DependencyObject,Telerik.Windows.Controls.Theme)">
            <summary>
            Sets the value of the Theme attached property to a given DependencyObject.
            </summary>
            <param name="obj">The DependencyObject on which to set the property value.</param>
            <param name="value">The property value to set.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadControl.IsInDesignMode">
            <summary>
            Gets whether a control is running in the context of a designer.
            </summary>
            <value>
            	<c>True</c> if this instance is in design mode; otherwise, <c>False</c>.
            </value>
        </member>
        <member name="F:Telerik.Windows.Controls.ResourceStorage.generics">
            <summary>
            Used for caching default generic.xaml for all assemblies.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.End">
            <summary>
            Commit selection changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.Begin">
            <summary>
            Begin tracking selection changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.Cancel">
            <summary>
            Cancels the currently active SelectionChanger.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.Select(`0)">
            <summary>
            Queue something to be added to the selection.
            Does nothing if the item is already selected.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.Unselect(`0)">
            <summary>
            Queue something to be removed from the selection.
            Does nothing if the item is not already selected.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.SelectJustThisItem(`0)">
            <summary>
            Select just this item; all other items in Selection will be removed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.SynchronizeInternalSelection">
            <summary>
            Update the InternalSelection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChanger`1.CoerceItemCallback">
            <summary>
            Coerce Item before it is selected.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChanger`1.IsActive">
            <summary>
            True if there is a SelectionChange currently in progress.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DataTemplateSelector">
            <summary>
            Provides a way to choose a DataTemplate based on the data object and the data-bound element.
            </summary>
            <remarks>
            <para>
            Typically, you create a DataTemplateSelector when you have more than one DataTemplate for the same type of objects and you want to supply your own logic to choose a DataTemplate to apply based on the properties of each data object.
            </para>
            <para>
            To create a template selector, create a class that inherits from DataTemplateSelector and override the SelectTemplate method. Once your class is defined you can assign an instance of the class to the template selector property of your element.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            When overridden in a derived class, returns a DataTemplate based on custom logic.
            </summary>
            <param name="item">The data object for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.HeaderedItemsControl">
            <summary>
            Represents a control that contains multiple items and has a header.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.HasHeaderProperty">
            <summary>
            Identifies the HasHeader dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.HeaderProperty">
            <summary>
            Identifies the Header dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.FocusVisualStyleProperty">
            <summary>
            Identifies the FocusVisualStyle property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty">
            <summary>
            Identifies the HeaderTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty">
            <summary>
            Identifies the HeaderTemplateSelector dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.HeaderedItemsControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedItemsControl.OnApplyTemplate">
            <summary>
            Provides a design-time value for the header if it is not set.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the Header property of a HeaderedItemsControl changes.
            </summary>
            <param name="oldHeader">The old value of the Header property.</param>
            <param name="newHeader">The new value of the Header property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when the HeaderTemplate property of a HeaderedItemsControl changes.
            </summary>
            <param name="oldHeaderTemplate">The old value of the HeaderTemplate property.</param>
            <param name="newHeaderTemplate">The new value of the HeaderTemplate property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateSelectorChanged(Telerik.Windows.Controls.DataTemplateSelector,Telerik.Windows.Controls.DataTemplateSelector)">
            <summary>
            Called when the HeaderTemplateSelector property of a HeaderedItemsControl changes.
            </summary>
            <param name="oldHeaderTemplateSelector">The old value of the HeaderTemplateSelector property.</param>
            <param name="newHeaderTemplateSelector">The new value of the HeaderTemplateSelector property.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedItemsControl.HasHeader">
            <summary>
            Gets a value that indicates whether this HeaderedItemsControl has a header. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedItemsControl.Header">
            <summary>
            Gets or sets the item that labels the control. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedItemsControl.HeaderTemplate">
            <summary>
            Gets or sets the template used to display the contents of the control's header. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedItemsControl.FocusVisualStyle">
            <summary>
            Gets or sets the style used by the focus visual of the cotnrol. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector">
            <summary>
            Gets or sets the object that provides custom selection logic for a template used to display the header of each item. This is a dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.BoolField.HeaderIsItem">
            <summary>
            The header is the item.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.BoolField.HeaderIsNotLogical">
            <summary>
            The header is not a logical item.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.BoolField.ItemTemplateSelectorSet">
            <summary>
            The item template selector was set.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.BoolField.ItemTemplateSet">
            <summary>
            The item template property has been set.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.HierarchicalDataTemplate">
            <summary>
            Represents a DataTemplate that supports HeaderedItemsControl, such as RadTreeViewItem or RadMenuItem.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HierarchicalDataTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.HierarchicalDataTemplate"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HierarchicalDataTemplate.ItemsSource">
            <summary>
            Gets or sets the binding for this data template, which indicates where to 
            find the collection that represents the next level in the data hierarchy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HierarchicalDataTemplate.ItemTemplate">
            <summary>
            Gets or sets the DataTemplate to apply to the ItemTemplate property on a 
            generated HeaderedItemsControl (such as a RadMenuItem or a RadTreeViewItem), to 
            indicate how to display items from the next level in the data hierarchy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HierarchicalDataTemplate.ItemTemplateSelector">
            <summary>
            Gets or sets the DataTemplateSelector to apply to the ItemTemplateSelector 
            property on a generated HeaderedItemsControl (such as a RadMenuItem or a 
            RadTreeViewItem), to indicate how to select a template to display items from 
            the next level in the data hierarchy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HierarchicalDataTemplate.ItemContainerStyle">
            <summary>
            Gets or sets the style for the containers of the items where this
            HierarchicalDataTemplate is applied. This property will only be
            applied if there is no ItemContainerStyle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HierarchicalDataTemplate.ItemContainerStyleSelector">
            <summary>
            Gets or sets a ItemContainerStyleSelector for the template.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionMode">
            <summary>
            Defines the selection behavior for various controls.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionMode.Single">
            <summary>
            The user can select only one item at a time. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionMode.Multiple">
            <summary>
            The user can select multiple items without holding down a modifier key.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionMode.Extended">
            <summary>
            The user can select multiple consecutive items while holding down the SHIFT key.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionChangedEventHandler">
            <summary>
            Represents the method that will handle the SelectionChanged routed event.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SizeExtensions">
            <summary>
            Helper TabStrip extensions.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SizeExtensions.Round(System.Windows.Size)">
            <summary>
            Returns the rounded equivalent of the given size.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SizeExtensions.Swap(System.Windows.Size)">
            <summary>
            Returns a new size with its width and height swapped.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.StyleSelector">
            <summary>
            Chooses the style for each item of the ItemsControl.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
            <summary>
                When overriden this method is used for determining the Style of items.
            </summary>
            <param name="item">The item for whoose container is wanted.</param>
            <param name="container">The container for which a Style is selected.</param>
            <returns>The Style for the given container.</returns>
        </member>
        <member name="T:Telerik.Windows.CoerceValueCallback">
            <summary>
            Gets or sets a reference to a CoerceValueCallback implementation specified in this metadata.
            </summary>
            <param name="element">
            The object that the property exists on. When the callback is invoked, the property system will pass this value.
            </param>
            <param name="baseValue">The new value of the property, prior to any coercion attempt.</param>
            <returns>The coerced value (with appropriate type).</returns>
        </member>
        <member name="T:Telerik.Windows.DependencyObjectExtensions">
            <exclude />
            <excludeToc />
            <summary>
            Static class that contains extension methods for the Dependency object.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.AddHandler(System.Windows.DependencyObject,Telerik.Windows.RoutedEvent,System.Delegate,System.Boolean)">
            <summary>
            Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">A reference to the handler implementation.</param>
            <param name="routedEvent">An identifier for the routed event to be handled.</param>
            <param name="handlesToo">True to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</param>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.AddHandler(System.Windows.DependencyObject,Telerik.Windows.RoutedEvent,System.Delegate)">
            <summary>
            Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.
            </summary>
            <param name="element">The element.</param>
            <param name="routedEvent">An identifier for the routed event to be handled.</param>
            <param name="handler">A reference to the handler implementation.</param>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.RemoveHandler(System.Windows.DependencyObject,Telerik.Windows.RoutedEvent,System.Delegate)">
            <summary>
            Removes the specified routed event handler from this element.
            </summary>
            <param name="element">The element.</param>
            <param name="routedEvent">The identifier of the routed event for which the handler is attached.</param>
            <param name="handler">The specific handler implementation to remove from the event handler collection on this element.</param>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.RaiseEvent(System.Windows.DependencyObject,Telerik.Windows.RadRoutedEventArgs)">
            <summary>
            Raises a specific routed event. The RoutedEvent to be raised is identified within 
            the RoutedEventArgs instance that is provided (as the RoutedEvent property of that event data).
            </summary>
            <param name="element">The element.</param>
            <param name="e">
            The <see cref="T:Telerik.Windows.RadRoutedEventArgs"/> instance containing the event data
            and also identifies the event to raise.
            </param>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.SetValue(System.Windows.DependencyObject,Telerik.Windows.DependencyPropertyKey,System.Object)">
            <summary>
            Set value to the read only property.
            </summary>
            <param name="element">The element to set the value to.</param>
            <param name="key">The read-only property key.</param>
            <param name="value">The value to set to the property.</param>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.ClearValue(System.Windows.DependencyObject,Telerik.Windows.DependencyPropertyKey)">
            <summary>
            Clears the value to the read only property.
            </summary>
            <param name="element">The element to clear the value to.</param>
            <param name="key">The read-only property key.</param>
        </member>
        <member name="T:Telerik.Windows.DependencyPropertyExtensions">
            <summary>
            Contains utility methods for registering dependency properties with extended metadata.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DependencyPropertyExtensions.Register(System.String,System.Type,System.Type,Telerik.Windows.PropertyMetadata,Telerik.Windows.ValidateValueCallback)">
            <summary>
            Registers a dependency property with the specified property name, property type, owner type, property metadata and validate value callback.
            </summary>
            <param name="name">
            The name of the dependency property to register.
            </param>
            <param name="propertyType">
            The type of the property.
            </param>
            <param name="ownerType">
            The owner type that is registering the dependency property.
            </param>
            <param name="typeMetadata">
            Property metadata for the dependency property.
            </param>
            <param name="validateValueCallback">
            Callback that validates the new value for the dependency property.
            </param>
            <returns>
            A dependency property identifier that should be used to set the value of a public static readonly field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="M:Telerik.Windows.DependencyPropertyExtensions.Register(System.String,System.Type,System.Type,Telerik.Windows.PropertyMetadata)">
            <summary>
            Registers a dependency property with the specified property name, property type, owner type, and property metadata.
            </summary>
            <param name="name">
            The name of the dependency property to register.
            </param>
            <param name="propertyType">
            The type of the property.
            </param>
            <param name="ownerType">
            The owner type that is registering the dependency property.
            </param>
            <param name="typeMetadata">
            Property metadata for the dependency property.
            </param>
            <returns>
            A dependency property identifier that should be used to set the value of a public static readonly field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="M:Telerik.Windows.DependencyPropertyExtensions.RegisterReadOnly(System.String,System.Type,System.Type,Telerik.Windows.PropertyMetadata)">
            <summary>
            Registers a read-only dependency property with the specified property name, property type, owner type, and property metadata.
            </summary>
            <param name="name">
            The name of the dependency property to register.
            </param>
            <param name="propertyType">
            The type of the property.
            </param>
            <param name="ownerType">
            The owner type that is registering the dependency property.
            </param>
            <param name="typeMetadata">
            Property metadata for the dependency property.
            </param>
            <returns>
            A dependency property identifier that should be used to set the value of a public static readonly field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="M:Telerik.Windows.DependencyPropertyExtensions.RegisterAttached(System.String,System.Type,System.Type,Telerik.Windows.PropertyMetadata)">
            <summary>
            Registers an attached property with the specified property name, property type, owner type, and property metadata.
            </summary>
            <param name="name">
            The name of the dependency property to register.
            </param>
            <param name="propertyType">
            The type of the property.
            </param>
            <param name="ownerType">
            The owner type that is registering the dependency property.
            </param>
            <param name="typeMetadata">
            Property metadata for the dependency property.
            </param>
            <returns>
            A dependency property identifier that should be used to set the value of a public static readonly field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="M:Telerik.Windows.DependencyPropertyExtensions.RegisterAttachedReadOnly(System.String,System.Type,System.Type,Telerik.Windows.PropertyMetadata)">
            <summary>
            Registers a read-only attached property with the specified property name, property type, owner type, and property metadata.
            </summary>
            <param name="name">
            The name of the dependency property to register.
            </param>
            <param name="propertyType">
            The type of the property.
            </param>
            <param name="ownerType">
            The owner type that is registering the dependency property.
            </param>
            <param name="typeMetadata">
            Property metadata for the dependency property.
            </param>
            <returns>
            A dependency property identifier that should be used to set the value of a public static readonly field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="T:Telerik.Windows.DependencyPropertyKey">
            <summary>
            Provides a dependency property identifier for limited write access to a read-only dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DependencyPropertyKey.DependencyProperty">
            <summary>
            Gets the dependency property identifier associated with this specialized
            read-only dependency property identifier.
            </summary>
        </member>
        <member name="T:Telerik.Windows.EventManager">
            <summary>
            Provides event-related utility methods that register routed events for class owners and add class handlers. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.EventManager.RegisterClassHandler(System.Type,Telerik.Windows.RoutedEvent,System.Delegate)">
            <summary>
            Registers a class handler for a particular routed event.
            </summary>
            <param name="classType"></param>
            <param name="routedEvent"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Telerik.Windows.EventManager.RegisterClassHandler(System.Type,Telerik.Windows.RoutedEvent,System.Delegate,System.Boolean)">
            <summary>
            Registers a class handler for a particular routed event, with the 
            option to handle events where event data is already marked handled.
            </summary>
            <param name="classType">The type of the class that is declaring class handling.</param>
            <param name="routedEvent">The routed event identifier of the event to handle.</param>
            <param name="handler">A reference to the class handler implementation.</param>
            <param name="handledEventsToo">
            True to invoke this class handler even if arguments of the routed event 
            have been marked as handled; false to retain the default behavior of not 
            invoking the handler on any marked-handled event.
            </param>
        </member>
        <member name="M:Telerik.Windows.EventManager.RegisterRoutedEvent(System.String,Telerik.Windows.RoutingStrategy,System.Type,System.Type)">
            <summary>
            Registers a new routed event with the Silverlight event system. 
            </summary>
            <param name="name">
            The name of the routed event. The name must be unique within the owner type 
            and cannot be null (Nothing in Visual Basic) or an empty string.
            </param>
            <param name="routingStrategy">
            The routing strategy of the event as a value of the enumeration.
            </param>
            <param name="handlerType">
            The type of the event handler. This must be a delegate type and cannot be 
            null (Nothing in Visual Basic).
            </param>
            <param name="ownerType">
            The owner class type of the routed event. This cannot be null (Nothing in Visual Basic).
            </param>
            <returns>
            The identifier for the newly registered routed event. This identifier object can 
            now be stored as a static field in a class and then used as a parameter for methods 
            that attach handlers to the event. The routed event identifier is also used 
            for other event system APIs.
            </returns>
        </member>
        <member name="T:Telerik.Windows.RadRoutedEventHandler">
            <summary>
            Represents the delegate for handlers that receive routed events.
            </summary>
        </member>
        <member name="T:Telerik.Windows.RoutedEvent">
            <summary>
            Represents and identifies a routed event and declares its characteristics.
            </summary>
        </member>
        <member name="F:Telerik.Windows.RoutedEvent.LogicalParentProperty">
            <summary>
            Identifies the LogicalParent attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.RoutedEvent.GetLogicalParent(System.Windows.DependencyObject)">
            <summary>
            Gets the logical parent of the specified element. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.RoutedEvent.SetLogicalParent(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Sets the logical parent of the specified element. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.RoutedEvent.AddOwner(System.Type)">
            <summary>
            Associates another owner class with this routed event, and enables routing 
            of the event and handling on this class.
            </summary>
            <param name="ownerType">The type of the class where the routed event is added.</param>
            <returns>
            The identifier field for the event. This return value should be used 
            to set a public static read-only field that will store the identifier 
            for the representation of the routed event on the owning class. This 
            field must be accessible because it will be required to attach any 
            instance handlers for the event when using the AddHandler utility method.
            </returns>
        </member>
        <member name="M:Telerik.Windows.RoutedEvent.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.RoutedEvent.HandlerType">
            <summary>
            Gets the handler type of the routed event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RoutedEvent.Name">
            <summary>
            Gets the identifying name of the routed event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RoutedEvent.OwnerType">
            <summary>
            Gets the registered owner type of the routed event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RoutedEvent.RoutingStrategy">
            <summary>
            Gets the routing strategy of the routed event. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.RoutingStrategy">
            <summary>
            Indicates the routing strategy of a routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.RoutingStrategy.Tunnel">
            <summary>
            The routed event uses a tunneling strategy, where the event instance 
            routes downwards through the tree, from root to source element. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.RoutingStrategy.Bubble">
            <summary>
            The routed event uses a bubbling strategy, where the event instance 
            routes upwards through the tree, from event source to root. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.RoutingStrategy.Direct">
            <summary>
            The routed event does not route through an element tree, but does support 
            other routed event capabilities such as class handling, EventTrigger or EventSetter. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.TextClipper">
            <summary>
            A Content Control that clips its text when needed.
            </summary>
            <remarks>
                <para>
                    The TextClipper control is not intended to be used on its own but as part of other controls.
                </para>
                <para>
                    If a non-text content is set, the control works as a standard ContentControl.
                </para>
            </remarks>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.isTextBlockOutdated">
            <summary>
            Indicates whether the reference to the TextBlock is outdated and needs to be refreshed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.isClippingActive">
            <summary>
            Indicates if any text has actually been abbreviates.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.realText">
            <summary>
            The unchanged text, same as the content property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.textBlock">
            <summary>
            The TextBlock whoose content is changed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.clipStart">
            <summary>
            The index of the first character that has been removed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.indexWidths">
            <summary>
            The width of the TextBlock with the given number of visible characters (0 -> TextLength - 1).
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.currentWidth">
            <summary>
            The current width of the textBlock, including trailing characters.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.justUpdated">
            <summary>
            Indicates whether the Textblock has just been updated, used to avoid layout cycles.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.realDesiredWidth">
            <summary>
            The desired width of the unconstrained, unabbreviated textblock.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.dotsWidth">
            <summary>
            The width of the trailing characters.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.fakeBuilder">
            <summary>
            The textBuilder for the fake (abbreviated) text.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.TextClipper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Primitives.TextClipper"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.TextClipper.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property changes.
            </summary>
            <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
            <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.TextClipper.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to 
            define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can 
            be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object 
            allotted sizes.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.TextClipper.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of Silverlight layout. Classes can override this method 
            to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself 
            and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.TextSearch">
            <summary>
            Enables a user to quickly access items in a set by typing prefixes of strings.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TextSearch.TextPathProperty">
            <summary>
            Identifies the TextPath attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TextSearch.TextProperty">
            <summary>
            Identifies the Text attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TextSearch.GetText(System.Windows.DependencyObject)">
            <summary>
            Returns the string to that identifies the specified item.
            </summary>
            <param name="element">The element from which the property value is read.</param>
            <returns>The string that identifies the specified item.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TextSearch.SetText(System.Windows.DependencyObject,System.String)">
            <summary>
            Writes the Text attached property to the specified element.
            </summary>
            <param name="element">The element to which the property value is written.</param>
            <param name="value">The string that identifies the item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)">
            <summary>
            Returns the name of the property that identifies an item in the specified element's collection.
            </summary>
            <param name="element">The element from which the property value is read.</param>
            <returns>The name of the property that identifies the item to the user.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)">
            <summary>
            Writes the TextPath attached property to the specified element.
            </summary>
            <param name="element">The element to which the property value is written.</param>
            <param name="value">The name of the property that identifies an item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.TextSearch.CreateFullMatchFunc(System.String,Telerik.Windows.Controls.TextSearchMode)">
            <summary>
            Creates a Func that compares the provided text with its parameter. The result depends on the TextSearchMode.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TextSearch.CreatePartialMatchFunc(System.String,Telerik.Windows.Controls.TextSearchMode)">
            <summary>
            Creates a Func that compares the provided text with its parameter. The result depends on the TextSearchMode.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TextSearch.FindMatchingItems(Telerik.Windows.Controls.ItemsControl,System.String,Telerik.Windows.Controls.TextSearchMode,System.Int32,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Finds the first matching item - if there is an item with text that is equal to the text parameter, returns its index, no 
            matter what the mode is. If there is no full match, returns -1. In both cases the matchIndexes output parameter contains
            the indexes of all matching items. The disabled item containers are excluded from the search results.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TextSearch.AutoCompleteTimeout">
            <summary>
            Gets or sets the timeout after that the autocomplete buffer is reset.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.UIElementExtensions">
            <summary>
            Contains helper extension methods for the UIElement class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.UIElementExtensions.ParentOfType``1(System.Windows.UIElement)">
            <summary>
            Gets the parent element from the visual tree by given type.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.UIElementExtensions.ChildrenOfType``1(System.Windows.UIElement)">
            <summary>
            Gets all child elements recursively from the visual tree by given type.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.UIElementExtensions.IsAncestorOf(System.Windows.UIElement,System.Windows.DependencyObject)">
            <summary>
             Determines whether the visual object is an ancestor of the descendant visual object.
            </summary>
            <returns>true if the visual object is an ancestor of descendant; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.VisualTreeHelperExtensions.GetParent``1(System.Windows.DependencyObject)">
            <summary>  
            This recurses the visual tree for a parent of a specific type.
            </summary>  
            <param name="child"></param>  
        </member>
        <member name="M:Telerik.Windows.Controls.VisualTreeHelperExtensions.GetAncestors``1(System.Windows.DependencyObject)">
            <summary>  
            This recurses the visual tree for ancestors of a specific type.
            </summary>  
            <param name="target">The element to get ancestor of.</param>
        </member>
        <member name="T:Telerik.Windows.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
            <remarks>
            	<para>
            		More info here:
            		http://blogs.msdn.com/delay/archive/2009/03/09/controls-are-like-diapers-you-don-t-want-a-leaky-one-implementing-the-weakevent-pattern-on-silverlight-with-the-weakeventlistener-class.aspx
            		
            		How to use:
            	</para>
            	<code lang='CS'>
            		<![CDATA[
            		// It does; create a WeakEventListener, attach us to it, and add it to the event
                   _weakEventListener = new WeakEventListener<FixedControl, object, NotifyCollectionChangedEventArgs>(this);
                   _weakEventListener.OnEventAction = (instance, source, eventArgs) =>
                       instance.OnCollectionChanged(source, eventArgs);
                   _weakEventListener.OnDetachAction = (weakEventListener) =>
                       newNotifyCollectionChanged.CollectionChanged -= weakEventListener.OnEvent;
                   newNotifyCollectionChanged.CollectionChanged += _weakEventListener.OnEvent;
            		]]>
            	</code>
            </remarks>
        </member>
        <member name="F:Telerik.Windows.WeakEventListener`3.weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instance of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:Telerik.Windows.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Telerik.Windows.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:Telerik.Windows.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:Telerik.Windows.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DeferredAction">
            <summary>
            Request for a simple action.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DeferredAction"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.AutomationID">
            <summary>
            A helper class:
            - provide an unique value if needed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.AutomationID.Validate(System.String,System.String)">
            <summary>
            Validate the given id: if it is empty string then a new (and valid) ID is returned.
            </summary>
            <param name="id">The value to validate.</param>
            <param name="templateID">A string value to concatenate with the unique ID.</param>
            <returns>A valid ID.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs">
            <summary>
            The event args used for various drag and drop related events.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragDropEventArgs">
            <summary>
            The event args used for various drag and drop related events.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragDropEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Object,Telerik.Windows.Controls.DragDrop.DragDropOptions)">
            <summary>
            Initializes a new instance of the DragDropEventArgs class.
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
            <param name="source">
            An alternate source that will be reported when the event is handled. 
            This pre-populates the Source property.
            </param>
            <param name="options">The drag event options.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragDropEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.
            </summary>
            <param name="genericHandler">The generic handler / delegate implementation to be invoked.</param>
            <param name="genericTarget">The target on which the provided handler should be invoked.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragDropEventArgs.GetElement``1(System.Windows.Point)">
            <summary>
            Returns the top-most element of the given type 
            at the DragPoint coordinates.
            </summary>
            <typeparam name="T">The type of the element to be returned.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragDropEventArgs.GetRelativeElement">
            <summary>
            Try to resolve the relative visual based on the information kept in Options. It can be later used to resolve the correct Root visual.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropEventArgs.Options">
            <summary>
            Gets the drag drop information about this drag drop event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Object,Telerik.Windows.Controls.DragDrop.DragDropOptions)">
            <summary>
            Initializes a new instance of the DragDropQueryEventArgs class.
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
            <param name="source">
            An alternate source that will be reported when the event is handled. 
            This pre-populates the Source property.
            </param>
            <param name="options">The drag event options.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.
            </summary>
            <param name="genericHandler">The generic handler / delegate implementation to be invoked.</param>
            <param name="genericTarget">The target on which the provided handler should be invoked.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs.EmptyArgs">
            <summary>
            Provides empty DragDropQueryEventArgs.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs.QueryResult">
            <summary>
            Gets or sets the result of the query. This result allows or denies actions in the drag drop process.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager">
            <summary>
            A manager class that enables drag drop operations between objects.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AllowDragProperty">
            <summary>
            Identifies the AllowDrag attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AllowDropProperty">
            <summary>
            Identifies the AllowDrop attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AutoDragProperty">
            <summary>
            Identifies the AutoDrag attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DragInfoEvent">
            <summary>
            Identifies the DragInfo event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DropInfoEvent">
            <summary>
            Identifies the DropInfo event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DragQueryEvent">
            <summary>
            Identifies the DragQuery event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DropQueryEvent">
            <summary>
            Identifies the DragQuery event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DragArrowAdjustingEvent">
            <summary>
            Identifies the DragArrowAdjusting event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.GetAllowDrag(System.Windows.DependencyObject)">
            <summary>
            Gets the AllowDrag attached property.
            </summary>
            <param name="obj">The object to get the property for.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.SetAllowDrag(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the AllowDrag attached property.
            </summary>
            <param name="obj">The object to set the property to.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.GetAllowDrop(System.Windows.DependencyObject)">
            <summary>
            Gets the AllowDrop attached property.
            </summary>
            <param name="obj">The object to get the property for.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.SetAllowDrop(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the AllowDrop attached property.
            </summary>
            <param name="obj">The object to set the property to.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.GetAutoDrag(System.Windows.DependencyObject)">
            <summary>
            Gets the AutoDrag attached property.
            </summary>
            <param name="obj">The object to set the property to.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.SetAutoDrag(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the AutoDrag attached property.
            </summary>
            <param name="obj">The object to set the property to.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.Initialize">
            <summary>
            Initialize the RadDragAndDropManager infrastructure.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.GenerateVisualCue">
            <summary>
            Creates a drag/drop visual cue based on the default settings of the Drag/Drop manager.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.GenerateVisualCue(System.Windows.FrameworkElement)">
            <summary>
            Creates a drag/drop visual cue based on the default settings of the Drag/Drop manager.
            </summary>
            <param name="source">If provided, the properties of the visual cue will be set to match this element.</param>
            <returns>A new instance of the DragVisualCue class.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.GenerateArrowCue">
            <summary>
            Generates an arrow content control that can be used in as an arrow cue in the drag/drop operation.
            </summary>
            <returns>A new drag arrow cue element.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AddDragQueryHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs})">
            <summary>
            Adds a handler to for the DragQuery routed event.
            </summary>
            <param name="target">The element to add handler to.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.RemoveDragQueryHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs})">
            <summary>
            Removes a handler for the DragQuery routed event.
            </summary>
            <param name="target">The element to remove the handler from.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AddDropQueryHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs})">
            <summary>
            Adds a handler to for the DropQuery routed event.
            </summary>
            <param name="target">The element to add handler to.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.RemoveDropQueryHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs})">
            <summary>
            Removes a handler for the DropQuery routed event.
            </summary>
            <param name="target">The element to remove the handler from.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AddDragInfoHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropEventArgs})">
            <summary>
            Adds a handler to for the DragInfo routed event.
            </summary>
            <param name="target">The element to add handler to.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.RemoveDragInfoHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropEventArgs})">
            <summary>
            Removes a handler for the DragInfo routed event.
            </summary>
            <param name="target">The element to remove the handler from.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AddDropInfoHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropEventArgs})">
            <summary>
            Adds a handler to for the DropInfo routed event.
            </summary>
            <param name="target">The element to add handler to.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.RemoveDropInfoHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropEventArgs})">
            <summary>
            Removes a handler for the DropInfo routed event.
            </summary>
            <param name="target">The element to remove the handler from.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AddDragArrowAdjustingHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragArrowAdjustingEventArgs})">
            <summary>
            Adds a handler to for the DragArrowAdjusting routed event.
            </summary>
            <param name="target">The element to add handler to.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.RemoveDragArrowAdjustingHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragArrowAdjustingEventArgs})">
            <summary>
            Removes a handler for the DragArrowAdjusting routed event.
            </summary>
            <param name="target">The element to remove the handler from.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.StartDrag(System.Windows.FrameworkElement,System.Object,System.Object)">
            <summary>
            Starts a drag operation. The DragSource parameter cannot be null.
            </summary>
            <param name="dragSource">The element that is a source of the DragDrop.</param>
            <param name="payload">The payload of the DragDrop. Can be null.</param>
            <param name="dragCue">The drag cue of the DragDrop. Can be null.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.CancelDrag">
            <summary>
            Cancels the current drag operation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.IsDragging">
            <summary>
            Gets a value indicating whether there is a dragging in process.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.ExecutionMode">
            <summary>
            Gets or sets the execution mode of the drag operations.
            </summary>
            <value>The execution mode.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.Options">
            <summary>
            Gets the status of the current drag and drop process.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AutoBringIntoView">
            <summary>
            Gets or sets a value indicating whether the ScrollViews should automatically scroll to bring content into view.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.ArrowVisibilityMinimumThreshold">
            <summary>
            Gets or sets the minimun length of the arrow that needs to be reached before it is shown.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DragStartThreshold">
            <summary>
            Gets or sets the distance in pixels that the user needs to drag an object
            before a real drag operation starts. This prevents incidental drag on mouse press.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DragCueOffset">
            <summary>
            Get or sets the relative horizontal and vertical offset of the drag cue.
            These values could be negative.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragDropOptions">
            <summary>
            An object that holds information about the current drag/drop operation.
            </summary>
            <remarks>
                <para>
                    Used for giving information about and customizing a drag/drop operation.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.Payload">
            <summary>
            Gets or sets the data object that is transferred in the drag/drop operation.
            </summary>
            <remarks>
                <para>
                    The Payload can only be set during the DragQuery stage of DragQuery.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.CurrentCursor">
            <summary>
            Gets or sets the current mouse cursor while performing drag operation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.Source">
            <summary>
            Gets the source that has registered with AllowDrag. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.Destination">
            <summary>
            Gets the element that has registered the AllowDrop.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.SourceCue">
            <summary>
            Gets or sets the element that will replace the SourceCueHost.
            </summary>
            <remarks>
                <para>
                    The SourceCue can only be changed during the DragQuery stage. 
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.SourceCueHost">
            <summary>
            Gets or sets the element that will be replaced with the source cue during dragging.
            </summary>
            <remarks>
                <para>
                    The SourceCue can only be changed during the DragQuery stage. 
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.ArrowCue">
            <summary>
            Gets or sets the arrow that will appear during dragging.
            </summary>
            <remarks>
                <para>
                    The SourceCue can only be changed during the DragQuery stage. 
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.DragCue">
            <summary>
            Gets or sets the element that will be dragged visually.
            </summary>
            <remarks>
                <para>
                    The SourceCue can only be changed during the DragQuery stage. 
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.DestinationCue">
            <summary>
            The element that will replace the DestinationCueHost during drag/drop.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.DestinationCueHost">
            <summary>
            The object that will be replaced with the DestinationCue in a successful drag over.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.MouseClickPoint">
            <summary>
            Gets the point where the mouse was first pressed relative to the root canvas.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.CurrentDragPoint">
            <summary>
            Gets the point where the mouse is relative to the root canvas.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.RelativeDragPoint">
            <summary>
             Gets the point where the mouse is relative to the destination element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.Status">
            <summary>
            Gets the current status of the drag and drop operation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.ParticipatingVisualRoots">
            <summary>
            Gets a collection with the visual roots what will participate in the drag/drop operation but are not descendants of the application root visual.
            </summary>
            <remarks>
                <para>
                    All popups that should participate in the drag/drop should be added in this collection.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.SourceCueRollback">
            <summary>
            The method that reinstates the source cue.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.SourceCueHostRollback">
            <summary>
            The method that reinstates the source cue host.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.DragCueRollback">
            <summary>
            The method that reinstates the source cue host.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragStatus">
            <summary>
            Represents the status of a drag/drop operation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.None">
            <summary>
            No drag or drop operations underway.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DragQuery">
            <summary>
            A mouse down mouse has moved over a registered element, it is being queried now.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DragInProgress">
            <summary>
            Dragging has started, no drop zones have been found.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DragComplete">
            <summary>
            The drag/drop process is successful, notifying the source.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DragCancel">
            <summary>
            The drag/drop has been cancelled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropDestinationQuery">
            <summary>
            The destination is asked whether the element can be dropped.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropSourceQuery">
            <summary>
            The source is asked whether the element can be dropped.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropPossible">
            <summary>
            The drop is acknowledged by both parties.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropImpossible">
            <summary>
            The drop is not possible due to refusal of one of the partied.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropComplete">
            <summary>
            The drop operation has completed successfully.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropCancel">
            <summary>
            The drop operation has been cancelled.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ExpandDirection">
            <summary>
             ExpandDirection specifies the expanding direction of a control - for example the <c cref="T:Telerik.Windows.Controls.RadExpander"/>.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ExpandDirection.Down">
            <summary>
            Expand direction is Down.
            </summary>		
        </member>
        <member name="F:Telerik.Windows.Controls.ExpandDirection.Up">
            <summary>
            Expand direction is Up.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ExpandDirection.Left">
            <summary>
            Expand direction is Left.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ExpandDirection.Right">
            <summary>
            Expand direction is Right.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadExpander">
            <summary>
            A HeaderContentControl used to create interactive Expand/Collapse control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.DecoratorTemplateProperty">
            <summary>
            Identifies the DecoratorTemplate property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.HeaderControlTemplateProperty">
            <summary>
            Identifies the HeaderControlTemplate property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.IsExpandedProperty">
            <summary>
            Identifies the IsExpanded property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.HorizontalHeaderAlignmentProperty">
            <summary>
            Identifies the HorizontalHeaderAlignment property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.VerticalHeaderAlignmentProperty">
            <summary>
            Identifies the VerticalHeaderAlignment property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.HeaderOrientationProperty">
            <summary>
            Identifies the HeaderOrientation property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.ResultOrientationProperty">
            <summary>
            Identifies the ResultOrientation property.
            </summary>		
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.ClickModeProperty">
            <summary>
            Identifies the ClickMode property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.ExpandDirectionProperty">
            <summary>
            Identifies the ExpandDirection property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.CollapsedEvent">
            <summary>
            Occurs when the ContentElement is Collapsed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.ExpandedEvent">
            <summary>
            Occurs when the ContentElement is Expanded.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.PreviewCollapsedEvent">
            <summary>
            Identifies the PreviewCollapsed property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.PreviewExpandedEvent">
            <summary>
            Identifies the PreviewExpanded property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.IsHeaderPressedProperty">
            <summary>
            Identifies the IsHeaderPressed property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.IsMouseOverHeaderProperty">
            <summary>
            Identifies the IsMouseOver property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpander.#ctor">
            <summary>
            Initializes a new instance of the RadExpander class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpander.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call 
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpander.ChangeVisualState(System.Boolean)">
            <summary>
            Updates the visual state of the control.
            </summary>
            <param name="useTransitions">Indicates whether transitions should be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpander.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="E:Telerik.Windows.Controls.RadExpander.Collapsed">
            <summary>
            Occurs when the content is Collapsed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadExpander.Expanded">
            <summary>
            Occurs when the content Expanded.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadExpander.PreviewCollapsed">
            <summary>
            Occurs when the content will be Collapsed.
            If the event handler set True for the Handled proterty then the content will not collapse.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadExpander.PreviewExpanded">
            <summary>
            Occurs when the content will be Expanded.
            If the event handler set True for the Handled proterty then the content will not expand.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.IsExpanded">
            <summary>
            Gets or sets whether the content is expanded. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.ClickMode">
            <summary>
            Gets or sets when the content will expand. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.IsHeaderPressed">
            <summary>
            Gets the IsHeaderPressed property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.HorizontalHeaderAlignment">
            <summary>
            Gets or sets the horizontal alignment of the expand Header.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.VerticalHeaderAlignment">
            <summary>
            Gets or sets the horizontal alignment of the expand Header.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.HeaderOrientation">
            <summary>
            Gets or sets the orientation of the expand Header.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.ExpandDirection">
            <summary>
            Gets or sets the direction in which the content would expand. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.DecoratorTemplate">
            <summary>
            Gets or sets a template for the Expander-decorator item. This is a dependency property.
            </summary>
            <remarks>
            The Expander Decorator is a ContentControl that represents the Expander's state.
            You can customize the Decorator item via this property.
            </remarks>
            <example>
                <code lang="XAML">
                    <![CDATA[
                        <telerik:RadExpander
                            x:Name="myExpander" 
                            DecoratorTemplate="{StaticResource CustomDecoratorTemplate}"/>
                    ]]>
                </code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.HeaderControlTemplate">
            <summary>
            Gets or sets a template for the Expander-header item. This is a dependency property.
            </summary>
            <remarks>
            The Expander Decorator is a ContentControl that represents the Expander's state.
            You can customize the Decorator item via this property.
            </remarks>
            <example>
                <code lang="XAML">
                    <![CDATA[
                        <telerik:RadExpander
                            x:Name="myExpander" 
                            HeaderControlTemplate="{StaticResource CustomHeaderControlTemplate}"/>
                    ]]>
                </code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.ResultOrientation">
            <summary>
            Gets or sets the result header orientation.
            </summary>
            <value>The result orientation.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.IsMouseOverHeader">
            <summary>
            Gets the IsMouseOver property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadExpanderAutomationPeer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.#ctor(Telerik.Windows.Controls.RadExpander)">
            <summary>
            Initializes a new instance of the RadExpanderAutomationPeer class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets a control pattern that is associated with this AutomationPeer.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.Collapse">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.Expand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.GetClassNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.IsEnabledCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.OwnerAsExpander">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.GuarantyEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpanderAutomationPeer.ExpandCollapseState">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadHtmlPlaceholder">
            <summary>
            RadHtmlPlaceholder allows you to display a custom html content over the Silverlight application.
            It is part of the page layout.
            Set the <see cref="P:Telerik.Windows.Controls.RadHtmlPlaceholder.HtmlSource"/> property or <see cref="P:Telerik.Windows.Controls.RadHtmlPlaceholder.SourceUrl"/> property to set the html content.
            </summary>
            <remarks>
            When using the control in the browser it is mandatory to set the Windowless property of the Silverlight object, in order to be able to 
            overly html content over Silverlight.
            </remarks>
        </member>
        <member name="F:Telerik.Windows.Controls.RadHtmlPlaceholder.HtmlSourceProperty">
            <summary>
            Identifies the HtmlSource dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadHtmlPlaceholder.SourceUrlProperty">
            <summary>
            Identifies the SourceUrl dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadHtmlPlaceholder.KeepContentInMemoryProperty">
            <summary>
            Identifies the KeepContentInMemory property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadHtmlPlaceholder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadHtmlPlaceholder"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadHtmlPlaceholder.RadHtmlPlaceholder_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Telerik.Windows.Controls.RadHtmlPlaceholder"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadHtmlPlaceholder.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadHtmlPlaceholder.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadHtmlPlaceholder.TransformToVisualHacked(System.Windows.FrameworkElement,System.Windows.UIElement)">
            <summary>
            Microsoft implementation of TransformToVisual is not working if the controls is in a Popup.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadHtmlPlaceholder.UrlLoaded">
            <summary>
            Occurs when the external url that is set as a source is loaded.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadHtmlPlaceholder.HtmlSource">
            <summary>
            Gets or sets the html string that will be displayed over the Silverlight content.
            </summary>
            <remarks>
            This property takes precedence over the <see cref="P:Telerik.Windows.Controls.RadHtmlPlaceholder.SourceUrl"/> property
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadHtmlPlaceholder.SourceUrl">
            <summary>
            Gets or sets the external url that will be loaded over the Silverlight content.
            </summary>
            <remarks>
            If <see cref="P:Telerik.Windows.Controls.RadHtmlPlaceholder.HtmlSource"/> property is set, this property is ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadHtmlPlaceholder.KeepContentInMemory">
            <summary>
            Gets or sets a value indicatiing whether the associates IFrame content should be kept in memory between reloads. Default is false/
            </summary>
            <remarks>
            	Please note that keeping the page in memory may lead to leaks when the control is removed from the Visual Tree 
            	and will no longer be used.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadHtmlPlaceholder.WebBrowser">
            <summary>
            Gets the <see href="http://msdn.microsoft.com/en-us/library/system.windows.controls.webbrowser%28v=vs.95%29.aspx">WebBrowser</see> control which is internally used in out-of-browser scenarios.
            </summary>
            <value>The web browser.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadHtmlPlaceholder.RespectSilverlightLayoutMeasure">
            <summary>
            Set to True if the placeholders should be resized from the Silvrelight layout only.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadHtmlPlaceholder.HtmlPresenter">
            <summary>
            Gets or sets the HTML presenter element.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadHtmlPlaceholder.ContentSourceType.None">
            <summary>
            No uri.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.RadHtmlPlaceholder.ContentSourceType.Url">
            <summary>
            External page will be used.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadHtmlPlaceholder.ContentSourceType.HtmlString">
            <summary>
            Use html string.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Input.Mouse">
            <summary>
            Represents the mouse device. Contains several extensions to the Silverlight mouse capabilities.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.Mouse.MouseWheelEvent">
            <summary>
                Occurs when the mouse wheel is rotated.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.Mouse.MouseDownEvent">
            <summary>
                Occurs when the right mouse button is pressed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.Mouse.MouseUpEvent">
            <summary>
                Occurs when the right mouse button is released.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Input.MouseWheelEventArgs})">
            <summary>
                Adds a handler for the MouseWheel attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Input.MouseWheelEventArgs})">
            <summary>
                Removes a handler for the MouseWheel attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.UIElement,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
                Adds a handler for the MouseDown attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.UIElement,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs},System.Boolean)">
            <summary>
                Adds a handler for the MouseDown attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
            <param name="handledEventsToo">True to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.UIElement,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
                Adds a handler for the MouseUp attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.UIElement,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs},System.Boolean)">
            <summary>
                Adds a handler for the MouseUp attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
            <param name="handledEventsToo">True to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.UIElement,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
                Removes a handler for the MouseDown attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.UIElement,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Removes a handler for the MouseUp attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="P:Telerik.Windows.Input.Mouse.IsMouseWheelSupported">
            <summary>
            Gets a value indicating whether mouse wheel is supported.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Input.Mouse.DoubleClickDuration">
            <summary>
            Gets or sets the value determining the duration between two clicks that are considered as a double click.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Input.MouseButton">
            <summary>
            Defines values that specify the buttons on a mouse device. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.MouseButton.Left">
            <summary>
            The left mouse button. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.MouseButton.Middle">
            <summary>
            The middle mouse button. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.MouseButton.Right">
            <summary>
            The right mouse button. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Input.MouseButtonEventArgs">
            <summary>
            Provides data for various events that report changes to the mouse wheel delta value of a mouse device.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Input.MouseButtonEventArgs.GetPosition(System.Windows.UIElement)">
            <summary>
            Returns the x- and y-coordinates of the mouse pointer position, 
            optionally evaluated against a coordinate origin of a supplied <see cref="T:System.Windows.UIElement" />.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Point" /> that represents the current x- and 
            y-coordinates of the mouse pointer position. If null was passed as <paramref name="relativeTo" />, 
            this coordinate is for the overall Silverlight plug-in content area. 
            If a non-null <paramref name="relativeTo" /> was passed, this coordinate 
            is relative to the object referenced by <paramref name="relativeTo" />.
            </returns>
            <param name="relativeTo">
            Any <see cref="T:System.Windows.UIElement" />-derived object 
            that is contained by the Silverlight plug-in and connected to the object tree. 
            To specify the object relative to the overall  Silverlight coordinate system, 
            set the <paramref name="relativeTo" /> parameter to null.
            </param>
        </member>
        <member name="P:Telerik.Windows.Input.MouseButtonEventArgs.ChangedButton">
            <summary>
            Gets the button associated with the event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Input.MouseButtonEventArgs.ButtonState">
            <summary>
            Gets the state of the button associated with the event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Input.MouseButtonEventArgs.ClickCount">
            <summary>
            Gets the number of times the button was clicked. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Input.MouseButtonEventArgs.Handled">
            <summary>
            Gets or sets a value that marks the routed event as handled, and prevents
            most handlers along the event route from handling the same event again.
            </summary>
            <returns>
            true to mark the routed event handled. false to leave the routed event unhandled,
            which permits the event to potentially route further and be acted on by other
            handlers. The default is false.
            </returns>		
        </member>
        <member name="T:Telerik.Windows.Input.MouseButtonState">
            <summary>
            Specifies the possible states of a mouse button. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.MouseButtonState.Released">
            <summary>
            The button is released.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.MouseButtonState.Pressed">
            <summary>
            The button is pressed. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Input.MouseWheelEventArgs">
            <summary>
            Provides data for various events that report changes to the mouse wheel delta value of a mouse device.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Input.MouseWheelEventArgs.GetPosition(System.Windows.UIElement)">
            <summary>
            Returns the x- and y-coordinates of the mouse pointer position, 
            optionally evaluated against a coordinate origin of a supplied <see cref="T:System.Windows.UIElement" />.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Point" /> that represents the current x- and 
            y-coordinates of the mouse pointer position. If null was passed as <paramref name="relativeTo" />, 
            this coordinate is for the overall Silverlight plug-in content area. 
            If a non-null <paramref name="relativeTo" /> was passed, this coordinate 
            is relative to the object referenced by <paramref name="relativeTo" />.
            </returns>
            <param name="relativeTo">
            Any <see cref="T:System.Windows.UIElement" />-derived object 
            that is contained by the Silverlight plug-in and connected to the object tree. 
            To specify the object relative to the overall  Silverlight coordinate system, 
            set the <paramref name="relativeTo" /> parameter to null.
            </param>
        </member>
        <member name="P:Telerik.Windows.Input.MouseWheelEventArgs.Delta">
            <summary>
            Gets a value that indicates the amount that the mouse wheel has changed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.Window.WindowUnloadEvent">
            <summary>
            Occurs when the browser window is closing.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDockPanel">
            <summary>
            Defines an area where you can arrange child elements either horizontally or vertically, relative to each other.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDockPanel.DockProperty">
            <summary>
            Identifies the Dock attached dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDockPanel.LastChildFillProperty">
            <summary>
            Identifies the LastChildFill dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.GetDock(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the Dock attached property for a specified UIElement.
            </summary>
            <param name="obj">The element from which the property value is read.</param>
            <returns>The Dock property value for the element.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.SetDock(System.Windows.DependencyObject,Telerik.Windows.Controls.Dock)">
            <summary>
            Sets the value of the Dock attached property to a specified element.
            </summary>
            <param name="obj">The element to which the attached property is written.</param>
            <param name="value">The needed Dock value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a RadDockPanel prior to arranging them during the ArrangeOverride pass.
            </summary>
            <param name="availableSize">A maximum Size to not exceed.</param>
            <returns>A Size that represents the element size you want.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content (child elements) of a RadDockPanel element.
            </summary>
            <param name="finalSize">The Size this element uses to arrange its child elements.</param>
            <returns>The Size that represents the arranged size of this DockPanel element.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDockPanel.LastChildFill">
            <summary>
            Gets or sets whether last child will fill the available area.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.RadUniformGrid">
            <summary>
            Uniform grid panel with orientation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.HideFirstColumnProperty">
            <summary>
            Identifies the HideFirstColumn dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.HideFirstRowProperty">
            <summary>
            Identifies the HideFirstRow dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.PreserveSpaceForCollapsedChildrenProperty">
            <summary>
            Identifies the PreserveSpaceForCollapsedChildren dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.ChildrenFlowProperty">
            <summary>
            Identifies the ChildrenFlow dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Columns"></see> dependency property. 
            </summary>
            <returns>
            The identifier for the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Columns"></see> dependency property.
            </returns>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.FirstColumnProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.FirstColumn"></see> dependency property. 
            </summary>
            <returns>
            The identifier for the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.FirstColumn"></see> dependency property.
            </returns>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.RowsProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Rows"></see> dependency property. 
            </summary>
            <returns>
            The identifier for the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Rows"></see> dependency property.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadUniformGrid.#ctor">
            <summary>
            Initializes a new instance of the RadUniformGrid class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadUniformGrid.ArrangeOverride(System.Windows.Size)">
            <summary>
            Defines the layout of the <see cref="T:Telerik.Windows.Controls.Primitives.RadUniformGrid"></see> by distributing space evenly among all of the child elements.
            </summary>
            <returns>
            The actual <see cref="T:System.Windows.Size"></see> of the grid that is rendered to display the child elements that are visible.
            </returns>
            <param name="finalSize">
            The <see cref="T:System.Windows.Size"></see> of the area for the grid to use.
            </param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadUniformGrid.MeasureOverride(System.Windows.Size)">
            <summary>
            Computes the desired size of the <see cref="T:Telerik.Windows.Controls.Primitives.RadUniformGrid"></see> by measuring all of the child elements.
            </summary>
            <returns>
            The desired <see cref="T:System.Windows.Size"></see> based on the child content of the grid and the constraint parameter.
            </returns>
            <param name="availableSize">
            The <see cref="T:System.Windows.Size"></see> of the available area for the grid.
            </param>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Columns">
            <summary>
            Gets or sets the number of columns that are in the grid.
            </summary>
            <returns>
            The number of columns that are in the grid. The default value is zero (0). 
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.FirstColumn">
            <summary>
            Gets or sets the number of leading blank cells in the first row of the grid.
            </summary>
            <returns>
            The number of empty cells that are in the first row of the grid. The default value is zero (0).
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Rows">
            <summary>
            Gets or sets the number of rows that are in the grid.
            </summary>
            <returns>
            The number of rows that are in the grid. The default value is zero (0).
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.PreserveSpaceForCollapsedChildren">
            <summary>
            Gets or sets a value specifying whether a collapsed child's size should be preserved.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.ChildrenFlow">
            <summary>
            Gets or sets a value that specifies the dimension in which child content is arranged.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Controls.Orientation"></see> value that represents the physical orientation of content within the <see cref="T:Telerik.Windows.Controls.Primitives.RadUniformGrid"></see> as horizontal or vertical. The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"></see>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.HideFirstColumn">
            <summary>
            Gets or sets value that hide or show the first column. This is a Dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.HideFirstRow">
            <summary>
            Gets or sets value that hide or show the first row. This is a Dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadWrapPanel">
            <summary>
            Positions child elements in sequential position from left to right, breaking content 
            to the next line at the edge of the containing box. Subsequent ordering happens 
            sequentially from top to bottom or from right to left, depending on the value of 
            the Orientation property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.ItemHeightProperty">
            <summary>
            Identifies the ItemHeight dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.ItemWidthProperty">
            <summary>
            Identifies the ItemWidth dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.AnimationDurationProperty">
            <summary>
            Identifies the AnimationDuration dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.IsAnimatedProperty">
            <summary>
            Identifies the IsAnimated dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadWrapPanel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>
            The size that this element determines it needs during layout, based on its calculations of child element sizes.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.AnimationDuration">
            <summary>
            Gets or sets the duration of the animation.
            </summary>
            <value>The duration of the animation.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.IsAnimated">
            <summary>
            Gets or sets a value indicating whether this RadWrapPanel is animated.
            </summary>
            <value>
            	<c>True</c> if this instance is animated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.ItemHeight">
            <summary>
            Gets or sets a value that specifies the height of all items that are 
            contained within a WrapPanel. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.ItemWidth">
            <summary>
            Gets or sets a value that specifies the width of all items that are 
            contained within a WrapPanel. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.Orientation">
            <summary>
            Gets or sets a value that specifies the dimension in which child 
            content is arranged. This is a dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupType.Window">
            <summary>
            The popup is a window.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupType.TopMostWindow">
            <summary>
            The popup is a TopMost window.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupType.Popup">
            <summary>
            The popup is a simple popup.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupType.DockWindow">
            <summary>
            The popup is a dock window (ToolWindow).
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PopupManager">
            <summary>
            Manage starting ZIndexes of popup controls.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.Reset">
            <summary>
            For Testing Purpose.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.Open(System.Windows.Controls.Primitives.Popup,Telerik.Windows.Controls.PopupType)">
            <summary>
            Opens popup control.
            </summary>
            <param name="popup">The popup that will be opened.</param>
            <param name="type">The type of the popup (e.g. Window, Popup, etc.).</param>
            <returns>True if opened, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.Open(System.Windows.Controls.Primitives.Popup,Telerik.Windows.Controls.PopupType,System.Boolean)">
            <summary>
            Opens popup control.
            </summary>
            <param name="popup">The popup that will be opened.</param>
            <param name="type">The type of the popup (e.g. Window, Popup, etc.).</param>
            <param name="attachToVisualRoot">Whether the popup should be attached to the visual root.</param>
            <returns>True if opened, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.Close(System.Windows.Controls.Primitives.Popup,Telerik.Windows.Controls.PopupType)">
            <summary>
            Closes popup control.
            </summary>
            <param name="popup">The popup that will be closed.</param>
            <param name="type">The type of the popup (e.g. Window, Popup, etc.).</param>
            <returns>True if closed, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.Close(System.Windows.Controls.Primitives.Popup,Telerik.Windows.Controls.PopupType,System.Boolean)">
            <summary>
            Closes popup control.
            </summary>
            <param name="popup">The popup that will be closed.</param>
            <param name="type">The type of the popup (e.g. Window, Popup, etc.).</param>
            <param name="detachFromVisualRoot">Value indicating whether should be detached from the visual root.</param>
            <returns>True if closed, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.BringToFront(System.Windows.Controls.Primitives.Popup,Telerik.Windows.Controls.PopupType)">
            <summary>
            Attempt to brings the popup on top. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that will be on top.</param>
            <param name="type">The type of the popup (e.g. Window, Popup, etc.).</param>
            <returns>True if on top, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.OpenWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Shows Window popup. Should be called on closed popups (IsOpen=false).
            </summary>
            <param name="popup">The popup that will show.</param>
            <param name="attachToVisualRoot">Value indicating whether should be attached to the visual root.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CloseWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Hides Window popup. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that will hide.</param>
            <param name="detachFromVisualRoot">Value indicating whether should be detached from the visual root.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.BringToFrontWindow(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Move Window in front of all windows. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that go in front.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.OpenTopMostWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Shows Window popup. Should be called on closed popups (IsOpen=false).
            </summary>
            <param name="popup">The popup that will show.</param>
            <param name="attachToVisualRoot">Value indicating whether should be attached to the visual root.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CloseTopMostWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Hides Window popup. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that will hide.</param>
            <param name="detachFromVisualRoot">Value indicating whether should be detached from the visual root.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.BringToFrontTopMostWindow(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Move Window in front of all windows. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that go in front.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.OpenPopup(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Shows Popup control. Should be called on closed popups (IsOpen=false).
            </summary>
            <param name="popup">The popup that will show.</param>
            <param name="attachToVisualRoot">Value indicating whether should be attached to the visual root.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.ClosePopup(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Hides Popup control. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that will hide.</param>
            <param name="detachFromVisualRoot">Value indicating whether should be detached from the visual root.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.BringToFrontPopup(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Move popup control in front of all popups. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that go in front.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.OpenDockWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Shows DockWindow control. Should be called on closed popups (IsOpen=false).
            </summary>
            <param name="popup">The popup that will show.</param>
            <param name="attachToVisualRoot">Value indicating whether should be attached to the visual root.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CloseDockWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Hides DockWindow control. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that will hide.</param>
            <param name="detachFromVisualRoot">Value indicating whether should be detached from the visual root.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.BringToFrontDockWindow(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Move DockWindow in front of all windows. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that go in front.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CanPopupOpen(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Check whether popup could be opened.
            </summary>
            <param name="popup">The popup that will be opened.</param>
            <returns>True if it can be open, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CanPopupClose(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Check whether popup could be closed.
            </summary>
            <param name="popup">The popup that will be closed.</param>
            <returns>True if it can be closed, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CanBringToFront(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Check whether popup could be on top.
            </summary>
            <param name="popup">The popup that wants to be on top.</param>
            <returns>True if it can be on top, otherwise False.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.PopupManager.WindowStartingZIndex">
            <summary>
            Gets or sets starting index for RadWindow controls. Should be bigger then zero
            and smaller then TopWinows ZIndex.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.PopupManager.TopWindowStartingZIndex">
            <summary>
            Gets or sets starting index for TopMost RadWindow controls. Should be bigger then Windows ZIndex and smaller then Popups ZIndex.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.PopupManager.PopupStartingZIndex">
            <summary>
            Gets or sets starting index for Popup controls. Should be bigger then TopWindows ZIndex
            and smaller then DockWinows ZIndex.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.PopupManager.DockWindowStartingZIndex">
            <summary>
            Gets or sets starting index for RadDockWindow controls. Should be bigger then Popups ZIndex 
            and smaller then 1000000.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupWrapper.ClearReferences">
            <summary>
            This method is called when you will no longer need this instance of PopupWrapper.
            You should manually remove handlers from ClickedOutsidePopup event.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.PopupWrapper.RegisteredPopups">
            <summary>
            Contains a list of all Open Popup objects.
            </summary>
            <remarks>
            Used to properly raise routed events like MouseWheel.
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.RadProgressBarAutomationPeer">
             <summary>
            
             </summary> 
        </member>
        <member name="T:Telerik.Windows.Controls.RangeBaseAutomationPeer">
             <summary>
            
             </summary> 
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.RangeBase)">
            <summary>
            Initializes a new instance of the RangeBaseAutomationPeer class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseMaximumPropertyChangedEvent(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseMinimumPropertyChangedEvent(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseValuePropertyChangedEvent(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseSmallChangePropertyChangedEvent(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseLargeChangePropertyChangedEvent(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseIsReadOnlyPropertyChangedEvent(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.GuarantyEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.OwnerAsRangeBase">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.LargeChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.SmallChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBarAutomationPeer.#ctor(Telerik.Windows.Controls.RadProgressBar)">
            <summary>
            Initializes a new instance of the RadProgressBarAutomationPeer class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            
            </summary>
            <param name="patternInterface"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBarAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBarAutomationPeer.GetClassNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBarAutomationPeer.GetClickablePointCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.PlacementMode">
            <summary>
            Describes the placement of where a Popup control appears on the screen.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Absolute">
            <summary>
            A position of the Popup control relative to the upper-left corner of 
            the screen and at an offset that is defined by the HorizontalOffset 
            and VerticalOffset property values. If the screen edge obscures the 
            Popup, the control then repositions itself to align with the edge.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Bottom">
            <summary>
            A position of the Popup control where the control aligns its upper edge 
            with the lower edge of the PlacementTarget and aligns its left edge with 
            the left edge of the PlacementTarget. If the lower screen-edge obscures 
            the Popup, the control repositions itself so that its lower edge aligns 
            with the upper edge of the PlacementTarget. If the upper screen-edge 
            obscures the Popup, the control then repositions itself so that its upper 
            edge aligns with the upper screen-edge.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Center">
            <summary>
            A position of the Popup control where it is centered over the PlacementTarget. 
            If a screen edge obscures the Popup, the control repositions itself to align 
            with the screen edge. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Right">
            <summary>
            A position of the Popup control that aligns its left edge with the right edge 
            of the PlacementTarget and aligns its upper edge with the upper edge of the 
            PlacementTarget. If the right screen-edge obscures the Popup, the control 
            repositions itself so that its left edge aligns with the left edge of the 
            PlacementTarget. If the left screen-edge obscures the Popup, the control 
            repositions itself so that its left edge aligns with the left screen-edge. 
            If the upper or lower screen-edge obscures the Popup, the control then 
            repositions itself to align with the obscuring screen edge.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.MousePoint">
            <summary>
            A postion of the Popup control that aligns its upper edge with the lower edge
            of the bounding box of the mouse and aligns its left edge with the left edge
            of the bounding box of the mouse. If the lower screen-edge obscures the Popup,
            it repositions itself to align with the upper edge of the bounding box of the mouse.
            If the upper screen-edge obscures the Popup, the control repositions itself to 
            align with the upper screen-edge.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Left">
            <summary>
            A Popup control that aligns its right edge with the left edge of the PlacementTarget 
            and aligns its upper edge with the upper edge of the PlacementTarget. If the left 
            screen-edge obscures the Popup, the Popup repositions itself so that its left edge 
            aligns with the right edge of the PlacementTarget. If the right screen-edge obscures 
            the Popup, the right edge of the control aligns with the right screen-edge. If the 
            upper or lower screen-edge obscures the Popup, the control repositions itself to 
            align with the obscuring screen edge.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Top">
            <summary>
            A position of the Popup control that aligns its lower edge with the upper edge of 
            the PlacementTarget and aligns its left edge with the left edge of the PlacementTarget. 
            If the upper screen-edge obscures the Popup, the control repositions itself so that 
            its upper edge aligns with the lower edge of the PlacementTarget. If the lower 
            screen-edge obscures the Popup, the lower edge of the control aligns with the 
            lower screen-edge. If the left or right screen-edge obscures the Popup, it then 
            repositions itself to align with the obscuring screen.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PopupAnimation">
            <summary>
            Defines the values, specifying the animation type which will be
            played when a RadPopup is opened or closed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupAnimation.None">
            <summary>
            Disables the RadPopup animation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupAnimation.Fade">
            <summary>
            Fades in or out the RadPopup when it is opened or closed.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadProgressBar">
            <summary>
            The RadProgressBar control can be used to to indicate the progress of an
            operation. It gives to an end-user visual feedback about an operation he
            is waiting for to complete.
            </summary>
            <remarks>
            The <strong>RadProgressBar</strong> control should be used as a visual indication of the progress of an operation. 
            The developer is responsible for programatically updating the value of the <strong>RadProgressBar</strong>, 
            while the control takes care of the visual representation of its value.
            </remarks>
        </member>
        <member name="F:Telerik.Windows.Controls.RadProgressBar.IsIndeterminateProperty">
            <summary>
            Identifies the IsIndeterminate Property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadProgressBar.SkipValueProperty">
            <summary>
            	Identifies the SkipValue Property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadProgressBar.OrientationProperty">
            <summary>
                Identifies the <see cref="P:Telerik.Windows.Controls.RadProgressBar.Orientation"/> property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadProgressBar"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.OnCreateAutomationPeer">
            <summary>
            Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Windows Presentation Foundation (WPF) infrastructure.
            </summary>
            <returns>
            The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementation.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.OnValueChanged(System.Double,System.Double)">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged"/> routed event.
            </summary>
            <param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> property.</param>
            <param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property changes.
            </summary>
            <param name="oldMaximum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param>
            <param name="newMaximum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property changes.
            </summary>
            <param name="oldMinimum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param>
            <param name="newMinimum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.OnSkipValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [skip value changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadProgressBar.SkipValue">
            <summary>
            Gets or sets a value indicating the offset from which the ProgressBar indicator should start from.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadProgressBar.IsIndeterminate">
            <summary>
            Gets or sets a value indicating whether this instance is indeterminate.
            </summary>
            <value>
            	<c>True</c> if this instance is indeterminate; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadProgressBar.Orientation">
            <summary>
                Gets or sets the direction of filling of the control. This is a dependancy property.
            </summary>
            <value>
                One of the <see cref="P:Telerik.Windows.Controls.RadProgressBar.Orientation">Orientation enumeration</see>
                values. The default value is <strong>Horizontal</strong>.
            </value>
            <remarks>
            	<para>Use the <strong>ExpandMode</strong> property to specify the way RadPanelbar
                should behave after an item is expanded. The available options are:</para>
            	<list type="bullet">
            		<item><strong>Single</strong> (default) - Only one item can be expanded at a
                    time. Expanding another item collapses the previously expanded one.</item>
            		<item><strong>Multiple</strong> - More than one item can
                    be expanded at a time.</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to programmatically set the <see cref="P:Telerik.Windows.Controls.RadProgressBar.Orientation">Orientation</see> 
                property of a <strong>RadProgressBar</strong> control.
                <code lang="CS">
            		void Page_Load(object sender, EventArgs e)
            		{
            			RadProgressBar myProgressBar = new RadProgressBar();
            			myProgressBar.Orientation = Orientation.Vertical;
            		}
                </code>
            </example>
        </member>
        <member name="T:Telerik.Windows.Controls.ScrollViewerExtensions">
            <summary>
            Contains attached behavior for enabling mouse wheel scrolling for ScrollViewer controls.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollViewerExtensions.EnableMouseWheelProperty">
            <summary>
            Identifies the EnableMouseWheel dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ScrollViewerExtensions.GetEnableMouseWheel(System.Windows.DependencyObject)">
            <summary>
            Gets whether the mouse wheel scrolling is enabled for the specified ScrollViewer.
            </summary>
            <param name="obj">The DependencyObject from which to read the property value.</param>
            <returns>True if the mouse wheel scrolling is enabled for the specified ScrollViewer, otherwise false.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ScrollViewerExtensions.SetEnableMouseWheel(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value determining whether the mouse wheel scrolling is enabled for the specified ScrollViewer.
            </summary>
            <param name="obj">The DependencyObject on which to set the property value.</param>
            <param name="value">True if the mouse wheel scrolling should be enabled, otherwise False.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollViewerExtensions.AttachedVerticalScrollBarProperty">
            <summary>
            DependencyProperty identifying the AttachedVerticalScrollBar attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollViewerExtensions.AttachedHorizontalScrollBarProperty">
            <summary>
            DependencyProperty identifying the AttachedHorizontalScrollBar attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ScrollViewerExtensions.GetAttachedVerticalScrollBar(System.Windows.DependencyObject)">
            <summary>
            Sets the attached external Vertical ScrollBar to a ScrollViewer.
            </summary>
            <param name="obj">The ScrollViewer.</param>
            <returns>The ScrollBar instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ScrollViewerExtensions.SetAttachedVerticalScrollBar(System.Windows.DependencyObject,System.Windows.Controls.Primitives.ScrollBar)">
            <summary>
            Gets the attached external Vertical ScrollBar to a ScrollViewer.
            </summary>
            <param name="obj">The ScrollViewer.</param>
            <param name="value">The ScrollBar instance.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ScrollViewerExtensions.GetAttachedHorizontalScrollBar(System.Windows.DependencyObject)">
            <summary>
            Sets the attached external Horizontal ScrollBar to a ScrollViewer.
            </summary>
            <param name="obj">The ScrollViewer.</param>
            <returns>The ScrollBar instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ScrollViewerExtensions.SetAttachedHorizontalScrollBar(System.Windows.DependencyObject,System.Windows.Controls.Primitives.ScrollBar)">
            <summary>
            Gets the attached external Horizontal ScrollBar to a ScrollViewer.
            </summary>
            <param name="obj">The ScrollViewer.</param>
            <param name="value">The ScrollBar instance.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.ThumbMoveDirection.Increase">
            <summary>
            Positive direction, the value will be increased.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ThumbMoveDirection.Decrease">
            <summary>
            Negative direction, the value will be decreased.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDragCompletedEventArgs">
            <summary>
            Initializes a new instance of the RadDragCompletedEventArgs class.
            Provides data for the RadDragCompleted event that occurs when a user completes a drag operation with the mouse of Thumb control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragCompletedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragCompletedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragCompletedEventArgs.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragCompletedEventArgs"/> class.
            </summary>
            <param name="horizontalChange">The horizontal change.</param>
            <param name="verticalChange">The vertical change.</param>
            <param name="value">The value.</param>
            <param name="selectionStart">The selection start.</param>
            <param name="selectionEnd">The selection end.</param>
            <param name="canceled">If set to <c>true</c> [canceled].</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.Canceled">
            <summary>
            Gets a value that indicates whether the drag operation was canceled.
            </summary>
            <value><c>True</c> if canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.HorizontalChange">
            <summary>
            Gets the horizontal change in the thumb position since the last RadDragDelta event.
            </summary>
            <value>
            The horizontal change in the thumb position since the last RadDragDelta event.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.VerticalChange">
            <summary>
            Gets the vertical change in the thumb position since the last RadDragDelta event.
            </summary>
            <value>
            The vertical change in the thumb position since the last RadDragDelta event.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.SelectionStart">
            <summary>
            Gets or sets the selection start.
            </summary>
            <value>The selection start.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.SelectionEnd">
            <summary>
            Gets or sets the selection end.
            </summary>
            <value>The selection end.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDragDeltaEventArgs">
            <summary>
            Provides data for the RadDragDelta event that occurs one or more times when a user drags a Thumb control with the mouse.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragDeltaEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragDeltaEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragDeltaEventArgs.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragDeltaEventArgs"/> class.
            </summary>
            <param name="horizontalChange">The horizontal change.</param>
            <param name="verticalChange">The vertical change.</param>
            <param name="value">The value.</param>
            <param name="selectionStart">The selection start.</param>
            <param name="selectionEnd">The selection end.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragDeltaEventArgs.HorizontalChange">
            <summary>
            Gets the horizontal change in the thumb position since the last RadDragDelta event.
            </summary>
            <value>
            The horizontal change in the thumb position since the last RadDragDelta event.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragDeltaEventArgs.VerticalChange">
            <summary>
            Gets the vertical change in the thumb position since the last RadDragDelta event.
            </summary>
            <value>
            The vertical change in the thumb position since the last RadDragDelta event.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragDeltaEventArgs.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragDeltaEventArgs.SelectionStart">
            <summary>
            Gets or sets the selection start.
            </summary>
            <value>The selection start.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragDeltaEventArgs.SelectionEnd">
            <summary>
            Gets or sets the selection end.
            </summary>
            <value>The selection end.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDragStartedEventArgs">
            <summary>
            Provides data for the RadDragStarted event that occurs when a user drags a Thumb control with the mouse.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragStartedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragStartedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragStartedEventArgs.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragStartedEventArgs"/> class.
            </summary>
            <param name="horizontalOffset">The horizontal offset.</param>
            <param name="verticalOffset">The vertical offset.</param>
            <param name="value">The value.</param>
            <param name="selectionStart">The selection start.</param>
            <param name="selectionEnd">The selection end.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragStartedEventArgs.HorizontalOffset">
            <summary>
            Gets the horizontal distance between the current mouse position and the thumb coordinates.
            </summary>
            <value>
            The horizontal distance between the current mouse position and the thumb coordinates.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragStartedEventArgs.VerticalOffset">
            <summary>
            Gets the vertical distance between the current mouse position and the thumb coordinates.
            </summary>
            <value>
            The vertical distance between the current mouse position and the thumb coordinates.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragStartedEventArgs.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragStartedEventArgs.SelectionStart">
            <summary>
            Gets or sets the selection start.
            </summary>
            <value>The selection start.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragStartedEventArgs.SelectionEnd">
            <summary>
            Gets or sets the selection end.
            </summary>
            <value>The selection end.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSliderAutomationPeer">
             <summary>
            
             </summary> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadSliderAutomationPeer.#ctor(Telerik.Windows.Controls.RadSlider)">
            <summary>
            Initializes a new instance of the RadSliderAutomationPeer class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSliderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            
            </summary>
            <param name="patternInterface"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSliderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSliderAutomationPeer.GetClassNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSliderAutomationPeer.GetClickablePointCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.RadTickBar">
            <summary>
            Represents a control that draws a set of tick marks for a RadSlider control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTickBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadTickBar"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTickBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the container for every item.
            </summary>
            <param name="element"></param>
            <param name="item"></param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.Maximum">
            <summary>
            Bound to <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.Minimum">
            <summary>
            Bound to <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/>.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionRangeChangedEventArgs">
            <summary>
            Provides data for the SelectionStartChanged and SelectionEndChanged events.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionRangeChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.SelectionRangeChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionRangeChangedEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.SelectionRangeChangedEventArgs"/> class.
            </summary>
            <param name="selectionStart">The selection start.</param>
            <param name="selectionEnd">The selection end.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionRangeChangedEventArgs.SelectionStart">
            <summary>
            Gets the selection start.
            </summary>
            <value>The selection start.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionRangeChangedEventArgs.SelectionEnd">
            <summary>
            Gets the selection end.
            </summary>
            <value>The selection end.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.TickBarPlacement">
            <summary>
            Specifies the placement of a TickBar with respect to the track of a RadSlider control. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickBarPlacement.Left">
            <summary>
            The tick bar is positioned to the left of the track of the slider. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickBarPlacement.Top">
            <summary>
            The tick bar is positioned above the track of the slider. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickBarPlacement.Right">
            <summary>
            The tick bar is positioned to the right of the track of the slider. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickBarPlacement.Bottom">
            <summary>
            The tick bar is positioned below the track of the slider. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TickPlacement">
            <summary>
            Specifies the position of tick marks in a RadSlider control with respect to the track in the control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickPlacement.None">
            <summary>
            No tick marks appear.  
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickPlacement.TopLeft">
            <summary>
            Tick marks appear above the track for a horizontal slider, or to the left of the track for a vertical slider.  
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickPlacement.BottomRight">
            <summary>
            Tick marks appear below the track for a horizontal slider, or to the right of the track for a vertical slider.  
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickPlacement.Both">
            <summary>
            Tick marks appear above and below the track bar for a horizontal slider, or to the left and right of the track for a vertical slider. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ActivateRow">
            <summary>
              Looks up a localized string similar to Activate.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.AllDayEvent">
            <summary>
              Looks up a localized string similar to All da_y event.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Alphabetical">
            <summary>
              Looks up a localized string similar to Alphabetical.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.AppearanceCategory">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Appointment">
            <summary>
              Looks up a localized string similar to Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.AppointmentRecurrence">
            <summary>
              Looks up a localized string similar to Appointment Recurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.AppointmentTime">
            <summary>
              Looks up a localized string similar to Appointment time.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.AppointmentValidationError">
            <summary>
              Looks up a localized string similar to The Start time should be earlier than the End time.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Auto_hide">
            <summary>
              Looks up a localized string similar to Auto hide.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.BeginEdit">
            <summary>
              Looks up a localized string similar to Begin Edit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.BeginEditAppointment">
            <summary>
              Looks up a localized string similar to Begin Edit Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.BeginInlineEditing">
            <summary>
              Looks up a localized string similar to Begin Inline Editing.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.BeginInsert">
            <summary>
              Looks up a localized string similar to Begin Insert.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.BehaviourCategory">
            <summary>
              Looks up a localized string similar to Behavior.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Body">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.BrushesCategory">
            <summary>
              Looks up a localized string similar to Brushes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Busy">
            <summary>
              Looks up a localized string similar to Busy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CancelCellEdit">
            <summary>
              Looks up a localized string similar to Cancel Cell Edit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CancelEditAppointment">
            <summary>
              Looks up a localized string similar to Cancel Edit Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CancelRowEdit">
            <summary>
              Looks up a localized string similar to Cancel Row Edit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CannotBringToFrontDifferentTypes">
            <summary>
              Looks up a localized string similar to Cannot bring to front popup with different type..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CannotChangeStartingIndex">
            <summary>
              Looks up a localized string similar to Cannot change starting ZIndex when there are open Popup..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CannotUseItemsSource">
            <summary>
              Looks up a localized string similar to Items collection must be empty before using ItemsSource..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CannotUseTicksAndTickFrequencySimultaneously">
            <summary>
              Looks up a localized string similar to Ticks collection must be empty before using TickFrequency..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Categorize">
            <summary>
              Looks up a localized string similar to Categorize.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Century">
            <summary>
              Looks up a localized string similar to century.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartAxisLabelDateTimeFormat">
            <summary>
              Looks up a localized string similar to dddd, dd MMMM yyyy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartAxisLabelFormat">
            <summary>
              Looks up a localized string similar to  .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartChartLegendHeader">
            <summary>
              Looks up a localized string similar to Legend.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartChartLegendLinearSeriesFormat">
            <summary>
              Looks up a localized string similar to Series {0}.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartChartLegendRadialSeriesFormat">
            <summary>
              Looks up a localized string similar to Item {0}.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartChartTitle">
            <summary>
              Looks up a localized string similar to  .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartHorizontalAxisTitle">
            <summary>
              Looks up a localized string similar to  .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartItemLabelFormat">
            <summary>
              Looks up a localized string similar to  .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartItemToolTipFormat">
            <summary>
              Looks up a localized string similar to  .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartNoDataMessage">
            <summary>
              Looks up a localized string similar to No Data Series..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartRangeItemToolTipFormat">
            <summary>
              Looks up a localized string similar to High: {0}{2}Low: {1}.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartStickItemToolTipFormat">
            <summary>
              Looks up a localized string similar to High: {0}{4}Low: {1}{4}Open: {2}{4}Close: {3}.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ChartVerticalAxisTitle">
            <summary>
              Looks up a localized string similar to  .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Clear">
            <summary>
              Looks up a localized string similar to Clear.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ClearAll">
            <summary>
              Looks up a localized string similar to Clear All.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Clock">
            <summary>
              Looks up a localized string similar to Clock.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CloseItem">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CloseItemQuestion">
            <summary>
              Looks up a localized string similar to Are you sure you want to close this dialog without saving the changes?.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CollapseHierarchyItem">
            <summary>
              Looks up a localized string similar to Collapse.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ColorPickerAutomatic">
            <summary>
              Looks up a localized string similar to Automatic.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ColorPickerStandardColors">
            <summary>
              Looks up a localized string similar to Standard colors.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ColorPickerThemeColors">
            <summary>
              Looks up a localized string similar to Theme colors.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CommitEdit">
            <summary>
              Looks up a localized string similar to Commit Edit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CommitEditAppointment">
            <summary>
              Looks up a localized string similar to Commit Edit Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CommonCategory">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Confirm">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ContentCategory">
            <summary>
              Looks up a localized string similar to Content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ControlCornerRadius">
            <summary>
              Looks up a localized string similar to Gets or sets a value that represents the degree (in pixels) to which the corners of a Border are rounded. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ControlIsHighlighted">
            <summary>
              Looks up a localized string similar to Gets or sets whether the control is highlighted (like in mouse-over case). This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ControlIsMouseOver">
            <summary>
              Looks up a localized string similar to Gets or sets whether the mouse is over. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ControlIsPressed">
            <summary>
              Looks up a localized string similar to Gets or sets whether the state is pressed. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Copy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CreateAppointment">
            <summary>
              Looks up a localized string similar to Create appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Daily">
            <summary>
              Looks up a localized string similar to _Daily.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DataForm_AddNew">
            <summary>
              Looks up a localized string similar to Add.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DataForm_BeginEdit">
            <summary>
              Looks up a localized string similar to Edit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DataForm_Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DataForm_MoveCurrentToFirst">
            <summary>
              Looks up a localized string similar to First.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DataForm_MoveCurrentToLast">
            <summary>
              Looks up a localized string similar to Last.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DataForm_MoveCurrentToNext">
            <summary>
              Looks up a localized string similar to Next.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DataForm_MoveCurrentToPrevious">
            <summary>
              Looks up a localized string similar to Previous.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Day">
            <summary>
              Looks up a localized string similar to _Day.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Days">
            <summary>
              Looks up a localized string similar to day(s).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DecadeEnding">
            <summary>
              Looks up a localized string similar to s.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteAppointment">
            <summary>
              Looks up a localized string similar to Delete appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteItem">
            <summary>
              Looks up a localized string similar to Delete item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteItemQuestion">
            <summary>
              Looks up a localized string similar to Are you sure you want to delete this appointment?.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteOccurrence">
            <summary>
              Looks up a localized string similar to Delete this _occurrence..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteRecurringItem">
            <summary>
              Looks up a localized string similar to Delete Recurring Item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteRecurringItemQuestion">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; is a recurring appointment. Do you want to delete only this occurrence or the series?.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteSeries">
            <summary>
              Looks up a localized string similar to Delete the _series..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Dockable">
            <summary>
              Looks up a localized string similar to Dockable.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColorPicker_NoColor">
            <summary>
              Looks up a localized string similar to No color.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColorSelector_Automatic">
            <summary>
              Looks up a localized string similar to Automatic.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColorSelector_Transparent">
            <summary>
              Looks up a localized string similar to No color.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColumnProperties_ColumnIndex">
            <summary>
              Looks up a localized string similar to Column index: {0}.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColumnProperties_MeasureIn">
            <summary>
              Looks up a localized string similar to Measure in:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColumnProperties_NextColumn">
            <summary>
              Looks up a localized string similar to Next Column.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColumnProperties_Percents">
            <summary>
              Looks up a localized string similar to Percents.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColumnProperties_Pixels">
            <summary>
              Looks up a localized string similar to Pixels.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColumnProperties_PreferredWidth">
            <summary>
              Looks up a localized string similar to Preferred Width:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColumnProperties_PreferredWidth_InvalidNumberMessage">
            <summary>
              Looks up a localized string similar to Enter number..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColumnProperties_PreferredWidth_InvalidNumberMessageHeader">
            <summary>
              Looks up a localized string similar to Column width.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColumnProperties_PreviousColumn">
            <summary>
              Looks up a localized string similar to Previous Column.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ColumnProperties_Size">
            <summary>
              Looks up a localized string similar to Size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Clipboard_Copy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Clipboard_Cut">
            <summary>
              Looks up a localized string similar to Cut.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Clipboard_Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Field_ToggleFieldCodes">
            <summary>
              Looks up a localized string similar to Toggle Field Codes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Field_UpdateField">
            <summary>
              Looks up a localized string similar to Update Field.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_FloatingBlock_BehindText">
            <summary>
              Looks up a localized string similar to Behind Text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_FloatingBlock_InFrontOfText">
            <summary>
              Looks up a localized string similar to In Front of Text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_FloatingBlock_InLineWithText">
            <summary>
              Looks up a localized string similar to In Line with Text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_FloatingBlock_MoreLayoutOptions">
            <summary>
              Looks up a localized string similar to More Layout Options.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_FloatingBlock_Square">
            <summary>
              Looks up a localized string similar to Square.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_FloatingBlock_TextWrapping">
            <summary>
              Looks up a localized string similar to Text Wrapping.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_FloatingBlock_TopAndBottom">
            <summary>
              Looks up a localized string similar to Top and Bottom.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_HeaderFooter_EditFooter">
            <summary>
              Looks up a localized string similar to Edit Footer.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_HeaderFooter_EditHeader">
            <summary>
              Looks up a localized string similar to Edit Header.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Hyperlink_CopyHyperlink">
            <summary>
              Looks up a localized string similar to Copy Hyperlink.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Hyperlink_OpenHyperlink">
            <summary>
              Looks up a localized string similar to Open Hyperlink.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Hyperlink_RemoveHyperlink">
            <summary>
              Looks up a localized string similar to Remove Hyperlink.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Hyperlink_SelectHyperlink">
            <summary>
              Looks up a localized string similar to Select Hyperlink.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Hyperlink_ShowEditHyperlinkPropertiesDialog">
            <summary>
              Looks up a localized string similar to Edit Hyperlink....
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Hyperlink_ShowHyperlinkPropertiesDialog">
            <summary>
              Looks up a localized string similar to Hyperlink....
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Image_EditImage">
            <summary>
              Looks up a localized string similar to Edit Image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_SpellChecker_AddingWordsNotAvailable">
            <summary>
              Looks up a localized string similar to Adding words is not available at the moment..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_SpellChecker_AddToDictionary">
            <summary>
              Looks up a localized string similar to Add to Dictionary.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_SpellChecker_IgnoreWord">
            <summary>
              Looks up a localized string similar to Ignore.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_SpellChecker_NoSpellingSuggestions">
            <summary>
              Looks up a localized string similar to (No Spelling Suggestions).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_SpellChecker_ShowSpellCheckingDialog">
            <summary>
              Looks up a localized string similar to Spelling....
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_AutoFit">
            <summary>
              Looks up a localized string similar to AutoFit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_AutoFitToWindow">
            <summary>
              Looks up a localized string similar to AutoFit to Window.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_CellAlignment">
            <summary>
              Looks up a localized string similar to Cell Alignment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_DeleteColumn">
            <summary>
              Looks up a localized string similar to Delete Column.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_DeleteRow">
            <summary>
              Looks up a localized string similar to Delete Row.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_DeleteTable">
            <summary>
              Looks up a localized string similar to Delete Table.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_FixedColumnWidth">
            <summary>
              Looks up a localized string similar to Fixed Column Width.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_Insert">
            <summary>
              Looks up a localized string similar to Insert.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_InsertColumnToTheLeft">
            <summary>
              Looks up a localized string similar to Insert Column to the Left.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_InsertColumnToTheRight">
            <summary>
              Looks up a localized string similar to Insert Column to the Right.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_InsertRowAbove">
            <summary>
              Looks up a localized string similar to Insert Row Above.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_InsertRowBelow">
            <summary>
              Looks up a localized string similar to Insert Row Below.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_MergeCells">
            <summary>
              Looks up a localized string similar to Merge Cells.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_Select">
            <summary>
              Looks up a localized string similar to Select.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_SelectCell">
            <summary>
              Looks up a localized string similar to Select Cell.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_SelectColumn">
            <summary>
              Looks up a localized string similar to Select Column.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_SelectRow">
            <summary>
              Looks up a localized string similar to Select Row.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_SelectTable">
            <summary>
              Looks up a localized string similar to Select Table.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_TableBordersProperties">
            <summary>
              Looks up a localized string similar to Table Borders....
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Table_TableProperties">
            <summary>
              Looks up a localized string similar to Table Properties....
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Text_ShowFontPropertiesDialog">
            <summary>
              Looks up a localized string similar to Font....
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ContextMenu_Text_ShowParagraphPropertiesDialog">
            <summary>
              Looks up a localized string similar to Paragraph....
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_EditCustomDictionaryDialog_Add">
            <summary>
              Looks up a localized string similar to _Add.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_EditCustomDictionaryDialog_Delete">
            <summary>
              Looks up a localized string similar to Dele_te.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_EditCustomDictionaryDialog_DeleteAll">
            <summary>
              Looks up a localized string similar to Delete A_ll.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_EditCustomDictionaryDialog_DeleteAllMessage">
            <summary>
              Looks up a localized string similar to Click OK to delete all of the entries in your dictionary..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_EditCustomDictionaryDialog_DeleteAllMessageHeader">
            <summary>
              Looks up a localized string similar to Delete All.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_EditCustomDictionaryDialog_Dictionary">
            <summary>
              Looks up a localized string similar to Dictionary:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_EditCustomDictionaryDialog_Header">
            <summary>
              Looks up a localized string similar to Edit Custom Dictionary.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_EditCustomDictionaryDialog_Word">
            <summary>
              Looks up a localized string similar to Word:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FindReplaceDialog_FindNext">
            <summary>
              Looks up a localized string similar to Find Next.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FindReplaceDialog_FinishedSearching">
            <summary>
              Looks up a localized string similar to Finished searching the document..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FindReplaceDialog_Header">
            <summary>
              Looks up a localized string similar to Find/Replace.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FindReplaceDialog_MadeReplacements">
            <summary>
              Looks up a localized string similar to {0} replacements made..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FindReplaceDialog_Replace">
            <summary>
              Looks up a localized string similar to Replace.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FindReplaceDialog_ReplaceAll">
            <summary>
              Looks up a localized string similar to Replace All.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FindReplaceDialog_ReplaceWith">
            <summary>
              Looks up a localized string similar to Replace with.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FindReplaceDialog_RestartSearch">
             <summary>
               Looks up a localized string similar to The searched text was not found to the end of the document. Restart search from the beginning?
            Searched Text:&quot;{0}&quot;.
             </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FindReplaceDialog_SearchedTextNotFound">
             <summary>
               Looks up a localized string similar to The searched text was not found:
            &quot;{0}&quot;.
             </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FindReplaceDialog_TextToFind">
            <summary>
              Looks up a localized string similar to Text to find.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_Header">
            <summary>
              Looks up a localized string similar to Floating Blocks Layout.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_Position">
            <summary>
              Looks up a localized string similar to Position.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_AbsolutePosition">
            <summary>
              Looks up a localized string similar to Absolute position.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_Alignment">
            <summary>
              Looks up a localized string similar to Alignment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_AllowOverlap">
            <summary>
              Looks up a localized string similar to Allow overlap.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_Below">
            <summary>
              Looks up a localized string similar to below.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_Center">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_Horizontal">
            <summary>
              Looks up a localized string similar to Horizontal.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_HorizontalRelativeFrom_LeftMargin">
            <summary>
              Looks up a localized string similar to LeftMargin.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_HorizontalRelativeFrom_Margin">
            <summary>
              Looks up a localized string similar to Margin.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_HorizontalRelativeFrom_Page">
            <summary>
              Looks up a localized string similar to Page.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_HorizontalRelativeFrom_Paragraph">
            <summary>
              Looks up a localized string similar to Paragraph.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_HorizontalRelativeFrom_RightMargin">
            <summary>
              Looks up a localized string similar to RightMargin.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_Options">
            <summary>
              Looks up a localized string similar to Options.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_RadHorizontalAlignment_Center">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_RadHorizontalAlignment_Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_RadHorizontalAlignment_Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_RadVerticalAlignment_Bottom">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_RadVerticalAlignment_Center">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_RadVerticalAlignment_Top">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_RelativeTo">
            <summary>
              Looks up a localized string similar to relative to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_ToTheRightOf">
            <summary>
              Looks up a localized string similar to to the right of.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_Vertical">
            <summary>
              Looks up a localized string similar to Vertical.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_VerticalRelativeFrom_BottomMargin">
            <summary>
              Looks up a localized string similar to BottomMargin.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_VerticalRelativeFrom_Margin">
            <summary>
              Looks up a localized string similar to Margin.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_VerticalRelativeFrom_Page">
            <summary>
              Looks up a localized string similar to Page.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_VerticalRelativeFrom_Paragraph">
            <summary>
              Looks up a localized string similar to Paragraph.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_PositionProperties_VerticalRelativeFrom_TopMargin">
            <summary>
              Looks up a localized string similar to TopMargin.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrapping">
            <summary>
              Looks up a localized string similar to TextWrapping.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_BehindText">
            <summary>
              Looks up a localized string similar to Behind Text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_BothSides">
            <summary>
              Looks up a localized string similar to Both sides.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_Bottom">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_DistanceFromText">
            <summary>
              Looks up a localized string similar to Distance from text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_InFrontOfText">
            <summary>
              Looks up a localized string similar to In front of text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_InLineWithText">
            <summary>
              Looks up a localized string similar to In line with text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_LeftOnly">
            <summary>
              Looks up a localized string similar to Left only.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_RightOnly">
            <summary>
              Looks up a localized string similar to Right only.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_Square">
            <summary>
              Looks up a localized string similar to Square.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_Top">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_TopAndBottom">
            <summary>
              Looks up a localized string similar to Top and bottom.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_WrappingStyle">
            <summary>
              Looks up a localized string similar to Wrapping style.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FloatingBlockPropertiesDialog_TextWrappingProperties_WrapText">
            <summary>
              Looks up a localized string similar to Wrap Text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_Effects">
            <summary>
              Looks up a localized string similar to Effects:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_Effects_Strikethrough">
            <summary>
              Looks up a localized string similar to Strikethrough.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_Effects_Subscript">
            <summary>
              Looks up a localized string similar to Subscript.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_Effects_Superscript">
            <summary>
              Looks up a localized string similar to Superscript.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_Font">
            <summary>
              Looks up a localized string similar to Font:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_FontColor">
            <summary>
              Looks up a localized string similar to Font color:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_FontStyle">
            <summary>
              Looks up a localized string similar to Font style:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_FontStyles_Bold">
            <summary>
              Looks up a localized string similar to Bold.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_FontStyles_BoldItalic">
            <summary>
              Looks up a localized string similar to Bold and Italic.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_FontStyles_Italic">
            <summary>
              Looks up a localized string similar to Italic.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_FontStyles_Regular">
            <summary>
              Looks up a localized string similar to Regular.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_Header">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_HighlightColor">
            <summary>
              Looks up a localized string similar to Highlight color:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_Size">
            <summary>
              Looks up a localized string similar to Size:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_UnderlineStyles">
            <summary>
              Looks up a localized string similar to Underline Styles.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_UnderlineStyles_DashedLine">
            <summary>
              Looks up a localized string similar to Dashed line.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_UnderlineStyles_DotDashedLine">
            <summary>
              Looks up a localized string similar to Dot-dashed line.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_UnderlineStyles_DotDotDashedLine">
            <summary>
              Looks up a localized string similar to Dot-dot-dashed line.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_UnderlineStyles_DottedLine">
            <summary>
              Looks up a localized string similar to Dotted line.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_UnderlineStyles_DoubleLine">
            <summary>
              Looks up a localized string similar to Double line.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_UnderlineStyles_Line">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_UnderlineStyles_ThickLine">
            <summary>
              Looks up a localized string similar to Thick line.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_FontPropertiesDialog_UnderlineStyles_Wave">
            <summary>
              Looks up a localized string similar to Wave.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_HeadersFooters_DefaultFooterLabel">
            <summary>
              Looks up a localized string similar to Footer.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_HeadersFooters_DefaultHeaderLabel">
            <summary>
              Looks up a localized string similar to Header.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_HeadersFooters_EvenPageFooterLabel">
            <summary>
              Looks up a localized string similar to Even Page Footer.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_HeadersFooters_EvenPageHeaderLabel">
            <summary>
              Looks up a localized string similar to Even Page Header.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_HeadersFooters_FirstPageFooterLabel">
            <summary>
              Looks up a localized string similar to First Page Footer.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_HeadersFooters_FirstPageHeaderLabel">
            <summary>
              Looks up a localized string similar to First Page Header.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_HeadersFooters_OddPageFooterLabel">
            <summary>
              Looks up a localized string similar to Odd Page Footer.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_HeadersFooters_OddPageHeaderLabel">
            <summary>
              Looks up a localized string similar to Odd Page Header.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ImageEditorDialog_Header">
            <summary>
              Looks up a localized string similar to Image Editor Dialog.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertDateTimeDialog_AvailableFormats">
            <summary>
              Looks up a localized string similar to Available Formats:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertDateTimeDialog_Header">
            <summary>
              Looks up a localized string similar to Date and Time.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertDateTimeDialog_UpdateAutomatically">
            <summary>
              Looks up a localized string similar to Update Automatically.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_Address">
            <summary>
              Looks up a localized string similar to Address:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_ExistingFrameOrWebpage">
            <summary>
              Looks up a localized string similar to Existing file or web page.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_Header">
            <summary>
              Looks up a localized string similar to Insert Hyperlink.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_InvalidAddress">
            <summary>
              Looks up a localized string similar to Invalid address.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_InvalidBookmark">
            <summary>
              Looks up a localized string similar to Please select bookmark item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_InvalidText">
            <summary>
              Looks up a localized string similar to Text should not be empty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_LinkTo">
            <summary>
              Looks up a localized string similar to Link to:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_NewWindow">
            <summary>
              Looks up a localized string similar to New window.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_PlaceInDocument">
            <summary>
              Looks up a localized string similar to Place in the document.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_SameFrame">
            <summary>
              Looks up a localized string similar to Same frame.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_SelectBookmark">
            <summary>
              Looks up a localized string similar to Select bookmark.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_SelectionInDocument">
            <summary>
              Looks up a localized string similar to &lt;&lt;Selection in Document&gt;&gt;.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_TargetFrame">
            <summary>
              Looks up a localized string similar to Target frame:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertHyperlinkDialog_TextToDisplay">
            <summary>
              Looks up a localized string similar to Text to display:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_Filter">
            <summary>
              Looks up a localized string similar to Filter:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_Font">
            <summary>
              Looks up a localized string similar to Font:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_Header">
            <summary>
              Looks up a localized string similar to Insert Symbol.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_AllSymbols">
            <summary>
              Looks up a localized string similar to All Symbols.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_ClosePunctuation">
            <summary>
              Looks up a localized string similar to Close Punctuation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_ConnectorPunctuation">
            <summary>
              Looks up a localized string similar to Connector Punctuation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_Control">
            <summary>
              Looks up a localized string similar to Control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_CurrencySymbol">
            <summary>
              Looks up a localized string similar to Currency Symbol.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_DashPunctuation">
            <summary>
              Looks up a localized string similar to Dash Punctuation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_DecimalDigitNumber">
            <summary>
              Looks up a localized string similar to Decimal Digit Number.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_EnclosingMark">
            <summary>
              Looks up a localized string similar to Enclosing Mark.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_FinalQuotePunctuation">
            <summary>
              Looks up a localized string similar to Final Quote Punctuation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_Format">
            <summary>
              Looks up a localized string similar to Format.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_InitialQuotePunctuation">
            <summary>
              Looks up a localized string similar to Initial Quote Punctuation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_LetterNumber">
            <summary>
              Looks up a localized string similar to Letter Number.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_LineSeparator">
            <summary>
              Looks up a localized string similar to Line Separator.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_LowercaseLetter">
            <summary>
              Looks up a localized string similar to Lowercase Letter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_MathSymbol">
            <summary>
              Looks up a localized string similar to Math Symbol.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_ModifierLetter">
            <summary>
              Looks up a localized string similar to Modifier Letter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_ModifierSymbol">
            <summary>
              Looks up a localized string similar to Modifier Symbol.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_NonSpacingMark">
            <summary>
              Looks up a localized string similar to Non Spacing Mark.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_OpenPunctuation">
            <summary>
              Looks up a localized string similar to Open Punctuation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_OtherLetter">
            <summary>
              Looks up a localized string similar to Other Letter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_OtherNotAssigned">
            <summary>
              Looks up a localized string similar to Other Not Assigned.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_OtherNumber">
            <summary>
              Looks up a localized string similar to Other Number.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_OtherPunctuation">
            <summary>
              Looks up a localized string similar to Other Punctuation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_OtherSymbol">
            <summary>
              Looks up a localized string similar to Other Symbol.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_ParagraphSeparator">
            <summary>
              Looks up a localized string similar to Paragraph Separator.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_PrivateUse">
            <summary>
              Looks up a localized string similar to Private Use.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_SpaceSeparator">
            <summary>
              Looks up a localized string similar to Space Separator.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_SpacingCombiningMark">
            <summary>
              Looks up a localized string similar to Spacing Combining Mark.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_Surrogate">
            <summary>
              Looks up a localized string similar to Surrogate.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_TitlecaseLetter">
            <summary>
              Looks up a localized string similar to Titlecase Letter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertSymbolDialog_UnicodeCategory_UppercaseLetter">
            <summary>
              Looks up a localized string similar to Uppercase Letter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertTableDialog_Header">
            <summary>
              Looks up a localized string similar to Insert Table.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertTableDialog_NumberMustBeBetween">
            <summary>
              Looks up a localized string similar to The number must be between {0} and {1}..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertTableDialog_NumberOfColumns">
            <summary>
              Looks up a localized string similar to Number of columns:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertTableDialog_NumberOfRows">
            <summary>
              Looks up a localized string similar to Number of rows:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_InsertTableDialog_TableSize">
            <summary>
              Looks up a localized string similar to Table size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ManageBookmarksDialog_Add">
            <summary>
              Looks up a localized string similar to Add.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ManageBookmarksDialog_BookmarkName">
            <summary>
              Looks up a localized string similar to Bookmark name:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ManageBookmarksDialog_Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ManageBookmarksDialog_GoTo">
            <summary>
              Looks up a localized string similar to Go To.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ManageBookmarksDialog_Header">
            <summary>
              Looks up a localized string similar to Bookmarks.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ManageBookmarksDialog_SortBy">
            <summary>
              Looks up a localized string similar to Sort by:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ManageBookmarksDialog_SortByLocation">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ManageBookmarksDialog_SortByName">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_OpenDocumentCommand_TheFileCannotBeOpened">
            <summary>
              Looks up a localized string similar to The file cannot be opened..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_OpenDocumentCommand_TheFileIsLocked">
            <summary>
              Looks up a localized string similar to The file cannot be opened. It might be locked by another application..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_OpenDocumentCommand_UnsupportedFileFormat">
            <summary>
              Looks up a localized string similar to Unsupported file format..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_Alignment">
            <summary>
              Looks up a localized string similar to Alignment:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_BackgroundColor">
            <summary>
              Looks up a localized string similar to Background color:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_Direction">
            <summary>
              Looks up a localized string similar to Direction:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_Direction_LeftToRight">
            <summary>
              Looks up a localized string similar to Left-to-right.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_Direction_RightToLeft">
            <summary>
              Looks up a localized string similar to Right-to-left.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_General">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_Header">
            <summary>
              Looks up a localized string similar to Paragraph Properties.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_Indentation">
            <summary>
              Looks up a localized string similar to Indentation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_LeftIndentation">
            <summary>
              Looks up a localized string similar to Left:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_LineSpacing">
            <summary>
              Looks up a localized string similar to Line spacing:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_LineSpacing_AtLeast">
            <summary>
              Looks up a localized string similar to At least.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_LineSpacing_Double">
            <summary>
              Looks up a localized string similar to Double.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_LineSpacing_Exactly">
            <summary>
              Looks up a localized string similar to Exactly.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_LineSpacing_LineAndAHalf">
            <summary>
              Looks up a localized string similar to 1.5 lines.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_LineSpacing_Multiple">
            <summary>
              Looks up a localized string similar to Multiple.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_LineSpacing_Single">
            <summary>
              Looks up a localized string similar to Single.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_LineSpacingAt">
            <summary>
              Looks up a localized string similar to At:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_RightIndentation">
            <summary>
              Looks up a localized string similar to Right:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_Spacing">
            <summary>
              Looks up a localized string similar to Spacing.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_SpacingAfter">
            <summary>
              Looks up a localized string similar to After:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_SpacingBefore">
            <summary>
              Looks up a localized string similar to Before:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_TextAlignment_Center">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_TextAlignment_Justify">
            <summary>
              Looks up a localized string similar to Justify.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_TextAlignment_Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_ParagraphPropertiesDialog_TextAlignment_Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_RadRichTextBox_ContinueToNextCommentFromBeginningOfDocument">
            <summary>
              Looks up a localized string similar to Do you want to continue searching from the beginning of the document?.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_RadRichTextBox_ContinueToPreviousCommentFromEndOfDocument">
            <summary>
              Looks up a localized string similar to Do you want to continue searching from the end of the document?.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_RadRichTextBox_FinishedSpellChecking">
            <summary>
              Looks up a localized string similar to Finished spell checking..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_RadRichTextBox_HtmlPrintPreview_Close">
            <summary>
              Looks up a localized string similar to Close .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_RadRichTextBox_HtmlPrintPreview_Print">
            <summary>
              Looks up a localized string similar to Print.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_RadRichTextBox_HyperlinkToolTipFormatString">
             <summary>
               Looks up a localized string similar to {0}
            {1} to follow link.
             </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_SaveCommand_UnableToSaveFile">
            <summary>
              Looks up a localized string similar to Unable to save the file..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_SaveCommand_UnsupportedFileFormat">
            <summary>
              Looks up a localized string similar to Unsupported file format..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_SpellCheckingDialog_AddToDictionary">
            <summary>
              Looks up a localized string similar to Add to Dictionary.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_SpellCheckingDialog_Change">
            <summary>
              Looks up a localized string similar to Change.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_SpellCheckingDialog_ChangeTo">
            <summary>
              Looks up a localized string similar to Change To:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_SpellCheckingDialog_EditCustomDictionary">
            <summary>
              Looks up a localized string similar to Edit Custom Dictionary....
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_SpellCheckingDialog_Header">
            <summary>
              Looks up a localized string similar to Spell checking.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_SpellCheckingDialog_IgnoreAll">
            <summary>
              Looks up a localized string similar to Ignore All.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_SpellCheckingDialog_NotInDictionary">
            <summary>
              Looks up a localized string similar to Not in Dictionary:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_SpellCheckingDialog_SpellingCheckIsComplete">
            <summary>
              Looks up a localized string similar to The spelling check is complete..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_SpellCheckingDialog_Suggestions">
            <summary>
              Looks up a localized string similar to Suggestions:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableAndCellPadding_AllTheSame">
            <summary>
              Looks up a localized string similar to Same for all sides.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableAndCellPadding_Bottom">
            <summary>
              Looks up a localized string similar to Bottom:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableAndCellPadding_Left">
            <summary>
              Looks up a localized string similar to Left:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableAndCellPadding_Right">
            <summary>
              Looks up a localized string similar to Right:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableAndCellPadding_Top">
            <summary>
              Looks up a localized string similar to Top:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorders_All">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorders_ApplyBordersText">
            <summary>
              Looks up a localized string similar to Click on the image or use the buttons to apply borders.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorders_Box">
            <summary>
              Looks up a localized string similar to Box.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorders_Custom">
            <summary>
              Looks up a localized string similar to Custom.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorders_Grid">
            <summary>
              Looks up a localized string similar to Grid.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorders_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorders_Setting">
            <summary>
              Looks up a localized string similar to Setting:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBordersDialog_CellBorders">
            <summary>
              Looks up a localized string similar to Cell Borders.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBordersDialog_Header">
            <summary>
              Looks up a localized string similar to Table Properties.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBordersDialog_TableBorders">
            <summary>
              Looks up a localized string similar to Table Borders.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorderSelector_AutomaticColorName">
            <summary>
              Looks up a localized string similar to Automatic.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorderSelector_Color">
            <summary>
              Looks up a localized string similar to Color:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorderSelector_Preview">
            <summary>
              Looks up a localized string similar to Preview:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorderSelector_Style">
            <summary>
              Looks up a localized string similar to Style:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableBorderSelector_Width">
            <summary>
              Looks up a localized string similar to Width:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellBorders_ApplyBordersText">
            <summary>
              Looks up a localized string similar to Click on the image or use the buttons to apply borders.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellBorders_Box">
            <summary>
              Looks up a localized string similar to Box.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellBorders_Custom">
            <summary>
              Looks up a localized string similar to Custom.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellBorders_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellBorders_Setting">
            <summary>
              Looks up a localized string similar to Setting:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_Background">
            <summary>
              Looks up a localized string similar to Background.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_CellPaddings">
            <summary>
              Looks up a localized string similar to Cell Paddings.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_Color">
            <summary>
              Looks up a localized string similar to Color:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_TextAlignment">
            <summary>
              Looks up a localized string similar to TextAlignment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_TextAlignment_Center">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_TextAlignment_Justified">
            <summary>
              Looks up a localized string similar to Justified.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_TextAlignment_Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_TextAlignment_Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_VerticalAlignment">
            <summary>
              Looks up a localized string similar to Vertical Alignment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_VerticalAlignment_Bottom">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_VerticalAlignment_Middle">
            <summary>
              Looks up a localized string similar to Middle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableCellProperties_VerticalAlignment_Top">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableProperties_DefaultCellPaddings">
            <summary>
              Looks up a localized string similar to Default cell paddings.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableProperties_DefaultCellSpacing">
            <summary>
              Looks up a localized string similar to Default cell spacing.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableProperties_Size">
            <summary>
              Looks up a localized string similar to Size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableProperties_SpacingBetweenCells">
            <summary>
              Looks up a localized string similar to Spacing between cells:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableProperties_TableDirection">
            <summary>
              Looks up a localized string similar to Table direction.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableProperties_TableDirection_LeftToRight">
            <summary>
              Looks up a localized string similar to Left-to-right.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableProperties_TableDirection_RightToLeft">
            <summary>
              Looks up a localized string similar to Right-to-left.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TablePropertiesDialog_Cell">
            <summary>
              Looks up a localized string similar to Cell.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TablePropertiesDialog_Column">
            <summary>
              Looks up a localized string similar to Column.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TablePropertiesDialog_Header">
            <summary>
              Looks up a localized string similar to Table Properties.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TablePropertiesDialog_Table">
            <summary>
              Looks up a localized string similar to Table.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableSizePicker_InsertTable">
            <summary>
              Looks up a localized string similar to Insert Table.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Documents_TableSizePicker_TableSize">
            <summary>
              Looks up a localized string similar to {0}x{1} Table.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Drag_Appointment">
            <summary>
              Looks up a localized string similar to Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Drag_NumberOfAppointments">
            <summary>
              Looks up a localized string similar to {0} Appointments.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DragDropMissingAdornerLayer">
            <summary>
              Looks up a localized string similar to Root AdornerLayer Not Found. Please make sure that your root visual is Window or other element that has an adorner layer. Alternatively, wrap your root panel in an &lt;AdornerDecorator&gt; element..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DragDropOccurrence">
            <summary>
              Looks up a localized string similar to Edit only the selected occurrence(s).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DragDropSeries">
            <summary>
              Looks up a localized string similar to Drag the series.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DragRecurringItemQuestion">
            <summary>
              Looks up a localized string similar to  is a recurring appointment. Do you want to drag only the selected occurrence(s) or the series?.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationColon">
            <summary>
              Looks up a localized string similar to D_uration.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationDay">
            <summary>
              Looks up a localized string similar to day.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationDays">
            <summary>
              Looks up a localized string similar to days.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationHour">
            <summary>
              Looks up a localized string similar to hour.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationHours">
            <summary>
              Looks up a localized string similar to hours.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationMinute">
            <summary>
              Looks up a localized string similar to minute.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationMinutes">
            <summary>
              Looks up a localized string similar to minutes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationWeek">
            <summary>
              Looks up a localized string similar to week.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationWeeks">
            <summary>
              Looks up a localized string similar to weeks.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EditAppointment">
            <summary>
              Looks up a localized string similar to Edit Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EditImage">
            <summary>
              Looks up a localized string similar to Edit Image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EditParentAppointment">
            <summary>
              Looks up a localized string similar to Edit Parent Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EditRecurrence">
            <summary>
              Looks up a localized string similar to Edit Recurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EditRecurrenceCommandText">
            <summary>
              Looks up a localized string similar to Edit _Recurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EditRecurrenceRule">
            <summary>
              Looks up a localized string similar to Edit recurrence rule.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EndAfter">
            <summary>
              Looks up a localized string similar to End a_fter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EndBy">
            <summary>
              Looks up a localized string similar to End _by.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EndColon">
            <summary>
              Looks up a localized string similar to E_nd.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EndDateBeforeStart">
            <summary>
              Looks up a localized string similar to The end date you entered occurs before the start date.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EndTime">
            <summary>
              Looks up a localized string similar to End time.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EnterDate">
            <summary>
              Looks up a localized string similar to Enter date.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Event">
            <summary>
              Looks up a localized string similar to Event.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Every">
            <summary>
              Looks up a localized string similar to E_very.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EveryDay">
            <summary>
              Looks up a localized string similar to day.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EveryWeekday">
            <summary>
              Looks up a localized string similar to Every wee_kday.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderClickMode">
            <summary>
              Looks up a localized string similar to Use this property to read and initialize when expander will expand. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderDecoratorTemplate">
            <summary>
              Looks up a localized string similar to Gets or sets a ControlTemplate used to customize the Expander-decorator item. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderExpandDirection">
            <summary>
              Looks up a localized string similar to This property determines the expand direction of the control. There are four options: Down, Up, Right and Left. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderHeaderControlTemplate">
            <summary>
              Looks up a localized string similar to Gets or sets a ControlTemplate used to customize the whole Header part of the Expander. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderHorizontalHeaderAlignment">
            <summary>
              Looks up a localized string similar to HorizontalHeaderAlignment determines the horizontal alignment of the Header. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderIsAnimated">
            <summary>
              Looks up a localized string similar to Use this property to permit the animation of the expander&apos;s content. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderIsExpanded">
            <summary>
              Looks up a localized string similar to Use this property to read and initialize expand and collapse states of the Expander. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderTemplateDown">
            <summary>
              Looks up a localized string similar to Expander will use the template from this property if it is initialized. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderTemplateLeft">
            <summary>
              Looks up a localized string similar to Expander will use the template from this property if it is initialized. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderTemplateRight">
            <summary>
              Looks up a localized string similar to Expander will use the template from this property if it is initialized. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderTemplateUp">
            <summary>
              Looks up a localized string similar to Expander will use the template from this property if it is initialized. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderVerticalHeaderAlignment">
            <summary>
              Looks up a localized string similar to VerticalHeaderAlignment determines the vertical alignment of the Header. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpandHierarchyItem">
            <summary>
              Looks up a localized string similar to Expand.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpressionEditor_InsertTextCommand_Description">
            <summary>
              Looks up a localized string similar to Insert text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExtendSelectionToCurrentUnit">
            <summary>
              Looks up a localized string similar to Extends selection to current unit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterAnd">
            <summary>
              Looks up a localized string similar to And.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterContains">
            <summary>
              Looks up a localized string similar to Contains.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterDoesNotContain">
            <summary>
              Looks up a localized string similar to Does not contain.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterEndsWith">
            <summary>
              Looks up a localized string similar to Ends with.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterIsContainedIn">
            <summary>
              Looks up a localized string similar to Is contained in.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterIsEqualTo">
            <summary>
              Looks up a localized string similar to Is equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterIsGreaterThan">
            <summary>
              Looks up a localized string similar to Is greater than.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterIsGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Is greater than or equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterIsLessThan">
            <summary>
              Looks up a localized string similar to Is less than.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterIsLessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Is less than or equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterIsNotContainedIn">
            <summary>
              Looks up a localized string similar to Is not contained in.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterIsNotEqualTo">
            <summary>
              Looks up a localized string similar to Is not equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterMatchCase">
            <summary>
              Looks up a localized string similar to Match case.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterOr">
            <summary>
              Looks up a localized string similar to Or.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.FilterStartsWith">
            <summary>
              Looks up a localized string similar to Starts with.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.First">
            <summary>
              Looks up a localized string similar to first.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Floating">
            <summary>
              Looks up a localized string similar to Floating.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Fourth">
            <summary>
              Looks up a localized string similar to fourth.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Free">
            <summary>
              Looks up a localized string similar to Free.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewAlwaysVisibleNewRow">
            <summary>
              Looks up a localized string similar to Click here to add new item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewClearFilter">
            <summary>
              Looks up a localized string similar to Clear Filter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilter">
            <summary>
              Looks up a localized string similar to Filter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterAnd">
            <summary>
              Looks up a localized string similar to And.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterContains">
            <summary>
              Looks up a localized string similar to Contains.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterDoesNotContain">
            <summary>
              Looks up a localized string similar to Does not contain.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterEndsWith">
            <summary>
              Looks up a localized string similar to Ends with.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsContainedIn">
            <summary>
              Looks up a localized string similar to Is contained in.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsEqualTo">
            <summary>
              Looks up a localized string similar to Is equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsGreaterThan">
            <summary>
              Looks up a localized string similar to Is greater than.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Is greater than or equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsLessThan">
            <summary>
              Looks up a localized string similar to Is less than.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsLessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Is less than or equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsNotContainedIn">
            <summary>
              Looks up a localized string similar to Is not contained in.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsNotEqualTo">
            <summary>
              Looks up a localized string similar to Is not equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterMatchCase">
            <summary>
              Looks up a localized string similar to Match case.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterOr">
            <summary>
              Looks up a localized string similar to Or.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterSelectAll">
            <summary>
              Looks up a localized string similar to Select All.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterShowRowsWithValueThat">
            <summary>
              Looks up a localized string similar to Show rows with value that.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterStartsWith">
            <summary>
              Looks up a localized string similar to Starts with.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewGroupPanelText">
            <summary>
              Looks up a localized string similar to Drag a column header and drop it here to group by that column.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewGroupPanelTopText">
            <summary>
              Looks up a localized string similar to Group Header.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewGroupPanelTopTextGrouped">
            <summary>
              Looks up a localized string similar to Grouped by:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.HeaderContentControl_Header_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the header of the control..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.HeaderedContentControl_HeaderTemplate_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the data template for the header..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.HeaderedContnetControl_OnHasHeaderChanged">
            <summary>
              Looks up a localized string similar to HasHeader is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.HeaderedItemsControlHeaderDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the item that labels the control. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Hide">
            <summary>
              Looks up a localized string similar to Hide.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.HighImportance">
            <summary>
              Looks up a localized string similar to High Importance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.HtmlPlaceholderWindowlessMessage">
            <summary>
              Looks up a localized string similar to RadHtmlPlaceholder design time content. Please make sure that the &quot;Windowless&quot; parameter of the Silverlight application is set to &quot;True&quot;..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Adjust">
            <summary>
              Looks up a localized string similar to Adjust.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Amount">
            <summary>
              Looks up a localized string similar to Amount.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Background">
            <summary>
              Looks up a localized string similar to Background:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_BorderColor">
            <summary>
              Looks up a localized string similar to Border Color:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_BorderThickness">
            <summary>
              Looks up a localized string similar to Border Thickness:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_CanvasResize">
            <summary>
              Looks up a localized string similar to Canvas Resize.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_CanvasSize">
            <summary>
              Looks up a localized string similar to Canvas Size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Crop">
            <summary>
              Looks up a localized string similar to Crop.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Effect_Blur">
            <summary>
              Looks up a localized string similar to Blur.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Effect_Brightness">
            <summary>
              Looks up a localized string similar to Brightness.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Effect_ContrastAdjust">
            <summary>
              Looks up a localized string similar to Contrast.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Effect_HueShift">
            <summary>
              Looks up a localized string similar to Hue Shift.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Effect_InvertColors">
            <summary>
              Looks up a localized string similar to Invert Colors.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Effect_Saturation">
            <summary>
              Looks up a localized string similar to Saturation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Effect_Sharpen">
            <summary>
              Looks up a localized string similar to Sharpen.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Effects">
            <summary>
              Looks up a localized string similar to Effects.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_FlipHorizontal">
            <summary>
              Looks up a localized string similar to Flip Horizontal.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_FlipVertical">
            <summary>
              Looks up a localized string similar to Flip Vertical.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Height">
            <summary>
              Looks up a localized string similar to Height:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_ImageAlignment">
            <summary>
              Looks up a localized string similar to Image Alignment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_ImagePreview">
            <summary>
              Looks up a localized string similar to Image Preview.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_ImageSize">
            <summary>
              Looks up a localized string similar to Image Size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Options">
            <summary>
              Looks up a localized string similar to Options.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_PreserveAspectRatio">
            <summary>
              Looks up a localized string similar to Preserve Aspect Ratio.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Radius">
            <summary>
              Looks up a localized string similar to Radius:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_RelativeSize">
            <summary>
              Looks up a localized string similar to Relative Size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Resize">
            <summary>
              Looks up a localized string similar to Resize.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Rotate180">
            <summary>
              Looks up a localized string similar to Rotate 180°.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Rotate270">
            <summary>
              Looks up a localized string similar to Rotate 270°.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Rotate90">
            <summary>
              Looks up a localized string similar to Rotate 90°.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_RoundCorners">
            <summary>
              Looks up a localized string similar to Round Corners.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_TheFileCannotBeOpened">
            <summary>
              Looks up a localized string similar to The file cannot be opened..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_TheFileIsLocked">
            <summary>
              Looks up a localized string similar to The file cannot be opened. It might be locked by another application..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Transform">
            <summary>
              Looks up a localized string similar to Transform.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_UnableToSaveFile">
            <summary>
              Looks up a localized string similar to Unable to save the file..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_UnsupportedFileFormat">
            <summary>
              Looks up a localized string similar to Unsupported file format..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ImageEditor_Width">
            <summary>
              Looks up a localized string similar to Width:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.InvalidRecurrenceRuleMessage">
            <summary>
              Looks up a localized string similar to The Recurrence pattern is not valid..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.InvalidRecurrenceRuleTitle">
            <summary>
              Looks up a localized string similar to Invalid pattern.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsControlIsTextSearchEnabled">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether TextSearch is enabled on the ItemsControl instance..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsControlItemContainerStyleDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style for the item containers of the control. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsControlTextAlignmentDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the alignment of text in the control. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsControlTextDecorationsDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the decorations of the text for the items control. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsControlTextWrappingDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the text wrapping behaviour for the control. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsSourceInUse">
            <summary>
              Looks up a localized string similar to Operation is not valid while ItemsSource is in use. Access and modify elements with ItemsControl.ItemsSource instead..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Last">
            <summary>
              Looks up a localized string similar to last.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.LayoutCategory">
            <summary>
              Looks up a localized string similar to Layout.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.LowImportance">
            <summary>
              Looks up a localized string similar to Low Importance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapAerialCommand">
            <summary>
              Looks up a localized string similar to Aerial View.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapBirdseyeCommand">
            <summary>
              Looks up a localized string similar to Bird&apos;s Eye View.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapEastChar">
            <summary>
              Looks up a localized string similar to E.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapLabelsVisibleCommand">
            <summary>
              Looks up a localized string similar to Show Labels.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapMapScaleKilometerFormat">
            <summary>
              Looks up a localized string similar to {0} km.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapMapScaleMeterFormat">
            <summary>
              Looks up a localized string similar to {0} m.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapMapScaleMileFormat">
            <summary>
              Looks up a localized string similar to {0} ml.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapNorthChar">
            <summary>
              Looks up a localized string similar to N.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapPresetZoomLevelCity">
            <summary>
              Looks up a localized string similar to City.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapPresetZoomLevelNeighborhood">
            <summary>
              Looks up a localized string similar to Neighborhood.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapPresetZoomLevelRegion">
            <summary>
              Looks up a localized string similar to Region.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapPresetZoomLevelState">
            <summary>
              Looks up a localized string similar to State.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapPresetZoomLevelWorld">
            <summary>
              Looks up a localized string similar to World.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapRoadCommand">
            <summary>
              Looks up a localized string similar to Road View.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapSouthChar">
            <summary>
              Looks up a localized string similar to S.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MapWestChar">
            <summary>
              Looks up a localized string similar to W.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MaskedInputErrorMessageInvalid">
            <summary>
              Looks up a localized string similar to Invalid input.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MaskedInputErrorMessageRequired">
            <summary>
              Looks up a localized string similar to Required input.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MaskedInputErrorMessageValidation">
            <summary>
              Looks up a localized string similar to Validation error.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Maximize">
            <summary>
              Looks up a localized string similar to Maximize.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTimeStatusSeparator">
            <summary>
              Looks up a localized string similar to /.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipMute">
            <summary>
              Looks up a localized string similar to Mute.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipNextChapter">
            <summary>
              Looks up a localized string similar to Next Chapter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipPlay">
            <summary>
              Looks up a localized string similar to Play.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipPlaylist">
            <summary>
              Looks up a localized string similar to Toggle Play list.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipPreviousChapter">
            <summary>
              Looks up a localized string similar to Previous Chapter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipStop">
            <summary>
              Looks up a localized string similar to Stop.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipTitle">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipVolume">
            <summary>
              Looks up a localized string similar to Volume.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Minimize">
            <summary>
              Looks up a localized string similar to Minimize.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MiscCategory">
            <summary>
              Looks up a localized string similar to Misc.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Month">
            <summary>
              Looks up a localized string similar to _Month.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Monthly">
            <summary>
              Looks up a localized string similar to _Monthly.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Months">
            <summary>
              Looks up a localized string similar to month(s).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MoveBottom">
            <summary>
              Looks up a localized string similar to Move Bottom.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MoveDown">
            <summary>
              Looks up a localized string similar to Move Down.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MoveEnd">
            <summary>
              Looks up a localized string similar to Move End.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MoveFirst">
            <summary>
              Looks up a localized string similar to Move First.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MoveHome">
            <summary>
              Looks up a localized string similar to Move Home.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MoveLast">
            <summary>
              Looks up a localized string similar to Move Last.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MoveLeft">
            <summary>
              Looks up a localized string similar to Move Left.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MoveNext">
            <summary>
              Looks up a localized string similar to Move Next.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MovePageDown">
            <summary>
              Looks up a localized string similar to Move PageDown.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MovePageUp">
            <summary>
              Looks up a localized string similar to Move PageUp.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MovePrevious">
            <summary>
              Looks up a localized string similar to Move Previous.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MoveRight">
            <summary>
              Looks up a localized string similar to Move Right.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MoveTop">
            <summary>
              Looks up a localized string similar to Move Top.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MoveUp">
            <summary>
              Looks up a localized string similar to Move Up.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NextAppointment">
            <summary>
              Looks up a localized string similar to Next Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NoEndDate">
            <summary>
              Looks up a localized string similar to N_o end date.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NotAllowedEditorSettings">
            <summary>
              Looks up a localized string similar to Editor settings type should be a type of class which implements the IEditorSettings interface..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Occurrences">
            <summary>
              Looks up a localized string similar to occurrences.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Of">
            <summary>
              Looks up a localized string similar to of.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OfEvery">
            <summary>
              Looks up a localized string similar to of every.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Ok">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OpenOccurrence">
            <summary>
              Looks up a localized string similar to Open this _occurrence. .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OpenRecurringItem">
            <summary>
              Looks up a localized string similar to Open Recurring Item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OpenRecurringItemQuestion">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; is a recurring appointment. Do you want to open only this occurrence or the series?.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OpenSeries">
            <summary>
              Looks up a localized string similar to Open the _series..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OutlookBarConfigureButtons">
            <summary>
              Looks up a localized string similar to Configure buttons.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OutlookBarHorizontalSplitter">
            <summary>
              Looks up a localized string similar to Start dragging in order to change items&apos; position.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OutOfOffice">
            <summary>
              Looks up a localized string similar to Out Of Office.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarExpandModePropertyDescription">
            <summary>
              Looks up a localized string similar to Identifies the ExpandMode dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarIsSelectedPropertyDescription">
            <summary>
              Looks up a localized string similar to Specifies whether an item is selected or not..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarItemOnApplyTemplateInvalidOperation">
            <summary>
              Looks up a localized string similar to RadPanelBarItem objects should have a parent of type RadPanelBar!.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarItemOnApplyTemplateInvalidOperation1">
            <summary>
              Looks up a localized string similar to RadPanelBarItem objects should have a parent of type RadPanelBar!.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarSecondLevelTemplatePropertyDescription">
            <summary>
              Looks up a localized string similar to Specifies the control template for second-level items..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarSelectedValuePathPropertyDescription">
            <summary>
              Looks up a localized string similar to Identifies the SelectedValuePath dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarTopLevelTemplatePropertyDescription">
            <summary>
              Looks up a localized string similar to Specifies the control template for top-level items..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PopupIndexOutOfRange">
            <summary>
              Looks up a localized string similar to Popup index must be between {0} and {1}..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PreviousAppointment">
            <summary>
              Looks up a localized string similar to Previous Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Quarter">
            <summary>
              Looks up a localized string similar to Quarter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.QuarterShort">
            <summary>
              Looks up a localized string similar to Q.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RadDataPagerEllipsisString">
            <summary>
              Looks up a localized string similar to ....
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RadDataPagerOf">
            <summary>
              Looks up a localized string similar to of.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RadDataPagerPage">
            <summary>
              Looks up a localized string similar to Page.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RangeOfRecurrence">
            <summary>
              Looks up a localized string similar to Range of recurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RecurEvery">
            <summary>
              Looks up a localized string similar to Re_cur every.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RecurrencePattern">
            <summary>
              Looks up a localized string similar to Recurrence pattern.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RemoveRecurrence">
            <summary>
              Looks up a localized string similar to Remove Recurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Reset">
            <summary>
              Looks up a localized string similar to Reset.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ResetAll">
            <summary>
              Looks up a localized string similar to Reset All.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ResizeOccurrence">
            <summary>
              Looks up a localized string similar to Resize only the selected occurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ResizeRecurringItemQuestion">
            <summary>
              Looks up a localized string similar to  is a recurring appointment. Do you want to resize only the selected occurrence or the series?.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ResizeSeries">
            <summary>
              Looks up a localized string similar to Resize the series.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ResourceEditingMessage">
            <summary>
              Looks up a localized string similar to You can only change the resources by opening the series.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Restore">
            <summary>
              Looks up a localized string similar to Restore.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RestoreOriginalOccurrence">
            <summary>
              Looks up a localized string similar to Restore Original Occurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RibbonBarGalleryButtonMore">
            <summary>
              Looks up a localized string similar to More.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RibbonBarGalleryButtonUpDown">
            <summary>
              Looks up a localized string similar to Row .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RibbonBarQATCustomize">
            <summary>
              Looks up a localized string similar to Customize Quick Access Tool bar.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RibbonBarQATMinimize">
            <summary>
              Looks up a localized string similar to Minimize the Ribbon.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RibbonBarQATShowAbove">
            <summary>
              Looks up a localized string similar to Show above the Ribbon.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RibbonBarQATShowBelow">
            <summary>
              Looks up a localized string similar to Show below the Ribbon.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RibbonBarWindowTitleDivider">
            <summary>
              Looks up a localized string similar to  - .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SaveAndClose">
            <summary>
              Looks up a localized string similar to Save and Close.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SaveAndCloseCommandText">
            <summary>
              Looks up a localized string similar to _Save &amp; Close.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SaveAppointment">
            <summary>
              Looks up a localized string similar to Save Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SaveRecurrence">
            <summary>
              Looks up a localized string similar to Save Recurrence Rule.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Search">
            <summary>
              Looks up a localized string similar to Search.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Second">
            <summary>
              Looks up a localized string similar to second.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SelectCurrentItem">
            <summary>
              Looks up a localized string similar to Select Current Item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SelectCurrentUnit">
            <summary>
              Looks up a localized string similar to Select the current unit.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SelectViewDefinition">
            <summary>
              Looks up a localized string similar to Please select a View definition.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SetDayViewMode">
            <summary>
              Looks up a localized string similar to Sets the scheduler&apos;s view mode to day.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SetMonthViewMode">
            <summary>
              Looks up a localized string similar to Sets the scheduler&apos;s view mode to month.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SetTimelineViewMode">
            <summary>
              Looks up a localized string similar to Sets the scheduler&apos;s view mode to timeline.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SetWeekViewMode">
            <summary>
              Looks up a localized string similar to Sets the scheduler&apos;s view mode to week.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ShowAs">
            <summary>
              Looks up a localized string similar to Show As.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SpellChecker_CellValidatingMessage">
            <summary>
              Looks up a localized string similar to Spell checking.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SpellChecker_SpellingCheckIsCompleteMessage">
            <summary>
              Looks up a localized string similar to The spelling check is complete..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SpellChecker_SpellingCheckIsCompleteMessageHeader">
            <summary>
              Looks up a localized string similar to Spell checking.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Start">
            <summary>
              Looks up a localized string similar to Start:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.StartColon">
            <summary>
              Looks up a localized string similar to S_tart.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.StartTime">
            <summary>
              Looks up a localized string similar to Start time.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.String1">
            <summary>
              Looks up a localized string similar to Invalid value for WindowClose enum..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.String3">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Subject">
            <summary>
              Looks up a localized string similar to Subject.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Tabbed_document">
            <summary>
              Looks up a localized string similar to Tabbed document.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_Align_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the align of the TabItems - Left, Right, Center, Justify. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_AllTabsEqualHeight_Description">
            <summary>
              Looks up a localized string similar to Gets or sets whether all the present tabs have equal height. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_BackgroundOpacity_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the opacity of the Background of the TabControl..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_ContentTemplate_Description">
            <summary>
              Looks up a localized string similar to Gets the content template to use for displaying the content of the items..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_OnSelectedContentChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to SelectedContent is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_OnSelectedContentTemplateChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to SelectedContentTemplate is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_Orientation_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the orientation of the TabItems in the TabStrip. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_Position_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the Position of the TabStrip with regard to the content. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_ReorderTabRows_Description">
            <summary>
              Looks up a localized string similar to Gets or sets whether the TabItem rows should be reordered when selected. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_SelectedIndex_Description">
            <summary>
              Looks up a localized string similar to &quot;Gets or sets the index of the selected item. The default value is -1 which means that no item is selected. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_SelectedTab_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the currently selected tab. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControlBottomTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabControl when the TabStripPlacement is set to Bottom. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControlLeftTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabControl when the TabStripPlacement is set to LeftThis is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControlRightTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabControl when the TabStripPlacement is set to RightThis is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControlTopTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabControl when the TabStripPlacement is set to Top. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItem_OnIndexChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to Index is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItem_OnIsMouseOverChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to IsMouseOver is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItem_OnIsSelectedChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to IsSelected is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItemBottomTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabItem when the TabStripPlacement is set to Bottom. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItemLeftTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabItem when the TabStripPlacement is set to Left. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItemRightTemplateDescription3">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabItem when the TabStripPlacement is set to Right. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItemTopTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabItem when the TabStripPlacement is set to Top. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Tentative">
            <summary>
              Looks up a localized string similar to Tentative.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TextCategory">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.The">
            <summary>
              Looks up a localized string similar to Th_e.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Third">
            <summary>
              Looks up a localized string similar to third.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TileViewItemMaximizeText">
            <summary>
              Looks up a localized string similar to Maximize.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TileViewItemMinimizeText">
            <summary>
              Looks up a localized string similar to Minimize.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Timeline">
            <summary>
              Looks up a localized string similar to _Timeline.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TimeMarkers">
            <summary>
              Looks up a localized string similar to TimeMarkers.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TransformCategory">
            <summary>
              Looks up a localized string similar to Transform.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TreeViewDropAfter">
            <summary>
              Looks up a localized string similar to Drop after .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TreeViewDropBefore">
            <summary>
              Looks up a localized string similar to Drop before .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TreeViewDropIn">
            <summary>
              Looks up a localized string similar to Drop in .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TreeViewDropRoot">
            <summary>
              Looks up a localized string similar to Drop as root.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Untitled">
            <summary>
              Looks up a localized string similar to Untitled.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadAcceptableDropEntities">
            <summary>
              Looks up a localized string similar to Only Files and Folders are accepted as Drop-data..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadBrowse">
            <summary>
              Looks up a localized string similar to Browse.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadBrowseAppend">
            <summary>
              Looks up a localized string similar to Add more files.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadBufferSizeSoBig">
            <summary>
              Looks up a localized string similar to BufferSize too big. Please set it to a smaller value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadCancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadCaptionSelect">
            <summary>
              Looks up a localized string similar to Select files to upload.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadCaptionSelected">
            <summary>
              Looks up a localized string similar to Selected Files:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadCaptionUploaded">
            <summary>
              Looks up a localized string similar to Upload Done.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadCaptionUploading">
            <summary>
              Looks up a localized string similar to Uploading....
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadForbiddenDropEntities">
            <summary>
              Looks up a localized string similar to Can not upload an entity of type .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadHandlerNotFoundOrFailed">
            <summary>
              Looks up a localized string similar to Handler not found or execution of the handler failed!.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadItemDismissed">
            <summary>
              Looks up a localized string similar to Item dismissed..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadPause">
            <summary>
              Looks up a localized string similar to Pause.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadRestriction">
            <summary>
              Looks up a localized string similar to Some of selected files are restricted by:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadRestrictionCount">
            <summary>
              Looks up a localized string similar to Max number of uploaded files;.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadRestrictionSize">
            <summary>
              Looks up a localized string similar to Max file size;.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadRestrictionTotalSize">
            <summary>
              Looks up a localized string similar to Total size of all uploaded files;.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadResume">
            <summary>
              Looks up a localized string similar to Resume.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadTotal">
            <summary>
              Looks up a localized string similar to Total.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadUnknownError">
            <summary>
              Looks up a localized string similar to Unknown error!.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadUpload">
            <summary>
              Looks up a localized string similar to Upload.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadUploadServiceUrlInvalidPropertyValue">
            <summary>
              Looks up a localized string similar to Invalid upload url. Please make sure the url is absolute!.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadUploadServiceUrlSetProperty">
            <summary>
              Looks up a localized string similar to Property UploadServiceUrl not set.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Week">
            <summary>
              Looks up a localized string similar to _Week.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WeekDays">
            <summary>
              Looks up a localized string similar to weekday.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WeekendDays">
            <summary>
              Looks up a localized string similar to weekend day.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Weekly">
            <summary>
              Looks up a localized string similar to _Weekly.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WeekShort">
            <summary>
              Looks up a localized string similar to W.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WeeksOn">
            <summary>
              Looks up a localized string similar to week(s) on:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Yearly">
            <summary>
              Looks up a localized string similar to _Yearly.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionControl.FluidResizePresenter">
            <summary>
            Represents a presenter that changes its size smoothly when its content is resized.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.FluidResizePresenter.DurationProperty">
            <summary>
            Identifies the Duration property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.FluidResizePresenter.EasingProperty">
            <summary>
            Identifies the Easing property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.FluidResizePresenter.#ctor">
            <summary>
            Initializes a new instance of the FluildResizePresenter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.FluidResizePresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes
            can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">
            The available size that this object can give to child objects. Infinity (System.Double.PositiveInfinity)
            can be specified as a value to indicate that the object will size to whatever
            content is available.
            </param>
            <returns>
            The size that this object determines it needs during layout, based on its
            calculations of the allocated sizes for child objects; or based on other
            considerations, such as a fixed container size.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.FluidResizePresenter.Duration">
            <summary>
            Gets or sets the duration of the animation. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.FluidResizePresenter.Easing">
            <summary>
            Gets or sets a value describing the easing function to be used for the animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionControl.Transition">
            <summary>
            Abstract class that represents a transition between two visual.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.Transition.ProgressProperty">
            <summary>
            Identifies the Progress property. When its value is 0.0 the effect shows the initial state of the transition, when 1.0 - the final state.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.Transition.OnProgressChanged(System.Double,System.Double)">
            <summary>
            This method is called when the progress of the transition is changed. When overriden it should take care of moving the transition.
            </summary>
            <param name="oldProgress">The old progress of the transition.</param>
            <param name="newProgress">The new progress of the transition.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.Transition.OnInitialized">
            <summary>
            This method is called when the Transition is initialized. When overriden it should do some custom initialization task for the transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.Transition.OnCleanUp">
            <summary>
            This method is called when the Transition is cleaned-up. When overriden it should do some custom clean-up task for the transition.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.Transition.Progress">
            <summary>
            Gets or sets the Progress variable within the shader.
            When its value is 0.0 the effect shows the initial state of the transition, when 1.0 - the final state.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.Transition.CurrentContentPresenter">
            <summary>
            Gets or sets the visual object that represents the current content of the transition.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.Transition.OldContentPresenter">
            <summary>
            Gets or sets the visual object that represents the old content of the transition.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionControl.TransitionEffect">
            <summary>
            Abstract class that represents a transition effect.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionEffect.ProgressProperty">
            <summary>
            Identifies the Progress property. When its value is 0.0 the effect shows the initial state of the transition, when 1.0 - the final state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionEffect.CurrentSamplerProperty">
            <summary>
            Identifies the CurrentSampler property.
            Brush-valued properties turn into sampler-property in the shader.
            Represents the image present in the final state of the transition.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionEffect.OldSamplerProperty">
            <summary>
            Identifies the OldSampler property.
            Brush-valued properties turn into sampler-property in the shader.
            Represents the image present in the initial state of the transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionEffect.#ctor">
            <summary>
            Initializes a new instance of the TransitonEffect class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionEffect.LoadShader">
            <summary>
            When overriden this method should load the shader and return it.
            </summary>
            <returns>The newly loaded shader.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionEffect.PackUri``1(System.String)">
            <summary>
            Creates an Uri for resource by its full path and using the assembly name of the class specified by the type parameter T.
            </summary>
            <typeparam name="T">The type that will be used to determine the assembly name.</typeparam>
            <param name="relativeFile">The relative path to the resource file.</param>
            <returns>An Uri that points the resource.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionEffect.OnProgressChanged(System.Double,System.Double)">
            <summary>
            This method is called when the progress of the transition is changed. When overriden it should take care of moving the transition.
            </summary>
            <param name="oldProgress">The old progress of the transition.</param>
            <param name="newProgress">The new progress of the transition.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionEffect.CurrentSampler">
            <summary>
            Gets or sets the CurrentSampler variable within the shader.
            Represents the image present in the final state of the transition.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionEffect.OldSampler">
            <summary>
            Gets or sets the OldSampler variable within the shader.
            Represents the image present in the initial state of the transition.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionEffect.Progress">
            <summary>
            Gets or sets the Progress variable within the shader.
            When its value is 0.0 the effect shows the initial state of the transition, when 1.0 - the final state.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadTransitionControl">
            <summary>
            This class represents a ContentControl that changes its content with a transition.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTransitionControl.EasingProperty">
            <summary>
            Identifies the AnimationEasing property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTransitionControl.TransitionProperty">
            <summary>
            Identifies the Transition property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTransitionControl.DurationProperty">
            <summary>
            Identifies the Duration property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTransitionControl.IsTransitioningProperty">
            <summary>
            Identifies the IsTransitioning property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.#ctor">
            <summary>
            Initializes a new instance of the RadTransitionControl class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code
             or internal processes (such as a rebuilding layout pass) call System.Windows.Controls.Control.ApplyTemplate().
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.PrepareAnimation">
            <summary>
            Prepares to play the transition animation. The animation will be started after the next Measure pass. 
            This method is called right before the content is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.StartAnimation">
            <summary>
            Starts the animation asynchronously if an animation is prepared. If no animation is prepared it
            doesn't start anything.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the System.Windows.Controls.ContentControl.Content
            property changes.
            </summary>
            <param name="oldContent">The old value of the System.Windows.Controls.ContentControl.Content property.</param>
            <param name="newContent">The new value of the System.Windows.Controls.ContentControl.Content property.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransitionControl.IsTransitioning">
            <summary>
            Gets or sets a value, describing is the transition currently running or not. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransitionControl.Easing">
            <summary>
            Gets or sets a value describing the easing function to be used for the transition animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransitionControl.Transition">
            <summary>
            Gets or sets a value, describing the the transition effect to be used for the transition. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransitionControl.Duration">
            <summary>
            Gets or sets the duration of the animation. This is a DependencyProperty.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.BaseTransitionEffect">
            <summary>
            Abstract class that represents a transition effect. This class defines a ShaderProgress property that is passed to the loaded shader and synchronizes it with the Progress property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.BaseTransitionEffect.ShaderProgressProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShaderProgress.  This enables animation, styling, binding, etc...
            Double used to represent state of Transition from start to finish.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.BaseTransitionEffect.#ctor">
            <summary>
            Updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.BaseTransitionEffect.LoadShader">
            <summary>
            When overriden this method should load the shader and return it.
            </summary>
            <returns>The newly loaded shader.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.BaseTransitionEffect.OnProgressChanged(System.Double,System.Double)">
            <summary>
            This method is called when the progress of the transition is changed. When overriden it should take care of moving the transition forward.
            In this implementation it updates the ShaderProgress property.
            </summary>
            <param name="oldProgress">The old progress of the transition.</param>
            <param name="newProgress">The new progress of the transition.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.BaseTransitionEffect.ShaderProgress">
            <summary>
            Gets or sets the Progress variable within the shader.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.FadeClrTransition">
            <summary>
            This class represents a transition between two visual. The transition fades between the two visuals.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.FadeClrTransition.OnProgressChanged(System.Double,System.Double)">
            <summary>
            This method is called when the progress of the transition is changed. When overriden it should take care of moving the transition.
            </summary>
            <param name="oldProgress">The old progress of the transition.</param>
            <param name="newProgress">The new progress of the transition.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomCLRTransition">
            <summary>
            Represents a Slide and zoom transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomCLRTransition.#ctor(Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransition)">
            <summary>
            Creates a new instance of the SlideAndZoomCLRTransition class.
            </summary>
            <param name="provider">The provider that created the instance.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomCLRTransition.OnInitialized">
            <summary>
            This method is called when the Transition is initialized. When overriden it should do some custom initialization task for the transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomCLRTransition.OnCleanUp">
            <summary>
            This method is called when the Transition is cleaned-up. When overriden it should do some custom clean-up task for the transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomCLRTransition.OnProgressChanged(System.Double,System.Double)">
            <summary>
            This method is called when the progress of the transition is changed. When overriden it should take care of moving the transition.
            </summary>
            <param name="oldProgress">The old progress of the transition.</param>
            <param name="newProgress">The new progress of the transition.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionEffect">
            <summary>
            This class is a concreate implementation of a transition effect that makes motion blurred zoom effect.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.PixelateTransitionEffect">
            <summary>
            This class is a concreate implementation of a transition effect that makes motion blurred zoom effect.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PixelateTransitionEffect.MinimumPixels">
            <summary>The minimum count of pixels in line and row that will be displayed during the transition.</summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PixelateTransitionEffect.IsPixelLED">
            <summary>Use shaded round LED points for pixels. If false the transition uses rectangles.</summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomEffect">
            <summary>
            This class is a concreate implementation of a transition effect that makes motion blurred zoom effect.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomEffect.Center">
            <summary>Center point of the motion blur</summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomEffect.InBlurRatio">
            <summary>Blur ratio for ingoing image</summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomEffect.OutBlurRatio">
            <summary>Blur ratio for outgoing image</summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomEffect.Samples">
            <summary>Blur sampling (should be int but current shaders does not support it as input)</summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.RollSizeProperty">
            <summary>
            Identifies the RollSize property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.LightIntensityProperty">
            <summary>
            Identifies the LightIntensity property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.RelativeRollWidthProperty">
            <summary>
            Identifies the RelativeRollWidth property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.InterpolationFunctionProperty">
            <summary>
            Identifies the InterpolationFunction property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.IsRollOutProperty">
            <summary>
            Identifies the IsRollOut property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.IsTopToBottomProperty">
            <summary>
            Identifies the IsTopToBottom property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.OrientationProperty">
            <summary>
            Identifies the Orientation property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.#ctor">
            <summary>
            Initializes a new instance of the FadeTransitionEffect class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.RollSize">
            <summary>
            Gets or sets a value, describing the the size of the roll (0 to 1). This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.LightIntensity">
            <summary>
            Gets or sets a value, describing the the intensity of the light over the roll (0 to 1). This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.RelativeRollWidth">
            <summary>
            Gets or sets a value, describing the the width of the roll, depending on its size (0 to 1). This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.InterpolationFunction">
            <summary>
            Gets or sets a value, describing the the power of the interpolatin function of the edges of the roll (2 to 10). This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.IsRollOut">
            <summary>
            Gets or sets a value, describing the transition direction. This is a DependencyProperty.
            </summary>
            <value>True if the animation is rolling in, false otherwize.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.IsTopToBottom">
            <summary>
            Gets or sets a value, describing the direction of the transition (top-to-bottom or bottom-to-top). This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransitionEffect.Orientation">
            <summary>
            Gets or sets a value, describing the orientation of the transition. This is a DependencyProperty.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.MinZoomProperty">
            <summary>
            Identifies the MinZoom property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.MinAlphaProperty">
            <summary>
            Identifies the MinAlpha property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.StartSlideAtProperty">
            <summary>
            Identifies the StartSlideAt property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.#ctor">
            <summary>
            Initializes a new instance of the FadeTransitionEffect class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.LoadShader">
            <summary>
            When overriden this method should load the shader and return it.
            </summary>
            <returns>The newly loaded shader.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.OnProgressChanged(System.Double,System.Double)">
            <summary>
            This method is called when the progress of the transition is changed. When overriden it should take care of moving the transition.
            </summary>
            <param name="oldProgress">The old progress of the transition.</param>
            <param name="newProgress">The new progress of the transition.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.MinZoom">
            <summary>
            Gets or sets the minimum zoom to be applied when zooming out.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.MinAlpha">
            <summary>
            Gets or sets the minimum alpha to be applied when sliding out.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.StartSlideAt">
            <summary>
            Gets or sets the starting progress of the slide effect.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.XOffset1">
            <summary>
            Gets or sets the X offset of the new content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.YOffset1">
            <summary>
            Gets or sets the Y offset of the new content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.Zoom1">
            <summary>
            Gets or sets the zoom of the new content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.Alpha1">
            <summary>
            Gets or sets the aplpha of the new content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.XOffset2">
            <summary>
            Gets or sets the X offset of the old content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.YOffset2">
            <summary>
            Gets or sets the Y offset of the old content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.Zoom2">
            <summary>
            Gets or sets the zoom of the old content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransitionEffect.Alpha2">
            <summary>
            Gets or sets the alpha of the old content.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>	
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect.#ctor">
            <summary>
            Initializes a new instance of the FadeTransitionEffect class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect.LoadShader">
            <summary>
            When overriden this method should load the shader and return it.
            </summary>
            <returns>The newly loaded shader.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect.OnProgressChanged(System.Double,System.Double)">
            <summary>
            This method is called when the progress of the transition is changed. When overriden it should take care of moving the transition.
            </summary>
            <param name="oldProgress">The old progress of the transition.</param>
            <param name="newProgress">The new progress of the transition.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect.Left0">
            <summary>
            Gets or sets the X coordinate of the first point at the left side (from top to bottom).
            </summary>		
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect.Left1">
            <summary>
            Gets or sets the X coordinate of the second point at the left side (from top to bottom).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect.Left2">
            <summary>
            Gets or sets the X coordinate of the third point at the left side (from top to bottom).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect.Left3">
            <summary>
            Gets or sets the X coordinate of the last point at the left side.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect.Right0">
            <summary>
            Gets or sets the X coordinate of the first point at the right side (from top to bottom).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect.Right1">
            <summary>
            Gets or sets the X coordinate of the second point at the right side (from top to bottom).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect.Right2">
            <summary>
            Gets or sets the X coordinate of the third point at the right side (from top to bottom).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransitionEffect.Right3">
            <summary>
            Gets or sets the X coordinate of the last point at the right side.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.RotationDirection">
            <summary>
            Specify the direction of the rotation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.RotationDirection.Left">
            <summary>
            Rotate around the Y axis from left to right.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.RotationDirection.Top">
            <summary>
            Rotate around the X axis from bottom to top.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.RotationDirection.Right">
            <summary>
            Rotate around the Y axis from right to left.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.RotationDirection.Bottom">
            <summary>
            Rotate around the X axis from top to bottom.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition">
            <summary>
            This class is a concreate implementation of a transition effect that rotates the content in pseudo 3D space
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransition">
            <summary>
            Base class pseudo 3D transitions.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionControl.TransitionProvider">
            <summary>
            This class represents a factory for TransitionEffects. Its main purpose is to prevent the XBAP from throwing security exceptions.
            This approach also provides a good way to not use shader instances of the shaders.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionProvider.GetTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionProvider.CreateTransition">
            <summary>
            Creates a new Transition with the current settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionProvider.CreateTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransition.CreateTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransition.OnProgressChanged(System.Double)">
            <summary>
            Override in derived class to create new 3D transition. Composit the 3D plane states in respect of the provided progress property.
            </summary>
            <param name="progress">Normalized progress from 0 - start to 1 - end.</param>
            <returns>The 3D state of the planes at the time of the given progress</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.#ctor">
            <summary>
            Initializes a new instance of the PerspectiveRotationTransition class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.OnProgressChanged(System.Double)">
            <summary>
            Composit the 3D plane states in respect of the provided progress property.
            </summary>
            <param name="progress">Normalized progress from 0 - start to 1 - end.</param>
            <returns>The 3D state of the planes at the time of the given progress</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.NewPlaneEasing">
            <summary>
            The easing of the old plane's rotation animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.OldPlaneEasing">
            <summary>
            The easing og the old plane's rotation animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.Direction">
            <summary>
            The direction of the rotation <see cref="T:Telerik.Windows.Controls.TransitionEffects.RotationDirection"/>
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.RotationLength">
            <summary>
            The degrees which the planes will rotate. Default is 180. Most meaningful are 180 and 90 but other angles may be used with proper Z-centers of rotation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.CameraDistance">
            <summary>
            The distance from the camera to the image relative to the image size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.NewPlaneCenterOfRotationX">
            <summary>
            The horizontal center of rotation of the new content plane relative to the image size. 0 is left 1 is right. Default is 0.5 - center.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.NewPlaneCenterOfRotationY">
            <summary>
            The vertical center of rotation of the new content plane relative to the image size. 0 is top 1 is bottom. Default is 0.5 - center.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.NewPlaneCenterOfRotationZ">
            <summary>
            The depth of the center of rotation of the new content plane relative to the image size. Default is 0.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.OldPlaneCenterOfRotationX">
            <summary>
            The horizontal center of rotation of the old content plane relative to the image size. 0 is left 1 is right. Default is 0.5 - center.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.OldPlaneCenterOfRotationY">
            <summary>
            The vertical center of rotation of the old content plane relative to the image size. 0 is top 1 is bottom. Default is 0.5 - center.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.OldPlaneCenterOfRotationZ">
            <summary>
            The depth of the center of rotation of the old content plane relative to the image size. Default is 0.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.NewPlaneRenderBack">
            <summary>
            Specify whether the new content plane should be rendered if the camera is looking at its back.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveRotationTransition.OldPlaneRenderBack">
            <summary>
            Specify whether the old content plane should be rendered if the camera is looking at its back.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.MappedLightTransition">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.MappedLightTransition.#ctor">
            <summary>
            Initializes a new instance of the MappedLightTransition class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.MappedLightTransition.CreateTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MappedLightTransition.Color">
            <summary>
            Sets the Color of the burning effect.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MappedLightTransition.OverBurn">
            <summary>
            Sets the overburn value. Default value is 1. 0 sets no overburn and the transition looks like fade effect. Greater than 4 goes white on most images.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MappedLightTransition.ProgressMap">
            <summary>
            A map that indicates the order of the progress of the pixels. White areas of the map transition before 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MappedLightTransition.WaveLength">
            <summary>
            Determines how fast will happen the transition of each separate pixel. Default is 1. 0 will swap the old colors with the new without transition. High values will make the transition ignore the ProgressMap. Best used with values in range 0.1 to 1.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionPlaneState">
            <summary>
            Provides a human readable state of a 3D plane. The properties are easy to understand and animate in the OnProgressChanged of a PerspectiveTransition.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionPlaneState.RotationX">
            <summary>
            The rotation around the X axis in radians.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionPlaneState.RotationY">
            <summary>
            The rotation around the Y axis in radians.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionPlaneState.RotationZ">
            <summary>
            The rotation around the Z axis in radians.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionPlaneState.CenterOfRotationX">
            <summary>
            The horizontal prosition of the center of rotation. The value is relative to the size of the image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionPlaneState.CenterOfRotationY">
            <summary>
            The vertical prosition of the center of rotation. The value is relative to the size of the image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionPlaneState.CenterOfRotationZ">
            <summary>
            The depth position of the center of rotation. The value is relative to the size of the image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionPlaneState.LocalOffsetX">
            <summary>
            The horizontal offset of the plane. The value is relative to the size of the image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionPlaneState.LocalOffsetY">
            <summary>
            The vertical offset of the plane. The value is relative to the size of the image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionPlaneState.LocalOffsetZ">
            <summary>
            The depth offset of the plane. The value is relative to the size of the image.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionState">
            <summary>
            Provides information about the planes with the old and new content in a PerspectiveTransition.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionState.CameraDistance">
            <summary>
            The distance from the camera to the display. Values less then 1 may render artifacts. Values near 2 render best perspective feeling. Large value will result in almost stereometrical projection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionState.NewPlaneTransform">
            <summary>
            Provides simplified coordinates and rotation of the plane with image of the new content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionState.OldPlaneTransform">
            <summary>
            Provides simplified coordinates and rotation of the plane with image of the old content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionState.NewPlaneColorMultiply">
            <summary>
            The color of the new image will be multiplied by this value. Default is white which does not affect the image. Transparent renders invisible. Any other color will filter the image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionState.OldPlaneColorMultiply">
            <summary>
            The color of the old image will be multiplied by this value. Default is white which does not affect the image. Transparent renders invisible. Any other color will filter the image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionState.IsNewInFrontOfOld">
            <summary>
            If true the new image is rendered in front of the old. If false the new image is behind the old.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionState.NewPlaneRenderBack">
            <summary>
            If true the plane with the new image will be rendered even if the camera is looking at its back. If false it will not be rendered if looked from behind.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PerspectiveTransitionState.OldPlaneRenderBack">
            <summary>
            If true the plane with the old image will be rendered even if the camera is looking at its back. If false it will not be rendered if looked from behind.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.PixelateTransition">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.PixelateTransition.#ctor">
            <summary>
            Initializes a new instance of the LinearFadeTransition class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.PixelateTransition.CreateTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PixelateTransition.MinimumPixels">
            <summary>
            Gets or sets the Center point of the motion blur.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.PixelateTransition.IsPixelLED">
            <summary>
            Gets or sets the Blur ratio for ingoing image.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.FadeTransition">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.FadeTransition.CreateTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransition">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.FlipWarpTransition.CreateTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransition">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransition.#ctor">
            <summary>
            Initializes a new instance of the LinearFadeTransition class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransition.CreateTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransition.Angle">
            <summary>
            Gets or sets the Angle variable within the shader.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransition.Thickness">
            <summary>
            Gets or sets the Thickness variable within the shader.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransition.Darker">
            <summary>
            Gets or sets the Darker variable within the shader.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomTransition">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomTransition.#ctor">
            <summary>
            Initializes a new instance of the LinearFadeTransition class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomTransition.CreateTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomTransition.Center">
            <summary>
            Gets or sets the Center point of the motion blur.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomTransition.InBlurRatio">
            <summary>
            Gets or sets the Blur ratio for ingoing image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomTransition.OutBlurRatio">
            <summary>
            Gets or sets the Blur ratio for outgoing image.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.MotionBlurredZoomTransition.Samples">
            <summary>
            Blur sampling (should be int).
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.RollTransition">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.RollTransition.#ctor">
            <summary>
            Initializes a new instance of the RollTransition class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.RollTransition.CreateTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransition.RollSize">
            <summary>
            Gets or sets a value, describing the the size of the roll (0 to 1). This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransition.LightIntensity">
            <summary>
            Gets or sets a value, describing the the intensity of the light over the roll (0 to 1). This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransition.RelativeRollWidth">
            <summary>
            Gets or sets a value, describing the the width of the roll, depending on its size (0 to 1). This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransition.InterpolationFunction">
            <summary>
            Gets or sets a value, describing the the power of the interpolatin function of the edges of the roll (2 to 10). This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransition.IsRollOut">
            <summary>
            Gets or sets a value, describing the transition direction. This is a DependencyProperty.
            </summary>
            <value>True if the animation is rolling in, false otherwize.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransition.IsTopToBottom">
            <summary>
            Gets or sets a value, describing the direction of the transition (top-to-bottom or bottom-to-top). This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.RollTransition.Orientation">
            <summary>
            Gets or sets a value, describing the orientation of the transition. This is a DependencyProperty.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransition">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransition.#ctor">
            <summary>
            Initializes a new instance of the SlideAndZoomTransition class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransition.CreateTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransition.CreateTransition">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransition.MinZoom">
            <summary>
            Gets or sets the minimum zoom to be applied when zooming out.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransition.MinAlpha">
            <summary>
            Gets or sets the minimum alpha to be applied.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransition.StartSlideAt">
            <summary>
            Gets or sets the starting progress of the slide effect.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.SlideAndZoomTransition.SlideDirection">
            <summary>
            Gets or sets the slide direction.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.WaveTransition">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.WaveTransition.#ctor">
            <summary>
            Initializes a new instance of the WaveTransition class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.WaveTransition.CreateTransitionEffect">
            <summary>
            Creates a new TransitionEffect with the current settings.
            </summary>
            <returns>A new instance of the TransitionEffect class.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.WaveTransition.Angle">
            <summary>
            Gets or sets the Angle variable within the shader.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.WaveTransition.Amplitude">
            <summary>
            Gets or sets the Amplitude variable within the shader.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.WaveTransition.Fade">
            <summary>
            Gets or sets the Fade variable within the shader.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.WaveTransitionEffect">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.WaveTransitionEffect.AmplitudeProperty">
            <summary>
            Using a DependencyProperty as the backing store for Thickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.WaveTransitionEffect.AngleProperty">
            <summary>
            Using a DependencyProperty as the backing store for Angle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.WaveTransitionEffect.FadeProperty">
            <summary>
            Using a DependencyProperty as the backing store for Angle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.WaveTransitionEffect.#ctor">
            <summary>
            Initializes a new instance of the FadeTransitionEffect class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.WaveTransitionEffect.Angle">
            <summary>
            Gets or sets the Angle variable within the shader.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.WaveTransitionEffect.Amplitude">
            <summary>
            Gets or sets the Amplitude variable within the shader.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.WaveTransitionEffect.Fade">
            <summary>
            Gets or sets the Fade variable within the shader.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransitionEffect">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransitionEffect.AngleProperty">
            <summary>
            Using a DependencyProperty as the backing store for Angle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransitionEffect.ThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for Thickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransitionEffect.DarkerProperty">
            <summary>
            Using a DependencyProperty as the backing store for Darker.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransitionEffect.#ctor">
            <summary>
            Initializes a new instance of the FadeTransitionEffect class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransitionEffect.Angle">
            <summary>
            Gets or sets the Angle variable within the shader.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransitionEffect.Thickness">
            <summary>
            Gets or sets the Thickness variable within the shader.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionEffects.LinearFadeTransitionEffect.Darker">
            <summary>
            Gets or sets the Darker variable within the shader.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionEffects.FadeTransitionEffect">
            <summary>
            This class is a concreate implementation of a transition effect that makes zoom and slide transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionEffects.FadeTransitionEffect.#ctor">
            <summary>
            Initializes a new instance of the FadeTransitionEffect class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionControl.TransitionPresenter">
            <summary>
            This class represents a ContentPresenter that changes its content with a transition.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.TransitionEffectProperty">
            <summary>
            Identifies the TransitionEffect property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.AnimationEasingProperty">
            <summary>
            Identifies the AnimationEasing property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.AnimationDurationProperty">
            <summary>
            Identifies the AnimationDuration property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.TransitionProperty">
            <summary>
            Identifies the Transition property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.EasingProperty">
            <summary>
            Identifies the Easing property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.DurationProperty">
            <summary>
            Identifies the Duration property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.CurrentContentProperty">
            <summary>
            Identifies the CurrentContent property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.CurrentContentTemplateProperty">
            <summary>
            Identifies the CurrentContentTemplate property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.OldContentPresenterProperty">
            <summary>
            Identifies the OldContentPresenter property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.TargetElementProperty">
            <summary>
            Identifies the TargetElement property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.OldVisualBrushProperty">
            <summary>
            Identifies the OldVisualBrush property..
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.OldVisualWidthProperty">
            <summary>
            Identifies the OldVisualWidth property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.OldVisualHeightProperty">
            <summary>
            Identifies the OldVisualHeight property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.#ctor">
            <summary>
            Initializes a new instance of the TransitionPresenter class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.SetTransitionEffect(System.Windows.DependencyObject,Telerik.Windows.Controls.TransitionControl.TransitionProvider)">
            <summary>
            Sets the value of the TransitionEffect attached property to a specified element.
            </summary>
            <param name="obj">The element which to write the property value to.</param>
            <param name="value">The value to be set to the attached property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.GetTransitionEffect(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the TransitionEffect attached property for a specified UIElement.
            </summary>
            <param name="obj">The element from which the property value is read.</param>
            <returns>The Dock property value for the element.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.SetAnimationEasing(System.Windows.DependencyObject,System.Windows.Media.Animation.IEasingFunction)">
            <summary>
            Sets the value of the AnimationEasing attached property to a specified element.
            </summary>
            <param name="obj">The element which to write the property value to.</param>
            <param name="value">The value to be set to the attached property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.GetAnimationEasing(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the AnimationEasing attached property for a specified UIElement.
            </summary>
            <param name="obj">The element from which the property value is read.</param>
            <returns>The Dock property value for the element.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.SetAnimationDuration(System.Windows.DependencyObject,System.TimeSpan)">
            <summary>
            Sets the value of the AnimationDuration attached property to a specified element.
            </summary>
            <param name="obj">The element which to write the property value to.</param>
            <param name="value">The value to be set to the attached property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.GetAnimationDuration(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the AnimationDuration attached property for a specified UIElement.
            </summary>
            <param name="obj">The element from which the property value is read.</param>
            <returns>The Dock property value for the element.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. 
            Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">
            The available size that this object can give to child objects. Infinity can
            be specified as a value to indicate that the object will size to whatever
            content is available.
            </param>
            <returns>
            The size that this object determines it needs during layout, based on its
            calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.PrepareAnimation">
            <summary>
            Prepares to play the transition animation. The animation will be started after the next Measure pass. 
            This method is called right before the content is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.StartAnimation">
            <summary>
            Starts the animation asynchronously if an animation is prepared. If no animation is prepared it
            doesn't start anything.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.Transition">
            <summary>
            Gets or sets a value, describing the the transition effect to be used for the transition. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.Easing">
            <summary>
            Gets or sets a value describing the easing function to be used for the transition animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.CurrentContent">
            <summary>
            Gets or sets a the content of the ContentPresenter. This property is needed as a proxy between the actual Content to 
            let the transition logic to take a snapshot of the old content. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.Duration">
            <summary>
            Gets or sets the duration of the animation. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.CurrentContentTemplate">
            <summary>
            Gets or sets a the content template of the ContentPresenter. This property is needed as a proxy between the actual ContentTemplate
            to let the transition logic to take a snapshot of the content with the old template. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.OldVisualBrush">
            <summary>
            Gets or sets a value, describing the texture to be used as initial when transitioning. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.OldVisualWidth">
             <summary>
            Gets or sets a value, describing the Width of the old content when transitioning. This is a DependencyProperty.
             </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.OldVisualHeight">
            <summary>
            Gets or sets a value, describing the Height of the old content when transitioning. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.OldContentPresenter">
            <summary>
            Gets or sets a value identifing the element to be used as an old content for 
            the transition animation when not using a shader effect.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.TransitionControl.TransitionPresenter.TargetElement">
            <summary>
            Gets or sets a value identifing the element to be used for the transition animation - 
            both for the snapshot and for applying the Effect.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.VisibilityToBooleanConverter">
            <summary>
            Represents the converter that converts Visibility enumeration values to and from Boolean values.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.VisibilityToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.VisibilityToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.RadWatermarkTextBox">
            <summary>
            This class represents a TextBox that shows a different content when empty and not focus.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWatermarkTextBox.WatermarkTemplateProperty">
            <summary>
            Identifies the WatermarkTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWatermarkTextBox.WatermarkContentProperty">
            <summary>
            Identifies the WatermarkContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWatermarkTextBox.CurrentTextProperty">
            <summary>
            Identifies the CurrentText dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWatermarkTextBox.SelectionOnFocusProperty">
            <summary>
            Identifies the SelectionOnFocus property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWatermarkTextBox.IsWatermarkVisibleProperty">
            <summary>
            Identifies the IsWatermarkVisible dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWatermarkTextBox.#ctor">
            <summary>
            Initializes a new instance of the RadWatermarkTextBox class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWatermarkTextBox.Telerik#Windows#Controls#IThemable#ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWatermarkTextBox.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code
            or internal processes (such as a rebuilding layout pass) call System.Windows.Controls.Control.ApplyTemplate().
            In simplest terms, this means the method is called just before a UI element
            displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWatermarkTextBox.WatermarkContent">
            <summary>
            Gets or sets the content to be shown when the TextBox is empty and not focused.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWatermarkTextBox.WatermarkTemplate">
            <summary>
            Gets or sets the template for presenting the content, shown when the TextBox is empty and not focused.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWatermarkTextBox.CurrentText">
            <summary>
            Gets or sets the text of the TextBox.
            This property is meant to be used for TwoWay binding in order to be 
            updated on each change of the text and not when the focus is lost.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWatermarkTextBox.IsWatermarkVisible">
            <summary>
            Gets a value indicating whether the Watermark is visible or not.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWatermarkTextBox.SelectionOnFocus">
            <summary>
            Specifies the modification over the selection when the control receives focus.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionOnFocus">
            <summary>
            Specifies the selection modification when the control is focus.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionOnFocus.Unchanged">
            <summary>
            Selection will not be modified.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionOnFocus.SelectAll">
            <summary>
            The whole text will be selected.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionOnFocus.CaretToBeginning">
            <summary>
            The caret will be moved at the start of the text.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionOnFocus.CaretToEnd">
            <summary>
            The caret will be moved at the end of the text.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionOnFocus.Default">
            <summary>
            The default.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionOnFocus.DefaultSelectAll">
            <summary>
            Default will be used when focusing the control with mouse click.
            SelectAll will be used when focusing the control with the Tab key.
            </summary>
        </member>
        <member name="T:System.Windows.CanExecuteChangedEventManager">
            <summary>
            Provides a WeakEventManager implementation so that you can use the "weak event listener" pattern to attach listeners for the ICommand.CanExecuteChanged events.
            </summary>
        </member>
        <member name="T:System.Windows.WeakEventManager`1">
            <summary>
            Provides a base class for the event manager that is used in the weak event pattern. The manager adds and removes listeners for events (or callbacks) that also use the pattern.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.#ctor">
            <summary>
            Initializes base class values when it is used as the initializer by the constructor of a derived class. 
            </summary>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.CheckForNull(System.Object,System.String)">
            <summary>
            Helper method that throw ArgumentNullException if given source is null.
            </summary>
            <param name="source">The element that is check for null.</param>
            <param name="argumentName">The name that should be passed to ArgumentNullException constructor.</param>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.StartListening(System.Object)">
            <summary>
            When overridden in a derived class, starts listening for the event being managed. After the StartListening method is first called, the manager should be in the state of calling DeliverEvent or DeliverEventToList whenever the relevant event from the provided source is handled.
            </summary>
            <param name="source">The source to begin listening on.</param>
            <remarks>Notes to Inheritors
            StartListening overrides should add a handler to the provided source. The handler is declared by the manager itself.
            The class handler should not be public, and it should only be called in response to the event being managed.
            The class handler should call the DeliverEvent method or the DeliverEventToList method appropriately.
            </remarks>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.StopListening(System.Object)">
            <summary>
            When overridden in a derived class, stops listening on the provided source for the event being managed.
            </summary>
            <param name="source">The source to stop listening on.</param>
            <remarks>Notes to Inheritors
            StopListening implementations should remove the class handler as added by the StartListening method.
            Removing a listener should not clear the listener list. Instead, it should only disconnect the class handler (perhaps temporarily).
            </remarks>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.ProtectedAddListener(`0,System.Windows.IWeakEventListener)">
            <summary>
            Adds the provided listener to the provided source for the event being managed.
            </summary>
            <param name="source">The source to attach listeners to.</param>
            <param name="listener">The listening class (which must implement IWeakEventListener).</param>
            <remarks>Call this method within your manager class AddListener methods on WeakEventManager implementations.
            AddListener is the suggested name for the static method you define on your manager class to enable other classes to add a listener for your weak event pattern.
            AddListener should take two parameters: the source where the listener is attached, and the listener instance.
            For your AddListener implementation, call the ProtectedAddListener method on the current manager and pass the same two parameters.
            If the list of listeners was previously empty, ProtectedAddListener calls the StartListening method internally, which will call your specific StartListening override through polymorphism.
            ProtectedAddListener adds listeners to a single internal WeakEventManager.ListenerList per source. If your manager implementation maintains more than one list of listeners for each event-source combination, do not use ProtectedAddListener.
            Instead, your implementation should create its own WeakEventManager.ListenerList instances, AddListener should add listeners to the appropriate list, and events should be delivered to the appropriate listener list by calling the DeliverEventToList event instead of the DeliverEvent method.
            </remarks>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.ProtectedRemoveListener(`0,System.Windows.IWeakEventListener)">
            <summary>
            Removes a previously added listener from the provided source.
            </summary>
            <param name="source">The source to remove listeners from.</param>
            <param name="listener">The listening class (which must implement IWeakEventListener).</param>
            <remarks>Call this method within your manager class RemoveListener methods on WeakEventManager implementations.
            RemoveListener is the suggested name for the static method you define on your manager class to enable other classes to remove a listener for your weak event pattern.
            RemoveListener should take two parameters: the source where the listener is removed, and the listener class. For your RemoveListener implementation, call the ProtectedRemoveListener method on the current manager and pass the same two parameters.
            If a call to ProtectedRemoveListener removes the last listener in the list, ProtectedRemoveListener calls the StopListening method internally, which will call your specific StopListening override through polymorphism.
            ProtectedRemoveListener removes listeners from a single internal WeakEventManager.ListenerList per source. If your manager implementation maintains more than one list of listeners for each event-source combination, do not use ProtectedRemoveListener.
            Instead, your implementation should create its own WeakEventManager.ListenerList instances, RemoveListener should remove listeners from the appropriate list, and events should be delivered to the appropriate listener list by calling the DeliverEventToList method instead of the DeliverEvent method.
            </remarks>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager{`0}.ListenerList)">
            <summary>
            Delivers the event being managed to each listener in the provided list.
            </summary>
            <param name="sender">The object on which the event is being handled.</param>
            <param name="args">An EventArgs that contains the event data.</param>
            <param name="list">The provided ListenerList.</param>
            <remarks>This method is necessary if your manager implementation maintains separate listeners lists based on information that is captured in the event data.
            If you use this advanced technique, you must create and maintain the separate lists as part of your manager implementation, and you must provide a way to add listeners to a specific list.
            Your handler implementation that listens to the raw event must act upon the condition that you use to differentiate the lists, and deliver the event only to the appropriate list or lists.
            </remarks>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.DeliverEvent(System.Object,System.EventArgs)">
            <summary>
            Delivers the event being managed to each listener.
            </summary>
            <param name="sender">The object on which the event is being handled.</param>
            <param name="args">An EventArgs that contains the event data for the event to deliver.</param>
            <remarks>Call the DeliverEvent method from within the event handlers that are added or removed by the StartListening and StopListening implementations of subclasses.
            If you call the ProtectedAddListener method in your AddListener implementation of your class, the list of listeners receiving the event is kept in an underlying collection. (AddListener is not part of an interface or class contract. AddListener is the suggested name for the method of your manager class that calls ProtectedAddListener and adds weak event pattern listeners for the event.)
            ProtectedAddListener adds listeners to a single list. If your manager implementation maintains more than one list of listeners per event, do not use DeliverEvent or ProtectedAddListener. Instead, your implementation should create its own WeakEventManager.ListenerList instances, AddListener should add listeners to the appropriate list, and events should be delivered to the appropriate listener list by calling DeliverEventToList.
            </remarks>
        </member>
        <member name="T:System.Windows.WeakEventManager`1.ListenerList">
            <summary>
            Provides a built-in collection list for storing listeners for a WeakEventManager.
            </summary>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.ListenerList.#ctor">
            <summary>
            Initializes a new instance of the WeakEventManager.ListenerList class.
            </summary>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.ListenerList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the WeakEventManager.ListenerList class with the specified initial capacity.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.ListenerList.Add(System.Windows.IWeakEventListener)">
            <summary>
            Adds a listener item to the WeakEventManager.ListenerList.
            </summary>
            <param name="listener">The listener element to add to the WeakEventManager.ListenerList.</param>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.ListenerList.BeginUse">
            <summary>
            Declares the list to be in use. This prevents direct changes to the list during iterations of the list items.
            </summary>
            <returns>true if the list was already declared to be in use; otherwise, false.</returns>
            <remarks>A WeakEventManager implementation should call BeginUse before iterating through the list to deliver an event to the listeners, and should call EndUse when it is done.
            This prevents another caller from modifying the list while the iteration for purposes of event delivery is in progress. If the list is modified during this time, then the list is cloned.
            If the list is cloned, then PrepareForWriting returns true, which means that you have missed a recent listener change in the last delivery.
            </remarks>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.ListenerList.Clone">
            <summary>
            Creates a modifiable clone of this WeakEventManager.ListenerList.
            </summary>
            <returns>A modifiable clone of the current object.</returns>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.ListenerList.EndUse">
            <summary>
            Unlocks the locked state initiated by BeginUse.
            </summary>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.ListenerList.PrepareForWriting(System.Windows.WeakEventManager{`0}.ListenerList@)">
            <summary>
            Checks to see whether the provided list is in use, and if so, sets the list reference parameter to a copy of that list rather than the original.
            </summary>
            <param name="list">The list to check for use state and potentially copy.</param>
            <returns>true if the provided list was in use at the time of call and therefore the list parameter reference was reset to be a copy. false if the provided list was not in use, in which case the list parameter reference remains unaltered.</returns>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.ListenerList.Purge">
            <summary>
            Removes all entries from the list where the underlying reference target is a null reference.
            </summary>
            <returns>Returns true if any entries were purged; otherwise, false.</returns>
        </member>
        <member name="M:System.Windows.WeakEventManager`1.ListenerList.Remove(System.Windows.IWeakEventListener)">
            <summary>
            Removes the first occurrence of a listener item from the WeakEventManager.ListenerList.
            </summary>
            <param name="listener">The item to remove.</param>
        </member>
        <member name="P:System.Windows.WeakEventManager`1.ListenerList.Empty">
            <summary>
            Gets a value that represents an empty list for purposes of comparisons.
            </summary>
        </member>
        <member name="P:System.Windows.WeakEventManager`1.ListenerList.Count">
            <summary>
            Gets the number of items contained in the WeakEventManager.ListenerList.
            </summary>
        </member>
        <member name="P:System.Windows.WeakEventManager`1.ListenerList.IsEmpty">
            <summary>
            Gets a value that declares whether this WeakEventManager.ListenerList is empty.
            </summary>
        </member>
        <member name="P:System.Windows.WeakEventManager`1.ListenerList.Item(System.Int32)">
            <summary>
            Gets a value that declares whether this WeakEventManager.ListenerList is empty.
            </summary>
            <param name="index">The zero-based index of the listener in the list.</param>
            <returns>The item at that index, or a null reference if no item was at that index.</returns>
        </member>
        <member name="M:System.Windows.CanExecuteChangedEventManager.AddListener(System.Windows.Input.ICommand,System.Windows.IWeakEventListener)">
            <summary>
            Adds the provided listener to the list of listeners on the provided source.
            </summary>
            <param name="source">The object with the event.</param>
            <param name="listener">The object to add as a listener.</param>
        </member>
        <member name="M:System.Windows.CanExecuteChangedEventManager.RemoveListener(System.Windows.Input.ICommand,System.Windows.IWeakEventListener)">
            <summary>
            Removes the specified listener from the list of listeners on the provided source.
            </summary>
            <param name="source">The object to remove the listener from.</param>
            <param name="listener">The listener to remove.</param>
        </member>
        <member name="M:System.Windows.CanExecuteChangedEventManager.StartListening(System.Object)">
            <summary>
            Begins listening for the CanExecuteChanged event on the given source.
            </summary>
            <param name="source">The object with the event.</param>
        </member>
        <member name="M:System.Windows.CanExecuteChangedEventManager.StopListening(System.Object)">
            <summary>
            Stops listening for the CanExecuteChanged event on the given source.
            </summary>
            <param name="source">The object with the event.</param>
        </member>
        <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
            <summary>
            Provides a WeakEventManager implementation so that you can use the "weak event listener" pattern to attach listeners for the CollectionChanged event.
            </summary>
        </member>
        <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
            <summary>
            Adds the specified listener to the CollectionChanged event of the specified source. 
            </summary>
            <param name="source">The object with the event.</param>
            <param name="listener">The object to add as a listener.</param>
        </member>
        <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
            <summary>
            Removes the specified listener from the CollectionChanged event of the specified source.
            </summary>
            <param name="source">The object with the event.</param>
            <param name="listener">The listener to remove.</param>
        </member>
        <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
            <summary>
            Begins listening for the CollectionChanged event on the specified source.
            </summary>
            <param name="source">The object with the event.</param>
        </member>
        <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
            <summary>
            Stops listening for the CollectionChanged event on the specified source.
            </summary>
            <param name="source">The object with the event.</param>
        </member>
        <member name="T:System.ComponentModel.CurrentChangedEventManager">
            <summary>
            Provides a WeakEventManager implementation so that you can use the "weak event listener" pattern to attach listeners for the CurrentChanged event.
            </summary>
        </member>
        <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
            <summary>
            Adds the specified listener to the CurrentChanged event of the specified source.
            </summary>
            <param name="source">The object with the event.</param>
            <param name="listener">The object to add as a listener.</param>
        </member>
        <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
            <summary>
            Removes the specified listener from the CurrentChanged event of the specified source.
            </summary>
            <param name="source">The object with the event.</param>
            <param name="listener">The listener to remove.</param>
        </member>
        <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
            <summary>
            Begins listening for the CurrentChanged event on the specified source.
            </summary>
            <param name="source">The object with the event.</param>
        </member>
        <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
            <summary>
            Stops listening for the CurrentChanged event on the specified source.
            </summary>
            <param name="source">The object with the event.</param>
        </member>
        <member name="T:System.ComponentModel.CurrentChangingEventManager">
            <summary>
            Provides a WeakEventManager implementation so that you can use the "weak event listener" pattern to attach listeners for the CurrentChanging event.
            </summary>
        </member>
        <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
            <summary>
            Adds the specified listener to the CurrentChanging event of the specified source.
            </summary>
            <param name="source">The object with the event.</param>
            <param name="listener">The object to add as a listener.</param>
        </member>
        <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
            <summary>
            Removes the specified listener from the CurrentChanging event of the specified source.
            </summary>
            <param name="source">The object with the event.</param>
            <param name="listener">The listener to remove.</param>
        </member>
        <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
            <summary>
            Begins listening for the CurrentChanging event on the specified source.
            </summary>
            <param name="source">The object with the event.</param>
        </member>
        <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
            <summary>
            Stops listening for the CurrentChanging event on the specified source.
            </summary>
            <param name="source">The object with the event.</param>
        </member>
        <member name="T:System.Windows.IWeakEventListener">
            <summary>
            Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a WeakEventManager.
            </summary>
        </member>
        <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <summary>
            Receives events from the centralized event manager.
            </summary>
            <param name="managerType">The type of the WeakEventManager calling this method.</param>
            <param name="sender">Object that originated the event.</param>
            <param name="e">Event data.</param>
            <returns>true if the listener handled the event. It is considered an error by the WeakEventManager handling in WPF to register a listener for an event that the listener does not handle. Regardless, the method should return false if it receives an event that it does not recognize or handle.</returns>
        </member>
        <member name="T:System.Windows.LostFocusEventManager">
            <summary>
            Provides a WeakEventManager implementation so that you can use the "weak event listener" pattern to attach listeners for the UIElement.LostFocus events.
            </summary>
        </member>
        <member name="M:System.Windows.LostFocusEventManager.AddListener(System.Windows.UIElement,System.Windows.IWeakEventListener)">
            <summary>
            Adds the provided listener to the list of listeners on the provided source.
            </summary>
            <param name="source">The object with the event.</param>
            <param name="listener">The object to add as a listener.</param>
        </member>
        <member name="M:System.Windows.LostFocusEventManager.RemoveListener(System.Windows.UIElement,System.Windows.IWeakEventListener)">
            <summary>
            Removes the specified listener from the list of listeners on the provided source.
            </summary>
            <param name="source">The object to remove the listener from.</param>
            <param name="listener">The listener to remove.</param>
        </member>
        <member name="M:System.Windows.LostFocusEventManager.StartListening(System.Object)">
            <summary>
            Begins listening for the LostFocus event on the given source.
            </summary>
            <param name="source">The object on which to start listening for the pertinent LostFocus event.</param>
        </member>
        <member name="M:System.Windows.LostFocusEventManager.StopListening(System.Object)">
            <summary>
            Stops listening for the LostFocus event on the given source.
            </summary>
            <param name="source">The source object on which to stop listening for LostFocus.</param>
        </member>
        <member name="T:System.ComponentModel.PropertyChangedEventManager">
            <summary>
            Provides a WeakEventManager implementation so that you can use the "weak event listener" pattern to attach listeners for the PropertyChanged event.
            </summary>
        </member>
        <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
            <summary>
            Adds the specified listener to the list of listeners on the specified source.
            </summary>
            <param name="source">The object with the event.</param>
            <param name="listener">The object to add as a listener.</param>
            <param name="propertyName">The name of the property that exists on source upon which to listen for changes. Set to string.Empty to indicate "any property".</param>
        </member>
        <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
            <summary>
            Removes the specified listener from the list of listeners on the provided source.
            </summary>
            <param name="source">The object to remove the listener from.</param>
            <param name="listener">The listener to remove.</param>
            <param name="propertyName">The name of the property that exists on source upon which to stop listening for changes. Set to string.Empty to indicate "any property".</param>
        </member>
        <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
            <summary>
            Begins listening for the PropertyChanged event on the provided source.
            </summary>
            <param name="source">The object on which to start listening for PropertyChanged.</param>
        </member>
        <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
            <summary>
            Stops listening for the PropertyChanged event on the provided source.
            </summary>
            <param name="source">The source object on which to stop listening for PropertyChanged.</param>
        </member>
        <member name="T:Telerik.WebUI.PopupTracker">
            <summary>
            This class keeps track of the opened popups. This is needed for the WebAii test studio.
            </summary>
        </member>
        <member name="M:Telerik.WebUI.PopupTracker.Track(System.Windows.FrameworkElement)">
            <summary>
            Starts tracking the provided ChildWindow.
            </summary>
            <param name="childWindow">The ChildWindow to be tracked.</param>
        </member>
        <member name="M:Telerik.WebUI.PopupTracker.Track(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Starts tracking the provided Popup.
            </summary>
            <param name="popup">The Popup to be tracked.</param>
        </member>
        <member name="M:Telerik.WebUI.PopupTracker.GetChildWindows">
            <summary>
            Gets all tracked ChildWindows that are currently tracked.
            </summary>
            <returns>All tracked ChildWindows that are currently tracked</returns>
        </member>
        <member name="M:Telerik.WebUI.PopupTracker.GetPopups">
            <summary>
            Gets all tracked Popups that are currently tracked.
            </summary>
            <returns>All tracked Popups that are currently tracked.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.SRCategoryAttribute">
            <exclude/>
            <excludetoc/>
            <summary>
            This attribute provides the designber with localized category string.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRCategoryAttribute.#ctor(System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Initializes a new instance of the SRCategoryAttribute class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRCategoryAttribute.GetLocalizedString(System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Returns a localized string with the given key.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SRDescriptionAttribute">
            <exclude/>
            <excludetoc/>
            <summary>
            This attribute provides the designber with localized description string.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRDescriptionAttribute.#ctor(System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Initializes a new instance of the SRDescriptionAttribute class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SRDescriptionAttribute.Description">
            <exclude/>
            <excludetoc/>
            <summary>
            Gets the text description.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SRLoader`1">
            <exclude/>
            <excludetoc/>
            <summary>
            String resource loader.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRLoader`1.GetResources(System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Returns the ResourceManager for the given namespace.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRLoader`1.GetObject(System.String,System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Returns an object from the resources with the given namespace and name.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRLoader`1.GetString(System.String,System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Returns a string from the resources with the given namespace and name.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRLoader`1.GetString(System.String,System.String,System.Object[])">
            <exclude/>
            <excludetoc/>
            <summary>
            Returns a string from the resources with the given namespace and name.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DesignerSerializationVisibility">
            <summary>
            Indicates whether the marked member should be visible to the designer serializer.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibility.Hidden">
            <summary>
            It will be hidden.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibility.Visible">
            <summary>
            It will be visible.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibility.Content">
            <summary>
            It will act as a content.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
            <summary>
            This class will be ignred by the designer and is included for WPF code compatibility.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
            <summary>
            Returns an instance with Visibility set Content.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
            <summary>
            Returns an instance with Visibility set to the default value (Visible).
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
            <summary>
            Returns an instance with Visibility set Hidden.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
            <summary>
            Returns an instance with Visibility set Visible.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
            <summary>
            Initializes a new instance of the DesignerSerializationVisibilityAttribute class.
            </summary>
            <param name="visibility">The visibility.</param>
        </member>
        <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An <see cref="T:System.Object"/> to compare with this instance or null.</param>
            <returns>
            True if <paramref name="obj"/> equals the type and value of this instance; otherwise, false.
            </returns>
        </member>
        <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
            <summary>
            Gets a value indicating whether it is a default attribute.
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
            <summary>
            Gets the DesignerSerializationVisibility.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadRangeControl">
            <summary>
            The RangeControl basically represents a Slider in RangeMode, designed for navigating in large amounts of data.
            In most cases it is used as time navigation where the user can zoom in and out and move around the timeline.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRangeControl.BackgroundContentProperty">
            <summary>
            Identifies the BackgroundContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRangeControl.SelectionLengthProperty">
            <summary>
            Identifies the SelectionLength dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeControl.#ctor">
            <summary>
            Initializes a new instance of the RadRangeControl class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeControl.OnOrientationChanged">
            <summary> 
            Called when the Orientation property changes value.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRangeControl.OnSelectionChanged">
            <summary>
            Called when SelectionRange event occurs.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRangeControl.BackgroundContent">
            <summary>
            Gets or sets the content that will be displayed as a track of the slider.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRangeControl.SelectionLength">
            <summary>
            Gets or sets a value indicating the difference between the SelectionStart and SelectionEnd. This property might be used
            to directly bind it to zoom level for example.
            </summary>
        </member>
    </members>
</doc>
